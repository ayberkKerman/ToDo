{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.NamespaceContext = void 0;\n/**\n * Scope for XML namespaces\n * @param {NamespaceScope} [parent] Parent scope\n * @returns {NamespaceScope}\n * @constructor\n */\n\nvar NamespaceScope =\n/** @class */\nfunction () {\n  function NamespaceScope(parent) {\n    this.parent = parent;\n    this.namespaces = {};\n  }\n  /**\n   * Look up the namespace URI by prefix\n   * @param {String} prefix Namespace prefix\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {String} Namespace URI\n   */\n\n\n  NamespaceScope.prototype.getNamespaceURI = function (prefix, localOnly) {\n    switch (prefix) {\n      case 'xml':\n        return 'http://www.w3.org/XML/1998/namespace';\n\n      case 'xmlns':\n        return 'http://www.w3.org/2000/xmlns/';\n\n      default:\n        var nsUri = this.namespaces[prefix];\n        /*jshint -W116 */\n\n        if (nsUri != null) {\n          return nsUri.uri;\n        } else if (!localOnly && this.parent) {\n          return this.parent.getNamespaceURI(prefix);\n        } else {\n          return null;\n        }\n\n    }\n  };\n\n  NamespaceScope.prototype.getNamespaceMapping = function (prefix) {\n    switch (prefix) {\n      case 'xml':\n        return {\n          uri: 'http://www.w3.org/XML/1998/namespace',\n          prefix: 'xml',\n          declared: true\n        };\n\n      case 'xmlns':\n        return {\n          uri: 'http://www.w3.org/2000/xmlns/',\n          prefix: 'xmlns',\n          declared: true\n        };\n\n      default:\n        var mapping = this.namespaces[prefix];\n        /*jshint -W116 */\n\n        if (mapping != null) {\n          return mapping;\n        } else if (this.parent) {\n          return this.parent.getNamespaceMapping(prefix);\n        } else {\n          return null;\n        }\n\n    }\n  };\n  /**\n   * Look up the namespace prefix by URI\n   * @param {String} nsUri Namespace URI\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {String} Namespace prefix\n   */\n\n\n  NamespaceScope.prototype.getPrefix = function (nsUri, localOnly) {\n    switch (nsUri) {\n      case 'http://www.w3.org/XML/1998/namespace':\n        return 'xml';\n\n      case 'http://www.w3.org/2000/xmlns/':\n        return 'xmlns';\n\n      default:\n        for (var p in this.namespaces) {\n          if (this.namespaces[p].uri === nsUri) {\n            return p;\n          }\n        }\n\n        if (!localOnly && this.parent) {\n          return this.parent.getPrefix(nsUri);\n        } else {\n          return null;\n        }\n\n    }\n  };\n\n  return NamespaceScope;\n}();\n/**\n * Namespace context that manages hierarchical scopes\n * @returns {NamespaceContext}\n * @constructor\n */\n\n\nvar NamespaceContext =\n/** @class */\nfunction () {\n  function NamespaceContext() {\n    this.scopes = [];\n    this.pushContext();\n    this.prefixCount = 0;\n  }\n  /**\n   * Add a prefix/URI namespace mapping\n   * @param {String} prefix Namespace prefix\n   * @param {String} nsUri Namespace URI\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {boolean} true if the mapping is added or false if the mapping\n   * already exists\n   */\n\n\n  NamespaceContext.prototype.addNamespace = function (prefix, nsUri, localOnly) {\n    if (this.getNamespaceURI(prefix, localOnly) === nsUri) {\n      return false;\n    }\n\n    if (this.currentScope) {\n      this.currentScope.namespaces[prefix] = {\n        uri: nsUri,\n        prefix: prefix,\n        declared: false\n      };\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * Push a scope into the context\n   * @returns {NamespaceScope} The current scope\n   */\n\n\n  NamespaceContext.prototype.pushContext = function () {\n    var scope = new NamespaceScope(this.currentScope);\n    this.scopes.push(scope);\n    this.currentScope = scope;\n    return scope;\n  };\n  /**\n   * Pop a scope out of the context\n   * @returns {NamespaceScope} The removed scope\n   */\n\n\n  NamespaceContext.prototype.popContext = function () {\n    var scope = this.scopes.pop();\n\n    if (scope) {\n      this.currentScope = scope.parent;\n    } else {\n      this.currentScope = null;\n    }\n\n    return scope;\n  };\n  /**\n   * Look up the namespace URI by prefix\n   * @param {String} prefix Namespace prefix\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {String} Namespace URI\n   */\n\n\n  NamespaceContext.prototype.getNamespaceURI = function (prefix, localOnly) {\n    return this.currentScope && this.currentScope.getNamespaceURI(prefix, localOnly);\n  };\n  /**\n   * Look up the namespace prefix by URI\n   * @param {String} nsURI Namespace URI\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {String} Namespace prefix\n   */\n\n\n  NamespaceContext.prototype.getPrefix = function (nsUri, localOnly) {\n    return this.currentScope && this.currentScope.getPrefix(nsUri, localOnly);\n  };\n  /**\n   * Register a namespace\n   * @param {String} nsUri Namespace URI\n   * @returns {String} The matching or generated namespace prefix\n   */\n\n\n  NamespaceContext.prototype.registerNamespace = function (nsUri) {\n    var prefix = this.getPrefix(nsUri);\n\n    if (prefix) {\n      // If the namespace has already mapped to a prefix\n      return prefix;\n    } else {\n      // Try to generate a unique namespace\n      while (true) {\n        prefix = 'ns' + ++this.prefixCount;\n\n        if (!this.getNamespaceURI(prefix)) {\n          // The prefix is not used\n          break;\n        }\n      }\n    }\n\n    this.addNamespace(prefix, nsUri, true);\n    return prefix;\n  };\n  /**\n   * Declare a namespace prefix/uri mapping\n   * @param {String} prefix Namespace prefix\n   * @param {String} nsUri Namespace URI\n   * @returns {Boolean} true if the declaration is created\n   */\n\n\n  NamespaceContext.prototype.declareNamespace = function (prefix, nsUri) {\n    if (this.currentScope) {\n      var mapping = this.currentScope.getNamespaceMapping(prefix);\n\n      if (mapping && mapping.uri === nsUri && mapping.declared) {\n        return false;\n      }\n\n      this.currentScope.namespaces[prefix] = {\n        uri: nsUri,\n        prefix: prefix,\n        declared: true\n      };\n      return true;\n    }\n\n    return false;\n  };\n\n  return NamespaceContext;\n}();\n\nexports.NamespaceContext = NamespaceContext;","map":{"version":3,"names":["exports","__esModule","NamespaceContext","NamespaceScope","parent","namespaces","prototype","getNamespaceURI","prefix","localOnly","nsUri","uri","getNamespaceMapping","declared","mapping","getPrefix","p","scopes","pushContext","prefixCount","addNamespace","currentScope","scope","push","popContext","pop","registerNamespace","declareNamespace"],"sources":["C:/Users/ayber/node_modules/soap/lib/nscontext.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.NamespaceContext = void 0;\n/**\n * Scope for XML namespaces\n * @param {NamespaceScope} [parent] Parent scope\n * @returns {NamespaceScope}\n * @constructor\n */\nvar NamespaceScope = /** @class */ (function () {\n    function NamespaceScope(parent) {\n        this.parent = parent;\n        this.namespaces = {};\n    }\n    /**\n     * Look up the namespace URI by prefix\n     * @param {String} prefix Namespace prefix\n     * @param {Boolean} [localOnly] Search current scope only\n     * @returns {String} Namespace URI\n     */\n    NamespaceScope.prototype.getNamespaceURI = function (prefix, localOnly) {\n        switch (prefix) {\n            case 'xml':\n                return 'http://www.w3.org/XML/1998/namespace';\n            case 'xmlns':\n                return 'http://www.w3.org/2000/xmlns/';\n            default:\n                var nsUri = this.namespaces[prefix];\n                /*jshint -W116 */\n                if (nsUri != null) {\n                    return nsUri.uri;\n                }\n                else if (!localOnly && this.parent) {\n                    return this.parent.getNamespaceURI(prefix);\n                }\n                else {\n                    return null;\n                }\n        }\n    };\n    NamespaceScope.prototype.getNamespaceMapping = function (prefix) {\n        switch (prefix) {\n            case 'xml':\n                return {\n                    uri: 'http://www.w3.org/XML/1998/namespace',\n                    prefix: 'xml',\n                    declared: true\n                };\n            case 'xmlns':\n                return {\n                    uri: 'http://www.w3.org/2000/xmlns/',\n                    prefix: 'xmlns',\n                    declared: true\n                };\n            default:\n                var mapping = this.namespaces[prefix];\n                /*jshint -W116 */\n                if (mapping != null) {\n                    return mapping;\n                }\n                else if (this.parent) {\n                    return this.parent.getNamespaceMapping(prefix);\n                }\n                else {\n                    return null;\n                }\n        }\n    };\n    /**\n     * Look up the namespace prefix by URI\n     * @param {String} nsUri Namespace URI\n     * @param {Boolean} [localOnly] Search current scope only\n     * @returns {String} Namespace prefix\n     */\n    NamespaceScope.prototype.getPrefix = function (nsUri, localOnly) {\n        switch (nsUri) {\n            case 'http://www.w3.org/XML/1998/namespace':\n                return 'xml';\n            case 'http://www.w3.org/2000/xmlns/':\n                return 'xmlns';\n            default:\n                for (var p in this.namespaces) {\n                    if (this.namespaces[p].uri === nsUri) {\n                        return p;\n                    }\n                }\n                if (!localOnly && this.parent) {\n                    return this.parent.getPrefix(nsUri);\n                }\n                else {\n                    return null;\n                }\n        }\n    };\n    return NamespaceScope;\n}());\n/**\n * Namespace context that manages hierarchical scopes\n * @returns {NamespaceContext}\n * @constructor\n */\nvar NamespaceContext = /** @class */ (function () {\n    function NamespaceContext() {\n        this.scopes = [];\n        this.pushContext();\n        this.prefixCount = 0;\n    }\n    /**\n     * Add a prefix/URI namespace mapping\n     * @param {String} prefix Namespace prefix\n     * @param {String} nsUri Namespace URI\n     * @param {Boolean} [localOnly] Search current scope only\n     * @returns {boolean} true if the mapping is added or false if the mapping\n     * already exists\n     */\n    NamespaceContext.prototype.addNamespace = function (prefix, nsUri, localOnly) {\n        if (this.getNamespaceURI(prefix, localOnly) === nsUri) {\n            return false;\n        }\n        if (this.currentScope) {\n            this.currentScope.namespaces[prefix] = {\n                uri: nsUri,\n                prefix: prefix,\n                declared: false\n            };\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Push a scope into the context\n     * @returns {NamespaceScope} The current scope\n     */\n    NamespaceContext.prototype.pushContext = function () {\n        var scope = new NamespaceScope(this.currentScope);\n        this.scopes.push(scope);\n        this.currentScope = scope;\n        return scope;\n    };\n    /**\n     * Pop a scope out of the context\n     * @returns {NamespaceScope} The removed scope\n     */\n    NamespaceContext.prototype.popContext = function () {\n        var scope = this.scopes.pop();\n        if (scope) {\n            this.currentScope = scope.parent;\n        }\n        else {\n            this.currentScope = null;\n        }\n        return scope;\n    };\n    /**\n     * Look up the namespace URI by prefix\n     * @param {String} prefix Namespace prefix\n     * @param {Boolean} [localOnly] Search current scope only\n     * @returns {String} Namespace URI\n     */\n    NamespaceContext.prototype.getNamespaceURI = function (prefix, localOnly) {\n        return this.currentScope && this.currentScope.getNamespaceURI(prefix, localOnly);\n    };\n    /**\n     * Look up the namespace prefix by URI\n     * @param {String} nsURI Namespace URI\n     * @param {Boolean} [localOnly] Search current scope only\n     * @returns {String} Namespace prefix\n     */\n    NamespaceContext.prototype.getPrefix = function (nsUri, localOnly) {\n        return this.currentScope && this.currentScope.getPrefix(nsUri, localOnly);\n    };\n    /**\n     * Register a namespace\n     * @param {String} nsUri Namespace URI\n     * @returns {String} The matching or generated namespace prefix\n     */\n    NamespaceContext.prototype.registerNamespace = function (nsUri) {\n        var prefix = this.getPrefix(nsUri);\n        if (prefix) {\n            // If the namespace has already mapped to a prefix\n            return prefix;\n        }\n        else {\n            // Try to generate a unique namespace\n            while (true) {\n                prefix = 'ns' + (++this.prefixCount);\n                if (!this.getNamespaceURI(prefix)) {\n                    // The prefix is not used\n                    break;\n                }\n            }\n        }\n        this.addNamespace(prefix, nsUri, true);\n        return prefix;\n    };\n    /**\n     * Declare a namespace prefix/uri mapping\n     * @param {String} prefix Namespace prefix\n     * @param {String} nsUri Namespace URI\n     * @returns {Boolean} true if the declaration is created\n     */\n    NamespaceContext.prototype.declareNamespace = function (prefix, nsUri) {\n        if (this.currentScope) {\n            var mapping = this.currentScope.getNamespaceMapping(prefix);\n            if (mapping && mapping.uri === nsUri && mapping.declared) {\n                return false;\n            }\n            this.currentScope.namespaces[prefix] = {\n                uri: nsUri,\n                prefix: prefix,\n                declared: true\n            };\n            return true;\n        }\n        return false;\n    };\n    return NamespaceContext;\n}());\nexports.NamespaceContext = NamespaceContext;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}