{"ast":null,"code":"'use strict'; // Original file https://raw.githubusercontent.com/elasticio/node-ntlm-client/master/lib/ntlm.js\n\nvar os = require('os'),\n    flags = require('./flags'),\n    hash = require('./hash');\n\nvar NTLMSIGNATURE = \"NTLMSSP\\0\";\n\nfunction createType1Message(workstation, target) {\n  var dataPos = 32,\n      pos = 0,\n      buf = new Buffer.alloc(1024);\n  workstation = workstation === undefined ? os.hostname() : workstation;\n  target = target === undefined ? '' : target; //signature\n\n  buf.write(NTLMSIGNATURE, pos, NTLMSIGNATURE.length, 'ascii');\n  pos += NTLMSIGNATURE.length; //message type\n\n  buf.writeUInt32LE(1, pos);\n  pos += 4; //flags\n\n  buf.writeUInt32LE(flags.NTLMFLAG_NEGOTIATE_OEM | flags.NTLMFLAG_REQUEST_TARGET | flags.NTLMFLAG_NEGOTIATE_NTLM_KEY | flags.NTLMFLAG_NEGOTIATE_NTLM2_KEY | flags.NTLMFLAG_NEGOTIATE_ALWAYS_SIGN, pos);\n  pos += 4; //domain security buffer\n\n  buf.writeUInt16LE(target.length, pos);\n  pos += 2;\n  buf.writeUInt16LE(target.length, pos);\n  pos += 2;\n  buf.writeUInt32LE(target.length === 0 ? 0 : dataPos, pos);\n  pos += 4;\n\n  if (target.length > 0) {\n    dataPos += buf.write(target, dataPos, 'ascii');\n  } //workstation security buffer\n\n\n  buf.writeUInt16LE(workstation.length, pos);\n  pos += 2;\n  buf.writeUInt16LE(workstation.length, pos);\n  pos += 2;\n  buf.writeUInt32LE(workstation.length === 0 ? 0 : dataPos, pos);\n  pos += 4;\n\n  if (workstation.length > 0) {\n    dataPos += buf.write(workstation, dataPos, 'ascii');\n  }\n\n  return 'NTLM ' + buf.toString('base64', 0, dataPos);\n}\n\nfunction decodeType2Message(str) {\n  if (str === undefined) {\n    throw new Error('Invalid argument');\n  } //convenience\n\n\n  if (Object.prototype.toString.call(str) !== '[object String]') {\n    if (str.hasOwnProperty('headers') && str.headers.hasOwnProperty('www-authenticate')) {\n      str = str.headers['www-authenticate'];\n    } else {\n      throw new Error('Invalid argument');\n    }\n  }\n\n  var ntlmMatch = /^NTLM ([^,\\s]+)/.exec(str);\n\n  if (ntlmMatch) {\n    str = ntlmMatch[1];\n  }\n\n  var buf = new Buffer.from(str, 'base64'),\n      obj = {}; //check signature\n\n  if (buf.toString('ascii', 0, NTLMSIGNATURE.length) !== NTLMSIGNATURE) {\n    throw new Error('Invalid message signature: ' + str);\n  } //check message type\n\n\n  if (buf.readUInt32LE(NTLMSIGNATURE.length) !== 2) {\n    throw new Error('Invalid message type (no type 2)');\n  } //read flags\n\n\n  obj.flags = buf.readUInt32LE(20);\n  obj.encoding = obj.flags & flags.NTLMFLAG_NEGOTIATE_OEM ? 'ascii' : 'ucs2';\n  obj.version = obj.flags & flags.NTLMFLAG_NEGOTIATE_NTLM2_KEY ? 2 : 1;\n  obj.challenge = buf.slice(24, 32); //read target name\n\n  obj.targetName = function () {\n    var length = buf.readUInt16LE(12); //skipping allocated space\n\n    var offset = buf.readUInt32LE(16);\n\n    if (length === 0) {\n      return '';\n    }\n\n    if (offset + length > buf.length || offset < 32) {\n      throw new Error('Bad type 2 message');\n    }\n\n    return buf.toString(obj.encoding, offset, offset + length);\n  }(); //read target info\n\n\n  if (obj.flags & flags.NTLMFLAG_NEGOTIATE_TARGET_INFO) {\n    obj.targetInfo = function () {\n      var info = {};\n      var length = buf.readUInt16LE(40); //skipping allocated space\n\n      var offset = buf.readUInt32LE(44);\n      var targetInfoBuffer = new Buffer.alloc(length);\n      buf.copy(targetInfoBuffer, 0, offset, offset + length);\n\n      if (length === 0) {\n        return info;\n      }\n\n      if (offset + length > buf.length || offset < 32) {\n        throw new Error('Bad type 2 message');\n      }\n\n      var pos = offset;\n\n      while (pos < offset + length) {\n        var blockType = buf.readUInt16LE(pos);\n        pos += 2;\n        var blockLength = buf.readUInt16LE(pos);\n        pos += 2;\n\n        if (blockType === 0) {\n          //reached the terminator subblock\n          break;\n        }\n\n        var blockTypeStr = void 0;\n\n        switch (blockType) {\n          case 1:\n            blockTypeStr = 'SERVER';\n            break;\n\n          case 2:\n            blockTypeStr = 'DOMAIN';\n            break;\n\n          case 3:\n            blockTypeStr = 'FQDN';\n            break;\n\n          case 4:\n            blockTypeStr = 'DNS';\n            break;\n\n          case 5:\n            blockTypeStr = 'PARENT_DNS';\n            break;\n\n          default:\n            blockTypeStr = '';\n            break;\n        }\n\n        if (blockTypeStr) {\n          info[blockTypeStr] = buf.toString('ucs2', pos, pos + blockLength);\n        }\n\n        pos += blockLength;\n      }\n\n      return {\n        parsed: info,\n        buffer: targetInfoBuffer\n      };\n    }();\n  }\n\n  return obj;\n}\n\nfunction createType3Message(type2Message, username, password, workstation, target) {\n  var dataPos = 52,\n      buf = new Buffer.alloc(1024);\n\n  if (workstation === undefined) {\n    workstation = os.hostname();\n  }\n\n  if (target === undefined) {\n    target = type2Message.targetName;\n  } //signature\n\n\n  buf.write(NTLMSIGNATURE, 0, NTLMSIGNATURE.length, 'ascii'); //message type\n\n  buf.writeUInt32LE(3, 8);\n\n  if (type2Message.version === 2) {\n    dataPos = 64;\n    var ntlmHash = hash.createNTLMHash(password),\n        nonce = hash.createPseudoRandomValue(16),\n        lmv2 = hash.createLMv2Response(type2Message, username, ntlmHash, nonce, target),\n        ntlmv2 = hash.createNTLMv2Response(type2Message, username, ntlmHash, nonce, target); //lmv2 security buffer\n\n    buf.writeUInt16LE(lmv2.length, 12);\n    buf.writeUInt16LE(lmv2.length, 14);\n    buf.writeUInt32LE(dataPos, 16);\n    lmv2.copy(buf, dataPos);\n    dataPos += lmv2.length; //ntlmv2 security buffer\n\n    buf.writeUInt16LE(ntlmv2.length, 20);\n    buf.writeUInt16LE(ntlmv2.length, 22);\n    buf.writeUInt32LE(dataPos, 24);\n    ntlmv2.copy(buf, dataPos);\n    dataPos += ntlmv2.length;\n  } else {\n    var lmHash = hash.createLMHash(password),\n        ntlmHash = hash.createNTLMHash(password),\n        lm = hash.createLMResponse(type2Message.challenge, lmHash),\n        ntlm = hash.createNTLMResponse(type2Message.challenge, ntlmHash); //lm security buffer\n\n    buf.writeUInt16LE(lm.length, 12);\n    buf.writeUInt16LE(lm.length, 14);\n    buf.writeUInt32LE(dataPos, 16);\n    lm.copy(buf, dataPos);\n    dataPos += lm.length; //ntlm security buffer\n\n    buf.writeUInt16LE(ntlm.length, 20);\n    buf.writeUInt16LE(ntlm.length, 22);\n    buf.writeUInt32LE(dataPos, 24);\n    ntlm.copy(buf, dataPos);\n    dataPos += ntlm.length;\n  } //target name security buffer\n\n\n  buf.writeUInt16LE(type2Message.encoding === 'ascii' ? target.length : target.length * 2, 28);\n  buf.writeUInt16LE(type2Message.encoding === 'ascii' ? target.length : target.length * 2, 30);\n  buf.writeUInt32LE(dataPos, 32);\n  dataPos += buf.write(target, dataPos, type2Message.encoding); //user name security buffer\n\n  buf.writeUInt16LE(type2Message.encoding === 'ascii' ? username.length : username.length * 2, 36);\n  buf.writeUInt16LE(type2Message.encoding === 'ascii' ? username.length : username.length * 2, 38);\n  buf.writeUInt32LE(dataPos, 40);\n  dataPos += buf.write(username, dataPos, type2Message.encoding); //workstation name security buffer\n\n  buf.writeUInt16LE(type2Message.encoding === 'ascii' ? workstation.length : workstation.length * 2, 44);\n  buf.writeUInt16LE(type2Message.encoding === 'ascii' ? workstation.length : workstation.length * 2, 46);\n  buf.writeUInt32LE(dataPos, 48);\n  dataPos += buf.write(workstation, dataPos, type2Message.encoding);\n\n  if (type2Message.version === 2) {\n    //session key security buffer\n    buf.writeUInt16LE(0, 52);\n    buf.writeUInt16LE(0, 54);\n    buf.writeUInt32LE(0, 56); //flags\n\n    buf.writeUInt32LE(type2Message.flags, 60);\n  }\n\n  return 'NTLM ' + buf.toString('base64', 0, dataPos);\n}\n\nmodule.exports = {\n  createType1Message: createType1Message,\n  decodeType2Message: decodeType2Message,\n  createType3Message: createType3Message\n};","map":{"version":3,"names":["os","require","flags","hash","NTLMSIGNATURE","createType1Message","workstation","target","dataPos","pos","buf","Buffer","alloc","undefined","hostname","write","length","writeUInt32LE","NTLMFLAG_NEGOTIATE_OEM","NTLMFLAG_REQUEST_TARGET","NTLMFLAG_NEGOTIATE_NTLM_KEY","NTLMFLAG_NEGOTIATE_NTLM2_KEY","NTLMFLAG_NEGOTIATE_ALWAYS_SIGN","writeUInt16LE","toString","decodeType2Message","str","Error","Object","prototype","call","hasOwnProperty","headers","ntlmMatch","exec","from","obj","readUInt32LE","encoding","version","challenge","slice","targetName","readUInt16LE","offset","NTLMFLAG_NEGOTIATE_TARGET_INFO","targetInfo","info","targetInfoBuffer","copy","blockType","blockLength","blockTypeStr","parsed","buffer","createType3Message","type2Message","username","password","ntlmHash","createNTLMHash","nonce","createPseudoRandomValue","lmv2","createLMv2Response","ntlmv2","createNTLMv2Response","lmHash","createLMHash","lm","createLMResponse","ntlm","createNTLMResponse","module","exports"],"sources":["C:/Users/ayber/node_modules/axios-ntlm/lib/ntlm.js"],"sourcesContent":["'use strict';\n// Original file https://raw.githubusercontent.com/elasticio/node-ntlm-client/master/lib/ntlm.js\nvar os = require('os'), flags = require('./flags'), hash = require('./hash');\nvar NTLMSIGNATURE = \"NTLMSSP\\0\";\nfunction createType1Message(workstation, target) {\n    var dataPos = 32, pos = 0, buf = new Buffer.alloc(1024);\n    workstation = workstation === undefined ? os.hostname() : workstation;\n    target = target === undefined ? '' : target;\n    //signature\n    buf.write(NTLMSIGNATURE, pos, NTLMSIGNATURE.length, 'ascii');\n    pos += NTLMSIGNATURE.length;\n    //message type\n    buf.writeUInt32LE(1, pos);\n    pos += 4;\n    //flags\n    buf.writeUInt32LE(flags.NTLMFLAG_NEGOTIATE_OEM |\n        flags.NTLMFLAG_REQUEST_TARGET |\n        flags.NTLMFLAG_NEGOTIATE_NTLM_KEY |\n        flags.NTLMFLAG_NEGOTIATE_NTLM2_KEY |\n        flags.NTLMFLAG_NEGOTIATE_ALWAYS_SIGN, pos);\n    pos += 4;\n    //domain security buffer\n    buf.writeUInt16LE(target.length, pos);\n    pos += 2;\n    buf.writeUInt16LE(target.length, pos);\n    pos += 2;\n    buf.writeUInt32LE(target.length === 0 ? 0 : dataPos, pos);\n    pos += 4;\n    if (target.length > 0) {\n        dataPos += buf.write(target, dataPos, 'ascii');\n    }\n    //workstation security buffer\n    buf.writeUInt16LE(workstation.length, pos);\n    pos += 2;\n    buf.writeUInt16LE(workstation.length, pos);\n    pos += 2;\n    buf.writeUInt32LE(workstation.length === 0 ? 0 : dataPos, pos);\n    pos += 4;\n    if (workstation.length > 0) {\n        dataPos += buf.write(workstation, dataPos, 'ascii');\n    }\n    return 'NTLM ' + buf.toString('base64', 0, dataPos);\n}\nfunction decodeType2Message(str) {\n    if (str === undefined) {\n        throw new Error('Invalid argument');\n    }\n    //convenience\n    if (Object.prototype.toString.call(str) !== '[object String]') {\n        if (str.hasOwnProperty('headers') && str.headers.hasOwnProperty('www-authenticate')) {\n            str = str.headers['www-authenticate'];\n        }\n        else {\n            throw new Error('Invalid argument');\n        }\n    }\n    var ntlmMatch = /^NTLM ([^,\\s]+)/.exec(str);\n    if (ntlmMatch) {\n        str = ntlmMatch[1];\n    }\n    var buf = new Buffer.from(str, 'base64'), obj = {};\n    //check signature\n    if (buf.toString('ascii', 0, NTLMSIGNATURE.length) !== NTLMSIGNATURE) {\n        throw new Error('Invalid message signature: ' + str);\n    }\n    //check message type\n    if (buf.readUInt32LE(NTLMSIGNATURE.length) !== 2) {\n        throw new Error('Invalid message type (no type 2)');\n    }\n    //read flags\n    obj.flags = buf.readUInt32LE(20);\n    obj.encoding = (obj.flags & flags.NTLMFLAG_NEGOTIATE_OEM) ? 'ascii' : 'ucs2';\n    obj.version = (obj.flags & flags.NTLMFLAG_NEGOTIATE_NTLM2_KEY) ? 2 : 1;\n    obj.challenge = buf.slice(24, 32);\n    //read target name\n    obj.targetName = (function () {\n        var length = buf.readUInt16LE(12);\n        //skipping allocated space\n        var offset = buf.readUInt32LE(16);\n        if (length === 0) {\n            return '';\n        }\n        if ((offset + length) > buf.length || offset < 32) {\n            throw new Error('Bad type 2 message');\n        }\n        return buf.toString(obj.encoding, offset, offset + length);\n    })();\n    //read target info\n    if (obj.flags & flags.NTLMFLAG_NEGOTIATE_TARGET_INFO) {\n        obj.targetInfo = (function () {\n            var info = {};\n            var length = buf.readUInt16LE(40);\n            //skipping allocated space\n            var offset = buf.readUInt32LE(44);\n            var targetInfoBuffer = new Buffer.alloc(length);\n            buf.copy(targetInfoBuffer, 0, offset, offset + length);\n            if (length === 0) {\n                return info;\n            }\n            if ((offset + length) > buf.length || offset < 32) {\n                throw new Error('Bad type 2 message');\n            }\n            var pos = offset;\n            while (pos < (offset + length)) {\n                var blockType = buf.readUInt16LE(pos);\n                pos += 2;\n                var blockLength = buf.readUInt16LE(pos);\n                pos += 2;\n                if (blockType === 0) {\n                    //reached the terminator subblock\n                    break;\n                }\n                var blockTypeStr = void 0;\n                switch (blockType) {\n                    case 1:\n                        blockTypeStr = 'SERVER';\n                        break;\n                    case 2:\n                        blockTypeStr = 'DOMAIN';\n                        break;\n                    case 3:\n                        blockTypeStr = 'FQDN';\n                        break;\n                    case 4:\n                        blockTypeStr = 'DNS';\n                        break;\n                    case 5:\n                        blockTypeStr = 'PARENT_DNS';\n                        break;\n                    default:\n                        blockTypeStr = '';\n                        break;\n                }\n                if (blockTypeStr) {\n                    info[blockTypeStr] = buf.toString('ucs2', pos, pos + blockLength);\n                }\n                pos += blockLength;\n            }\n            return {\n                parsed: info,\n                buffer: targetInfoBuffer\n            };\n        })();\n    }\n    return obj;\n}\nfunction createType3Message(type2Message, username, password, workstation, target) {\n    var dataPos = 52, buf = new Buffer.alloc(1024);\n    if (workstation === undefined) {\n        workstation = os.hostname();\n    }\n    if (target === undefined) {\n        target = type2Message.targetName;\n    }\n    //signature\n    buf.write(NTLMSIGNATURE, 0, NTLMSIGNATURE.length, 'ascii');\n    //message type\n    buf.writeUInt32LE(3, 8);\n    if (type2Message.version === 2) {\n        dataPos = 64;\n        var ntlmHash = hash.createNTLMHash(password), nonce = hash.createPseudoRandomValue(16), lmv2 = hash.createLMv2Response(type2Message, username, ntlmHash, nonce, target), ntlmv2 = hash.createNTLMv2Response(type2Message, username, ntlmHash, nonce, target);\n        //lmv2 security buffer\n        buf.writeUInt16LE(lmv2.length, 12);\n        buf.writeUInt16LE(lmv2.length, 14);\n        buf.writeUInt32LE(dataPos, 16);\n        lmv2.copy(buf, dataPos);\n        dataPos += lmv2.length;\n        //ntlmv2 security buffer\n        buf.writeUInt16LE(ntlmv2.length, 20);\n        buf.writeUInt16LE(ntlmv2.length, 22);\n        buf.writeUInt32LE(dataPos, 24);\n        ntlmv2.copy(buf, dataPos);\n        dataPos += ntlmv2.length;\n    }\n    else {\n        var lmHash = hash.createLMHash(password), ntlmHash = hash.createNTLMHash(password), lm = hash.createLMResponse(type2Message.challenge, lmHash), ntlm = hash.createNTLMResponse(type2Message.challenge, ntlmHash);\n        //lm security buffer\n        buf.writeUInt16LE(lm.length, 12);\n        buf.writeUInt16LE(lm.length, 14);\n        buf.writeUInt32LE(dataPos, 16);\n        lm.copy(buf, dataPos);\n        dataPos += lm.length;\n        //ntlm security buffer\n        buf.writeUInt16LE(ntlm.length, 20);\n        buf.writeUInt16LE(ntlm.length, 22);\n        buf.writeUInt32LE(dataPos, 24);\n        ntlm.copy(buf, dataPos);\n        dataPos += ntlm.length;\n    }\n    //target name security buffer\n    buf.writeUInt16LE(type2Message.encoding === 'ascii' ? target.length : target.length * 2, 28);\n    buf.writeUInt16LE(type2Message.encoding === 'ascii' ? target.length : target.length * 2, 30);\n    buf.writeUInt32LE(dataPos, 32);\n    dataPos += buf.write(target, dataPos, type2Message.encoding);\n    //user name security buffer\n    buf.writeUInt16LE(type2Message.encoding === 'ascii' ? username.length : username.length * 2, 36);\n    buf.writeUInt16LE(type2Message.encoding === 'ascii' ? username.length : username.length * 2, 38);\n    buf.writeUInt32LE(dataPos, 40);\n    dataPos += buf.write(username, dataPos, type2Message.encoding);\n    //workstation name security buffer\n    buf.writeUInt16LE(type2Message.encoding === 'ascii' ? workstation.length : workstation.length * 2, 44);\n    buf.writeUInt16LE(type2Message.encoding === 'ascii' ? workstation.length : workstation.length * 2, 46);\n    buf.writeUInt32LE(dataPos, 48);\n    dataPos += buf.write(workstation, dataPos, type2Message.encoding);\n    if (type2Message.version === 2) {\n        //session key security buffer\n        buf.writeUInt16LE(0, 52);\n        buf.writeUInt16LE(0, 54);\n        buf.writeUInt32LE(0, 56);\n        //flags\n        buf.writeUInt32LE(type2Message.flags, 60);\n    }\n    return 'NTLM ' + buf.toString('base64', 0, dataPos);\n}\nmodule.exports = {\n    createType1Message: createType1Message,\n    decodeType2Message: decodeType2Message,\n    createType3Message: createType3Message\n};\n"],"mappings":"AAAA,a,CACA;;AACA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;AAAA,IAAwBC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAAvC;AAAA,IAAoDE,IAAI,GAAGF,OAAO,CAAC,QAAD,CAAlE;;AACA,IAAIG,aAAa,GAAG,WAApB;;AACA,SAASC,kBAAT,CAA4BC,WAA5B,EAAyCC,MAAzC,EAAiD;EAC7C,IAAIC,OAAO,GAAG,EAAd;EAAA,IAAkBC,GAAG,GAAG,CAAxB;EAAA,IAA2BC,GAAG,GAAG,IAAIC,MAAM,CAACC,KAAX,CAAiB,IAAjB,CAAjC;EACAN,WAAW,GAAGA,WAAW,KAAKO,SAAhB,GAA4Bb,EAAE,CAACc,QAAH,EAA5B,GAA4CR,WAA1D;EACAC,MAAM,GAAGA,MAAM,KAAKM,SAAX,GAAuB,EAAvB,GAA4BN,MAArC,CAH6C,CAI7C;;EACAG,GAAG,CAACK,KAAJ,CAAUX,aAAV,EAAyBK,GAAzB,EAA8BL,aAAa,CAACY,MAA5C,EAAoD,OAApD;EACAP,GAAG,IAAIL,aAAa,CAACY,MAArB,CAN6C,CAO7C;;EACAN,GAAG,CAACO,aAAJ,CAAkB,CAAlB,EAAqBR,GAArB;EACAA,GAAG,IAAI,CAAP,CAT6C,CAU7C;;EACAC,GAAG,CAACO,aAAJ,CAAkBf,KAAK,CAACgB,sBAAN,GACdhB,KAAK,CAACiB,uBADQ,GAEdjB,KAAK,CAACkB,2BAFQ,GAGdlB,KAAK,CAACmB,4BAHQ,GAIdnB,KAAK,CAACoB,8BAJV,EAI0Cb,GAJ1C;EAKAA,GAAG,IAAI,CAAP,CAhB6C,CAiB7C;;EACAC,GAAG,CAACa,aAAJ,CAAkBhB,MAAM,CAACS,MAAzB,EAAiCP,GAAjC;EACAA,GAAG,IAAI,CAAP;EACAC,GAAG,CAACa,aAAJ,CAAkBhB,MAAM,CAACS,MAAzB,EAAiCP,GAAjC;EACAA,GAAG,IAAI,CAAP;EACAC,GAAG,CAACO,aAAJ,CAAkBV,MAAM,CAACS,MAAP,KAAkB,CAAlB,GAAsB,CAAtB,GAA0BR,OAA5C,EAAqDC,GAArD;EACAA,GAAG,IAAI,CAAP;;EACA,IAAIF,MAAM,CAACS,MAAP,GAAgB,CAApB,EAAuB;IACnBR,OAAO,IAAIE,GAAG,CAACK,KAAJ,CAAUR,MAAV,EAAkBC,OAAlB,EAA2B,OAA3B,CAAX;EACH,CA1B4C,CA2B7C;;;EACAE,GAAG,CAACa,aAAJ,CAAkBjB,WAAW,CAACU,MAA9B,EAAsCP,GAAtC;EACAA,GAAG,IAAI,CAAP;EACAC,GAAG,CAACa,aAAJ,CAAkBjB,WAAW,CAACU,MAA9B,EAAsCP,GAAtC;EACAA,GAAG,IAAI,CAAP;EACAC,GAAG,CAACO,aAAJ,CAAkBX,WAAW,CAACU,MAAZ,KAAuB,CAAvB,GAA2B,CAA3B,GAA+BR,OAAjD,EAA0DC,GAA1D;EACAA,GAAG,IAAI,CAAP;;EACA,IAAIH,WAAW,CAACU,MAAZ,GAAqB,CAAzB,EAA4B;IACxBR,OAAO,IAAIE,GAAG,CAACK,KAAJ,CAAUT,WAAV,EAAuBE,OAAvB,EAAgC,OAAhC,CAAX;EACH;;EACD,OAAO,UAAUE,GAAG,CAACc,QAAJ,CAAa,QAAb,EAAuB,CAAvB,EAA0BhB,OAA1B,CAAjB;AACH;;AACD,SAASiB,kBAAT,CAA4BC,GAA5B,EAAiC;EAC7B,IAAIA,GAAG,KAAKb,SAAZ,EAAuB;IACnB,MAAM,IAAIc,KAAJ,CAAU,kBAAV,CAAN;EACH,CAH4B,CAI7B;;;EACA,IAAIC,MAAM,CAACC,SAAP,CAAiBL,QAAjB,CAA0BM,IAA1B,CAA+BJ,GAA/B,MAAwC,iBAA5C,EAA+D;IAC3D,IAAIA,GAAG,CAACK,cAAJ,CAAmB,SAAnB,KAAiCL,GAAG,CAACM,OAAJ,CAAYD,cAAZ,CAA2B,kBAA3B,CAArC,EAAqF;MACjFL,GAAG,GAAGA,GAAG,CAACM,OAAJ,CAAY,kBAAZ,CAAN;IACH,CAFD,MAGK;MACD,MAAM,IAAIL,KAAJ,CAAU,kBAAV,CAAN;IACH;EACJ;;EACD,IAAIM,SAAS,GAAG,kBAAkBC,IAAlB,CAAuBR,GAAvB,CAAhB;;EACA,IAAIO,SAAJ,EAAe;IACXP,GAAG,GAAGO,SAAS,CAAC,CAAD,CAAf;EACH;;EACD,IAAIvB,GAAG,GAAG,IAAIC,MAAM,CAACwB,IAAX,CAAgBT,GAAhB,EAAqB,QAArB,CAAV;EAAA,IAA0CU,GAAG,GAAG,EAAhD,CAjB6B,CAkB7B;;EACA,IAAI1B,GAAG,CAACc,QAAJ,CAAa,OAAb,EAAsB,CAAtB,EAAyBpB,aAAa,CAACY,MAAvC,MAAmDZ,aAAvD,EAAsE;IAClE,MAAM,IAAIuB,KAAJ,CAAU,gCAAgCD,GAA1C,CAAN;EACH,CArB4B,CAsB7B;;;EACA,IAAIhB,GAAG,CAAC2B,YAAJ,CAAiBjC,aAAa,CAACY,MAA/B,MAA2C,CAA/C,EAAkD;IAC9C,MAAM,IAAIW,KAAJ,CAAU,kCAAV,CAAN;EACH,CAzB4B,CA0B7B;;;EACAS,GAAG,CAAClC,KAAJ,GAAYQ,GAAG,CAAC2B,YAAJ,CAAiB,EAAjB,CAAZ;EACAD,GAAG,CAACE,QAAJ,GAAgBF,GAAG,CAAClC,KAAJ,GAAYA,KAAK,CAACgB,sBAAnB,GAA6C,OAA7C,GAAuD,MAAtE;EACAkB,GAAG,CAACG,OAAJ,GAAeH,GAAG,CAAClC,KAAJ,GAAYA,KAAK,CAACmB,4BAAnB,GAAmD,CAAnD,GAAuD,CAArE;EACAe,GAAG,CAACI,SAAJ,GAAgB9B,GAAG,CAAC+B,KAAJ,CAAU,EAAV,EAAc,EAAd,CAAhB,CA9B6B,CA+B7B;;EACAL,GAAG,CAACM,UAAJ,GAAkB,YAAY;IAC1B,IAAI1B,MAAM,GAAGN,GAAG,CAACiC,YAAJ,CAAiB,EAAjB,CAAb,CAD0B,CAE1B;;IACA,IAAIC,MAAM,GAAGlC,GAAG,CAAC2B,YAAJ,CAAiB,EAAjB,CAAb;;IACA,IAAIrB,MAAM,KAAK,CAAf,EAAkB;MACd,OAAO,EAAP;IACH;;IACD,IAAK4B,MAAM,GAAG5B,MAAV,GAAoBN,GAAG,CAACM,MAAxB,IAAkC4B,MAAM,GAAG,EAA/C,EAAmD;MAC/C,MAAM,IAAIjB,KAAJ,CAAU,oBAAV,CAAN;IACH;;IACD,OAAOjB,GAAG,CAACc,QAAJ,CAAaY,GAAG,CAACE,QAAjB,EAA2BM,MAA3B,EAAmCA,MAAM,GAAG5B,MAA5C,CAAP;EACH,CAXgB,EAAjB,CAhC6B,CA4C7B;;;EACA,IAAIoB,GAAG,CAAClC,KAAJ,GAAYA,KAAK,CAAC2C,8BAAtB,EAAsD;IAClDT,GAAG,CAACU,UAAJ,GAAkB,YAAY;MAC1B,IAAIC,IAAI,GAAG,EAAX;MACA,IAAI/B,MAAM,GAAGN,GAAG,CAACiC,YAAJ,CAAiB,EAAjB,CAAb,CAF0B,CAG1B;;MACA,IAAIC,MAAM,GAAGlC,GAAG,CAAC2B,YAAJ,CAAiB,EAAjB,CAAb;MACA,IAAIW,gBAAgB,GAAG,IAAIrC,MAAM,CAACC,KAAX,CAAiBI,MAAjB,CAAvB;MACAN,GAAG,CAACuC,IAAJ,CAASD,gBAAT,EAA2B,CAA3B,EAA8BJ,MAA9B,EAAsCA,MAAM,GAAG5B,MAA/C;;MACA,IAAIA,MAAM,KAAK,CAAf,EAAkB;QACd,OAAO+B,IAAP;MACH;;MACD,IAAKH,MAAM,GAAG5B,MAAV,GAAoBN,GAAG,CAACM,MAAxB,IAAkC4B,MAAM,GAAG,EAA/C,EAAmD;QAC/C,MAAM,IAAIjB,KAAJ,CAAU,oBAAV,CAAN;MACH;;MACD,IAAIlB,GAAG,GAAGmC,MAAV;;MACA,OAAOnC,GAAG,GAAImC,MAAM,GAAG5B,MAAvB,EAAgC;QAC5B,IAAIkC,SAAS,GAAGxC,GAAG,CAACiC,YAAJ,CAAiBlC,GAAjB,CAAhB;QACAA,GAAG,IAAI,CAAP;QACA,IAAI0C,WAAW,GAAGzC,GAAG,CAACiC,YAAJ,CAAiBlC,GAAjB,CAAlB;QACAA,GAAG,IAAI,CAAP;;QACA,IAAIyC,SAAS,KAAK,CAAlB,EAAqB;UACjB;UACA;QACH;;QACD,IAAIE,YAAY,GAAG,KAAK,CAAxB;;QACA,QAAQF,SAAR;UACI,KAAK,CAAL;YACIE,YAAY,GAAG,QAAf;YACA;;UACJ,KAAK,CAAL;YACIA,YAAY,GAAG,QAAf;YACA;;UACJ,KAAK,CAAL;YACIA,YAAY,GAAG,MAAf;YACA;;UACJ,KAAK,CAAL;YACIA,YAAY,GAAG,KAAf;YACA;;UACJ,KAAK,CAAL;YACIA,YAAY,GAAG,YAAf;YACA;;UACJ;YACIA,YAAY,GAAG,EAAf;YACA;QAlBR;;QAoBA,IAAIA,YAAJ,EAAkB;UACdL,IAAI,CAACK,YAAD,CAAJ,GAAqB1C,GAAG,CAACc,QAAJ,CAAa,MAAb,EAAqBf,GAArB,EAA0BA,GAAG,GAAG0C,WAAhC,CAArB;QACH;;QACD1C,GAAG,IAAI0C,WAAP;MACH;;MACD,OAAO;QACHE,MAAM,EAAEN,IADL;QAEHO,MAAM,EAAEN;MAFL,CAAP;IAIH,CArDgB,EAAjB;EAsDH;;EACD,OAAOZ,GAAP;AACH;;AACD,SAASmB,kBAAT,CAA4BC,YAA5B,EAA0CC,QAA1C,EAAoDC,QAApD,EAA8DpD,WAA9D,EAA2EC,MAA3E,EAAmF;EAC/E,IAAIC,OAAO,GAAG,EAAd;EAAA,IAAkBE,GAAG,GAAG,IAAIC,MAAM,CAACC,KAAX,CAAiB,IAAjB,CAAxB;;EACA,IAAIN,WAAW,KAAKO,SAApB,EAA+B;IAC3BP,WAAW,GAAGN,EAAE,CAACc,QAAH,EAAd;EACH;;EACD,IAAIP,MAAM,KAAKM,SAAf,EAA0B;IACtBN,MAAM,GAAGiD,YAAY,CAACd,UAAtB;EACH,CAP8E,CAQ/E;;;EACAhC,GAAG,CAACK,KAAJ,CAAUX,aAAV,EAAyB,CAAzB,EAA4BA,aAAa,CAACY,MAA1C,EAAkD,OAAlD,EAT+E,CAU/E;;EACAN,GAAG,CAACO,aAAJ,CAAkB,CAAlB,EAAqB,CAArB;;EACA,IAAIuC,YAAY,CAACjB,OAAb,KAAyB,CAA7B,EAAgC;IAC5B/B,OAAO,GAAG,EAAV;IACA,IAAImD,QAAQ,GAAGxD,IAAI,CAACyD,cAAL,CAAoBF,QAApB,CAAf;IAAA,IAA8CG,KAAK,GAAG1D,IAAI,CAAC2D,uBAAL,CAA6B,EAA7B,CAAtD;IAAA,IAAwFC,IAAI,GAAG5D,IAAI,CAAC6D,kBAAL,CAAwBR,YAAxB,EAAsCC,QAAtC,EAAgDE,QAAhD,EAA0DE,KAA1D,EAAiEtD,MAAjE,CAA/F;IAAA,IAAyK0D,MAAM,GAAG9D,IAAI,CAAC+D,oBAAL,CAA0BV,YAA1B,EAAwCC,QAAxC,EAAkDE,QAAlD,EAA4DE,KAA5D,EAAmEtD,MAAnE,CAAlL,CAF4B,CAG5B;;IACAG,GAAG,CAACa,aAAJ,CAAkBwC,IAAI,CAAC/C,MAAvB,EAA+B,EAA/B;IACAN,GAAG,CAACa,aAAJ,CAAkBwC,IAAI,CAAC/C,MAAvB,EAA+B,EAA/B;IACAN,GAAG,CAACO,aAAJ,CAAkBT,OAAlB,EAA2B,EAA3B;IACAuD,IAAI,CAACd,IAAL,CAAUvC,GAAV,EAAeF,OAAf;IACAA,OAAO,IAAIuD,IAAI,CAAC/C,MAAhB,CAR4B,CAS5B;;IACAN,GAAG,CAACa,aAAJ,CAAkB0C,MAAM,CAACjD,MAAzB,EAAiC,EAAjC;IACAN,GAAG,CAACa,aAAJ,CAAkB0C,MAAM,CAACjD,MAAzB,EAAiC,EAAjC;IACAN,GAAG,CAACO,aAAJ,CAAkBT,OAAlB,EAA2B,EAA3B;IACAyD,MAAM,CAAChB,IAAP,CAAYvC,GAAZ,EAAiBF,OAAjB;IACAA,OAAO,IAAIyD,MAAM,CAACjD,MAAlB;EACH,CAfD,MAgBK;IACD,IAAImD,MAAM,GAAGhE,IAAI,CAACiE,YAAL,CAAkBV,QAAlB,CAAb;IAAA,IAA0CC,QAAQ,GAAGxD,IAAI,CAACyD,cAAL,CAAoBF,QAApB,CAArD;IAAA,IAAoFW,EAAE,GAAGlE,IAAI,CAACmE,gBAAL,CAAsBd,YAAY,CAAChB,SAAnC,EAA8C2B,MAA9C,CAAzF;IAAA,IAAgJI,IAAI,GAAGpE,IAAI,CAACqE,kBAAL,CAAwBhB,YAAY,CAAChB,SAArC,EAAgDmB,QAAhD,CAAvJ,CADC,CAED;;IACAjD,GAAG,CAACa,aAAJ,CAAkB8C,EAAE,CAACrD,MAArB,EAA6B,EAA7B;IACAN,GAAG,CAACa,aAAJ,CAAkB8C,EAAE,CAACrD,MAArB,EAA6B,EAA7B;IACAN,GAAG,CAACO,aAAJ,CAAkBT,OAAlB,EAA2B,EAA3B;IACA6D,EAAE,CAACpB,IAAH,CAAQvC,GAAR,EAAaF,OAAb;IACAA,OAAO,IAAI6D,EAAE,CAACrD,MAAd,CAPC,CAQD;;IACAN,GAAG,CAACa,aAAJ,CAAkBgD,IAAI,CAACvD,MAAvB,EAA+B,EAA/B;IACAN,GAAG,CAACa,aAAJ,CAAkBgD,IAAI,CAACvD,MAAvB,EAA+B,EAA/B;IACAN,GAAG,CAACO,aAAJ,CAAkBT,OAAlB,EAA2B,EAA3B;IACA+D,IAAI,CAACtB,IAAL,CAAUvC,GAAV,EAAeF,OAAf;IACAA,OAAO,IAAI+D,IAAI,CAACvD,MAAhB;EACH,CA1C8E,CA2C/E;;;EACAN,GAAG,CAACa,aAAJ,CAAkBiC,YAAY,CAAClB,QAAb,KAA0B,OAA1B,GAAoC/B,MAAM,CAACS,MAA3C,GAAoDT,MAAM,CAACS,MAAP,GAAgB,CAAtF,EAAyF,EAAzF;EACAN,GAAG,CAACa,aAAJ,CAAkBiC,YAAY,CAAClB,QAAb,KAA0B,OAA1B,GAAoC/B,MAAM,CAACS,MAA3C,GAAoDT,MAAM,CAACS,MAAP,GAAgB,CAAtF,EAAyF,EAAzF;EACAN,GAAG,CAACO,aAAJ,CAAkBT,OAAlB,EAA2B,EAA3B;EACAA,OAAO,IAAIE,GAAG,CAACK,KAAJ,CAAUR,MAAV,EAAkBC,OAAlB,EAA2BgD,YAAY,CAAClB,QAAxC,CAAX,CA/C+E,CAgD/E;;EACA5B,GAAG,CAACa,aAAJ,CAAkBiC,YAAY,CAAClB,QAAb,KAA0B,OAA1B,GAAoCmB,QAAQ,CAACzC,MAA7C,GAAsDyC,QAAQ,CAACzC,MAAT,GAAkB,CAA1F,EAA6F,EAA7F;EACAN,GAAG,CAACa,aAAJ,CAAkBiC,YAAY,CAAClB,QAAb,KAA0B,OAA1B,GAAoCmB,QAAQ,CAACzC,MAA7C,GAAsDyC,QAAQ,CAACzC,MAAT,GAAkB,CAA1F,EAA6F,EAA7F;EACAN,GAAG,CAACO,aAAJ,CAAkBT,OAAlB,EAA2B,EAA3B;EACAA,OAAO,IAAIE,GAAG,CAACK,KAAJ,CAAU0C,QAAV,EAAoBjD,OAApB,EAA6BgD,YAAY,CAAClB,QAA1C,CAAX,CApD+E,CAqD/E;;EACA5B,GAAG,CAACa,aAAJ,CAAkBiC,YAAY,CAAClB,QAAb,KAA0B,OAA1B,GAAoChC,WAAW,CAACU,MAAhD,GAAyDV,WAAW,CAACU,MAAZ,GAAqB,CAAhG,EAAmG,EAAnG;EACAN,GAAG,CAACa,aAAJ,CAAkBiC,YAAY,CAAClB,QAAb,KAA0B,OAA1B,GAAoChC,WAAW,CAACU,MAAhD,GAAyDV,WAAW,CAACU,MAAZ,GAAqB,CAAhG,EAAmG,EAAnG;EACAN,GAAG,CAACO,aAAJ,CAAkBT,OAAlB,EAA2B,EAA3B;EACAA,OAAO,IAAIE,GAAG,CAACK,KAAJ,CAAUT,WAAV,EAAuBE,OAAvB,EAAgCgD,YAAY,CAAClB,QAA7C,CAAX;;EACA,IAAIkB,YAAY,CAACjB,OAAb,KAAyB,CAA7B,EAAgC;IAC5B;IACA7B,GAAG,CAACa,aAAJ,CAAkB,CAAlB,EAAqB,EAArB;IACAb,GAAG,CAACa,aAAJ,CAAkB,CAAlB,EAAqB,EAArB;IACAb,GAAG,CAACO,aAAJ,CAAkB,CAAlB,EAAqB,EAArB,EAJ4B,CAK5B;;IACAP,GAAG,CAACO,aAAJ,CAAkBuC,YAAY,CAACtD,KAA/B,EAAsC,EAAtC;EACH;;EACD,OAAO,UAAUQ,GAAG,CAACc,QAAJ,CAAa,QAAb,EAAuB,CAAvB,EAA0BhB,OAA1B,CAAjB;AACH;;AACDiE,MAAM,CAACC,OAAP,GAAiB;EACbrE,kBAAkB,EAAEA,kBADP;EAEboB,kBAAkB,EAAEA,kBAFP;EAGb8B,kBAAkB,EAAEA;AAHP,CAAjB"},"metadata":{},"sourceType":"script"}