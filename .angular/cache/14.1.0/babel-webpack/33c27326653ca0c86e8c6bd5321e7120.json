{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.parseMTOMResp = exports.xmlEscape = exports.splitQName = exports.findPrefix = exports.TNS_PREFIX = exports.passwordDigest = void 0;\n\nvar crypto = require(\"crypto\");\n\nvar multipart_parser_js_1 = require(\"formidable/lib/multipart_parser.js\");\n\nfunction passwordDigest(nonce, created, password) {\n  // digest = base64 ( sha1 ( nonce + created + password ) )\n  var pwHash = crypto.createHash('sha1');\n  var NonceBytes = Buffer.from(nonce || '', 'base64');\n  var CreatedBytes = Buffer.from(created || '', 'utf8');\n  var PasswordBytes = Buffer.from(password || '', 'utf8');\n  var FullBytes = Buffer.concat([NonceBytes, CreatedBytes, PasswordBytes]);\n  pwHash.update(FullBytes);\n  return pwHash.digest('base64');\n}\n\nexports.passwordDigest = passwordDigest;\nexports.TNS_PREFIX = '__tns__'; // Prefix for targetNamespace\n\n/**\n * Find a key from an object based on the value\n * @param {Object} Namespace prefix/uri mapping\n * @param {*} nsURI value\n * @returns {String} The matching key\n */\n\nfunction findPrefix(xmlnsMapping, nsURI) {\n  for (var n in xmlnsMapping) {\n    if (n === exports.TNS_PREFIX) {\n      continue;\n    }\n\n    if (xmlnsMapping[n] === nsURI) {\n      return n;\n    }\n  }\n}\n\nexports.findPrefix = findPrefix;\n\nfunction splitQName(nsName) {\n  if (typeof nsName !== 'string') {\n    return {\n      prefix: exports.TNS_PREFIX,\n      name: nsName\n    };\n  }\n\n  var topLevelName = nsName.split('|')[0];\n  var prefixOffset = topLevelName.indexOf(':');\n  return {\n    prefix: topLevelName.substring(0, prefixOffset) || exports.TNS_PREFIX,\n    name: topLevelName.substring(prefixOffset + 1)\n  };\n}\n\nexports.splitQName = splitQName;\n\nfunction xmlEscape(obj) {\n  if (typeof obj === 'string') {\n    if (obj.substr(0, 9) === '<![CDATA[' && obj.substr(-3) === ']]>') {\n      return obj;\n    }\n\n    return obj.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&apos;');\n  }\n\n  return obj;\n}\n\nexports.xmlEscape = xmlEscape;\n\nfunction parseMTOMResp(payload, boundary) {\n  var resp = {\n    parts: []\n  };\n  var headerName = '';\n  var headerValue = '';\n  var data;\n  var partIndex = 0;\n  var parser = new multipart_parser_js_1.MultipartParser();\n  parser.initWithBoundary(boundary);\n\n  parser.onPartBegin = function () {\n    resp.parts[partIndex] = {\n      body: null,\n      headers: {}\n    };\n    data = Buffer.from('');\n  };\n\n  parser.onHeaderField = function (b, start, end) {\n    headerName = b.slice(start, end).toString();\n  };\n\n  parser.onHeaderValue = function (b, start, end) {\n    headerValue = b.slice(start, end).toString();\n  };\n\n  parser.onHeaderEnd = function () {\n    resp.parts[partIndex].headers[headerName.toLowerCase()] = headerValue;\n  };\n\n  parser.onHeadersEnd = function () {};\n\n  parser.onPartData = function (b, start, end) {\n    data = Buffer.concat([data, b.slice(start, end)]);\n  };\n\n  parser.onPartEnd = function () {\n    resp.parts[partIndex].body = data;\n    partIndex++;\n  };\n\n  parser.onEnd = function () {};\n\n  parser.write(payload);\n  return resp;\n}\n\nexports.parseMTOMResp = parseMTOMResp;","map":{"version":3,"names":["exports","__esModule","parseMTOMResp","xmlEscape","splitQName","findPrefix","TNS_PREFIX","passwordDigest","crypto","require","multipart_parser_js_1","nonce","created","password","pwHash","createHash","NonceBytes","Buffer","from","CreatedBytes","PasswordBytes","FullBytes","concat","update","digest","xmlnsMapping","nsURI","n","nsName","prefix","name","topLevelName","split","prefixOffset","indexOf","substring","obj","substr","replace","payload","boundary","resp","parts","headerName","headerValue","data","partIndex","parser","MultipartParser","initWithBoundary","onPartBegin","body","headers","onHeaderField","b","start","end","slice","toString","onHeaderValue","onHeaderEnd","toLowerCase","onHeadersEnd","onPartData","onPartEnd","onEnd","write"],"sources":["C:/Users/ayber/node_modules/soap/lib/utils.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.parseMTOMResp = exports.xmlEscape = exports.splitQName = exports.findPrefix = exports.TNS_PREFIX = exports.passwordDigest = void 0;\nvar crypto = require(\"crypto\");\nvar multipart_parser_js_1 = require(\"formidable/lib/multipart_parser.js\");\nfunction passwordDigest(nonce, created, password) {\n    // digest = base64 ( sha1 ( nonce + created + password ) )\n    var pwHash = crypto.createHash('sha1');\n    var NonceBytes = Buffer.from(nonce || '', 'base64');\n    var CreatedBytes = Buffer.from(created || '', 'utf8');\n    var PasswordBytes = Buffer.from(password || '', 'utf8');\n    var FullBytes = Buffer.concat([NonceBytes, CreatedBytes, PasswordBytes]);\n    pwHash.update(FullBytes);\n    return pwHash.digest('base64');\n}\nexports.passwordDigest = passwordDigest;\nexports.TNS_PREFIX = '__tns__'; // Prefix for targetNamespace\n/**\n * Find a key from an object based on the value\n * @param {Object} Namespace prefix/uri mapping\n * @param {*} nsURI value\n * @returns {String} The matching key\n */\nfunction findPrefix(xmlnsMapping, nsURI) {\n    for (var n in xmlnsMapping) {\n        if (n === exports.TNS_PREFIX) {\n            continue;\n        }\n        if (xmlnsMapping[n] === nsURI) {\n            return n;\n        }\n    }\n}\nexports.findPrefix = findPrefix;\nfunction splitQName(nsName) {\n    if (typeof nsName !== 'string') {\n        return {\n            prefix: exports.TNS_PREFIX,\n            name: nsName\n        };\n    }\n    var topLevelName = nsName.split('|')[0];\n    var prefixOffset = topLevelName.indexOf(':');\n    return {\n        prefix: topLevelName.substring(0, prefixOffset) || exports.TNS_PREFIX,\n        name: topLevelName.substring(prefixOffset + 1)\n    };\n}\nexports.splitQName = splitQName;\nfunction xmlEscape(obj) {\n    if (typeof (obj) === 'string') {\n        if (obj.substr(0, 9) === '<![CDATA[' && obj.substr(-3) === ']]>') {\n            return obj;\n        }\n        return obj\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&apos;');\n    }\n    return obj;\n}\nexports.xmlEscape = xmlEscape;\nfunction parseMTOMResp(payload, boundary) {\n    var resp = {\n        parts: []\n    };\n    var headerName = '';\n    var headerValue = '';\n    var data;\n    var partIndex = 0;\n    var parser = new multipart_parser_js_1.MultipartParser();\n    parser.initWithBoundary(boundary);\n    parser.onPartBegin = function () {\n        resp.parts[partIndex] = {\n            body: null,\n            headers: {}\n        };\n        data = Buffer.from('');\n    };\n    parser.onHeaderField = function (b, start, end) {\n        headerName = b.slice(start, end).toString();\n    };\n    parser.onHeaderValue = function (b, start, end) {\n        headerValue = b.slice(start, end).toString();\n    };\n    parser.onHeaderEnd = function () {\n        resp.parts[partIndex].headers[headerName.toLowerCase()] = headerValue;\n    };\n    parser.onHeadersEnd = function () { };\n    parser.onPartData = function (b, start, end) {\n        data = Buffer.concat([data, b.slice(start, end)]);\n    };\n    parser.onPartEnd = function () {\n        resp.parts[partIndex].body = data;\n        partIndex++;\n    };\n    parser.onEnd = function () { };\n    parser.write(payload);\n    return resp;\n}\nexports.parseMTOMResp = parseMTOMResp;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}