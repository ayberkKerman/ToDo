{"ast":null,"code":"/*\r\n * xpath.js\r\n *\r\n * An XPath 1.0 library for JavaScript.\r\n *\r\n * Cameron McCormack <cam (at) mcc.id.au>\r\n *\r\n * This work is licensed under the MIT License.\r\n *\r\n * Revision 20: April 26, 2011\r\n *   Fixed a typo resulting in FIRST_ORDERED_NODE_TYPE results being wrong,\r\n *   thanks to <shi_a009 (at) hotmail.com>.\r\n *\r\n * Revision 19: November 29, 2005\r\n *   Nodesets now store their nodes in a height balanced tree, increasing\r\n *   performance for the common case of selecting nodes in document order,\r\n *   thanks to Sébastien Cramatte <contact (at) zeninteractif.com>.\r\n *   AVL tree code adapted from Raimund Neumann <rnova (at) gmx.net>.\r\n *\r\n * Revision 18: October 27, 2005\r\n *   DOM 3 XPath support.  Caveats:\r\n *     - namespace prefixes aren't resolved in XPathEvaluator.createExpression,\r\n *       but in XPathExpression.evaluate.\r\n *     - XPathResult.invalidIteratorState is not implemented.\r\n *\r\n * Revision 17: October 25, 2005\r\n *   Some core XPath function fixes and a patch to avoid crashing certain\r\n *   versions of MSXML in PathExpr.prototype.getOwnerElement, thanks to\r\n *   Sébastien Cramatte <contact (at) zeninteractif.com>.\r\n *\r\n * Revision 16: September 22, 2005\r\n *   Workarounds for some IE 5.5 deficiencies.\r\n *   Fixed problem with prefix node tests on attribute nodes.\r\n *\r\n * Revision 15: May 21, 2005\r\n *   Fixed problem with QName node tests on elements with an xmlns=\"...\".\r\n *\r\n * Revision 14: May 19, 2005\r\n *   Fixed QName node tests on attribute node regression.\r\n *\r\n * Revision 13: May 3, 2005\r\n *   Node tests are case insensitive now if working in an HTML DOM.\r\n *\r\n * Revision 12: April 26, 2005\r\n *   Updated licence.  Slight code changes to enable use of Dean\r\n *   Edwards' script compression, http://dean.edwards.name/packer/ .\r\n *\r\n * Revision 11: April 23, 2005\r\n *   Fixed bug with 'and' and 'or' operators, fix thanks to\r\n *   Sandy McArthur <sandy (at) mcarthur.org>.\r\n *\r\n * Revision 10: April 15, 2005\r\n *   Added support for a virtual root node, supposedly helpful for\r\n *   implementing XForms.  Fixed problem with QName node tests and\r\n *   the parent axis.\r\n *\r\n * Revision 9: March 17, 2005\r\n *   Namespace resolver tweaked so using the document node as the context\r\n *   for namespace lookups is equivalent to using the document element.\r\n *\r\n * Revision 8: February 13, 2005\r\n *   Handle implicit declaration of 'xmlns' namespace prefix.\r\n *   Fixed bug when comparing nodesets.\r\n *   Instance data can now be associated with a FunctionResolver, and\r\n *     workaround for MSXML not supporting 'localName' and 'getElementById',\r\n *     thanks to Grant Gongaware.\r\n *   Fix a few problems when the context node is the root node.\r\n *\r\n * Revision 7: February 11, 2005\r\n *   Default namespace resolver fix from Grant Gongaware\r\n *   <grant (at) gongaware.com>.\r\n *\r\n * Revision 6: February 10, 2005\r\n *   Fixed bug in 'number' function.\r\n *\r\n * Revision 5: February 9, 2005\r\n *   Fixed bug where text nodes not getting converted to string values.\r\n *\r\n * Revision 4: January 21, 2005\r\n *   Bug in 'name' function, fix thanks to Bill Edney.\r\n *   Fixed incorrect processing of namespace nodes.\r\n *   Fixed NamespaceResolver to resolve 'xml' namespace.\r\n *   Implemented union '|' operator.\r\n *\r\n * Revision 3: January 14, 2005\r\n *   Fixed bug with nodeset comparisons, bug lexing < and >.\r\n *\r\n * Revision 2: October 26, 2004\r\n *   QName node test namespace handling fixed.  Few other bug fixes.\r\n *\r\n * Revision 1: August 13, 2004\r\n *   Bug fixes from William J. Edney <bedney (at) technicalpursuit.com>.\r\n *   Added minimal licence.\r\n *\r\n * Initial version: June 14, 2004\r\n */\n// non-node wrapper\nvar xpath = typeof exports === 'undefined' ? {} : exports;\n\n(function (exports) {\n  \"use strict\"; // functional helpers\n\n  function curry(func) {\n    var slice = Array.prototype.slice,\n        totalargs = func.length,\n        partial = function (args, fn) {\n      return function () {\n        return fn.apply(this, args.concat(slice.call(arguments)));\n      };\n    },\n        fn = function () {\n      var args = slice.call(arguments);\n      return args.length < totalargs ? partial(args, fn) : func.apply(this, slice.apply(arguments, [0, totalargs]));\n    };\n\n    return fn;\n  }\n\n  var forEach = function (f, xs) {\n    for (var i = 0; i < xs.length; i += 1) {\n      f(xs[i], i, xs);\n    }\n  };\n\n  var reduce = function (f, seed, xs) {\n    var acc = seed;\n    forEach(function (x, i) {\n      acc = f(acc, x, i);\n    }, xs);\n    return acc;\n  };\n\n  var map = function (f, xs) {\n    var mapped = new Array(xs.length);\n    forEach(function (x, i) {\n      mapped[i] = f(x);\n    }, xs);\n    return mapped;\n  };\n\n  var filter = function (f, xs) {\n    var filtered = [];\n    forEach(function (x, i) {\n      if (f(x, i)) {\n        filtered.push(x);\n      }\n    }, xs);\n    return filtered;\n  };\n\n  var includes = function (values, value) {\n    for (var i = 0; i < values.length; i += 1) {\n      if (values[i] === value) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  function always(value) {\n    return function () {\n      return value;\n    };\n  }\n\n  function toString(x) {\n    return x.toString();\n  }\n\n  var join = function (s, xs) {\n    return xs.join(s);\n  };\n\n  var wrap = function (pref, suf, str) {\n    return pref + str + suf;\n  };\n\n  var prototypeConcat = Array.prototype.concat; // .apply() fails above a certain number of arguments - https://github.com/goto100/xpath/pull/98\n\n  var MAX_ARGUMENT_LENGTH = 32767;\n\n  function flatten(arr) {\n    var result = [];\n\n    for (var start = 0; start < arr.length; start += MAX_ARGUMENT_LENGTH) {\n      var chunk = arr.slice(start, start + MAX_ARGUMENT_LENGTH);\n      result = prototypeConcat.apply(result, chunk);\n    }\n\n    return result;\n  }\n\n  function assign(target, varArgs) {\n    // .length of function is 2\n    var to = Object(target);\n\n    for (var index = 1; index < arguments.length; index++) {\n      var nextSource = arguments[index];\n\n      if (nextSource != null) {\n        // Skip over if undefined or null\n        for (var nextKey in nextSource) {\n          // Avoid bugs when hasOwnProperty is shadowed\n          if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n\n    return to;\n  } // XPathParser ///////////////////////////////////////////////////////////////\n\n\n  XPathParser.prototype = new Object();\n  XPathParser.prototype.constructor = XPathParser;\n  XPathParser.superclass = Object.prototype;\n\n  function XPathParser() {\n    this.init();\n  }\n\n  XPathParser.prototype.init = function () {\n    this.reduceActions = [];\n\n    this.reduceActions[3] = function (rhs) {\n      return new OrOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[5] = function (rhs) {\n      return new AndOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[7] = function (rhs) {\n      return new EqualsOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[8] = function (rhs) {\n      return new NotEqualOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[10] = function (rhs) {\n      return new LessThanOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[11] = function (rhs) {\n      return new GreaterThanOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[12] = function (rhs) {\n      return new LessThanOrEqualOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[13] = function (rhs) {\n      return new GreaterThanOrEqualOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[15] = function (rhs) {\n      return new PlusOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[16] = function (rhs) {\n      return new MinusOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[18] = function (rhs) {\n      return new MultiplyOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[19] = function (rhs) {\n      return new DivOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[20] = function (rhs) {\n      return new ModOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[22] = function (rhs) {\n      return new UnaryMinusOperation(rhs[1]);\n    };\n\n    this.reduceActions[24] = function (rhs) {\n      return new BarOperation(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[25] = function (rhs) {\n      return new PathExpr(undefined, undefined, rhs[0]);\n    };\n\n    this.reduceActions[27] = function (rhs) {\n      rhs[0].locationPath = rhs[2];\n      return rhs[0];\n    };\n\n    this.reduceActions[28] = function (rhs) {\n      rhs[0].locationPath = rhs[2];\n      rhs[0].locationPath.steps.unshift(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\n      return rhs[0];\n    };\n\n    this.reduceActions[29] = function (rhs) {\n      return new PathExpr(rhs[0], [], undefined);\n    };\n\n    this.reduceActions[30] = function (rhs) {\n      if (Utilities.instance_of(rhs[0], PathExpr)) {\n        if (rhs[0].filterPredicates == undefined) {\n          rhs[0].filterPredicates = [];\n        }\n\n        rhs[0].filterPredicates.push(rhs[1]);\n        return rhs[0];\n      } else {\n        return new PathExpr(rhs[0], [rhs[1]], undefined);\n      }\n    };\n\n    this.reduceActions[32] = function (rhs) {\n      return rhs[1];\n    };\n\n    this.reduceActions[33] = function (rhs) {\n      return new XString(rhs[0]);\n    };\n\n    this.reduceActions[34] = function (rhs) {\n      return new XNumber(rhs[0]);\n    };\n\n    this.reduceActions[36] = function (rhs) {\n      return new FunctionCall(rhs[0], []);\n    };\n\n    this.reduceActions[37] = function (rhs) {\n      return new FunctionCall(rhs[0], rhs[2]);\n    };\n\n    this.reduceActions[38] = function (rhs) {\n      return [rhs[0]];\n    };\n\n    this.reduceActions[39] = function (rhs) {\n      rhs[2].unshift(rhs[0]);\n      return rhs[2];\n    };\n\n    this.reduceActions[43] = function (rhs) {\n      return new LocationPath(true, []);\n    };\n\n    this.reduceActions[44] = function (rhs) {\n      rhs[1].absolute = true;\n      return rhs[1];\n    };\n\n    this.reduceActions[46] = function (rhs) {\n      return new LocationPath(false, [rhs[0]]);\n    };\n\n    this.reduceActions[47] = function (rhs) {\n      rhs[0].steps.push(rhs[2]);\n      return rhs[0];\n    };\n\n    this.reduceActions[49] = function (rhs) {\n      return new Step(rhs[0], rhs[1], []);\n    };\n\n    this.reduceActions[50] = function (rhs) {\n      return new Step(Step.CHILD, rhs[0], []);\n    };\n\n    this.reduceActions[51] = function (rhs) {\n      return new Step(rhs[0], rhs[1], rhs[2]);\n    };\n\n    this.reduceActions[52] = function (rhs) {\n      return new Step(Step.CHILD, rhs[0], rhs[1]);\n    };\n\n    this.reduceActions[54] = function (rhs) {\n      return [rhs[0]];\n    };\n\n    this.reduceActions[55] = function (rhs) {\n      rhs[1].unshift(rhs[0]);\n      return rhs[1];\n    };\n\n    this.reduceActions[56] = function (rhs) {\n      if (rhs[0] == \"ancestor\") {\n        return Step.ANCESTOR;\n      } else if (rhs[0] == \"ancestor-or-self\") {\n        return Step.ANCESTORORSELF;\n      } else if (rhs[0] == \"attribute\") {\n        return Step.ATTRIBUTE;\n      } else if (rhs[0] == \"child\") {\n        return Step.CHILD;\n      } else if (rhs[0] == \"descendant\") {\n        return Step.DESCENDANT;\n      } else if (rhs[0] == \"descendant-or-self\") {\n        return Step.DESCENDANTORSELF;\n      } else if (rhs[0] == \"following\") {\n        return Step.FOLLOWING;\n      } else if (rhs[0] == \"following-sibling\") {\n        return Step.FOLLOWINGSIBLING;\n      } else if (rhs[0] == \"namespace\") {\n        return Step.NAMESPACE;\n      } else if (rhs[0] == \"parent\") {\n        return Step.PARENT;\n      } else if (rhs[0] == \"preceding\") {\n        return Step.PRECEDING;\n      } else if (rhs[0] == \"preceding-sibling\") {\n        return Step.PRECEDINGSIBLING;\n      } else if (rhs[0] == \"self\") {\n        return Step.SELF;\n      }\n\n      return -1;\n    };\n\n    this.reduceActions[57] = function (rhs) {\n      return Step.ATTRIBUTE;\n    };\n\n    this.reduceActions[59] = function (rhs) {\n      if (rhs[0] == \"comment\") {\n        return NodeTest.commentTest;\n      } else if (rhs[0] == \"text\") {\n        return NodeTest.textTest;\n      } else if (rhs[0] == \"processing-instruction\") {\n        return NodeTest.anyPiTest;\n      } else if (rhs[0] == \"node\") {\n        return NodeTest.nodeTest;\n      }\n\n      return new NodeTest(-1, undefined);\n    };\n\n    this.reduceActions[60] = function (rhs) {\n      return new NodeTest.PITest(rhs[2]);\n    };\n\n    this.reduceActions[61] = function (rhs) {\n      return rhs[1];\n    };\n\n    this.reduceActions[63] = function (rhs) {\n      rhs[1].absolute = true;\n      rhs[1].steps.unshift(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\n      return rhs[1];\n    };\n\n    this.reduceActions[64] = function (rhs) {\n      rhs[0].steps.push(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\n      rhs[0].steps.push(rhs[2]);\n      return rhs[0];\n    };\n\n    this.reduceActions[65] = function (rhs) {\n      return new Step(Step.SELF, NodeTest.nodeTest, []);\n    };\n\n    this.reduceActions[66] = function (rhs) {\n      return new Step(Step.PARENT, NodeTest.nodeTest, []);\n    };\n\n    this.reduceActions[67] = function (rhs) {\n      return new VariableReference(rhs[1]);\n    };\n\n    this.reduceActions[68] = function (rhs) {\n      return NodeTest.nameTestAny;\n    };\n\n    this.reduceActions[69] = function (rhs) {\n      return new NodeTest.NameTestPrefixAny(rhs[0].split(':')[0]);\n    };\n\n    this.reduceActions[70] = function (rhs) {\n      return new NodeTest.NameTestQName(rhs[0]);\n    };\n  };\n\n  XPathParser.actionTable = [\" s s        sssssssss    s ss  s  ss\", \"                 s                  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"                rrrrr               \", \" s s        sssssssss    s ss  s  ss\", \"rs  rrrrrrrr s  sssssrrrrrr  rrs rs \", \" s s        sssssssss    s ss  s  ss\", \"                            s       \", \"                            s       \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"  s                                 \", \"                            s       \", \" s           s  sssss          s  s \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"a                                   \", \"r       s                    rr  r  \", \"r      sr                    rr  r  \", \"r   s  rr            s       rr  r  \", \"r   rssrr            rss     rr  r  \", \"r   rrrrr            rrrss   rr  r  \", \"r   rrrrrsss         rrrrr   rr  r  \", \"r   rrrrrrrr         rrrrr   rr  r  \", \"r   rrrrrrrr         rrrrrs  rr  r  \", \"r   rrrrrrrr         rrrrrr  rr  r  \", \"r   rrrrrrrr         rrrrrr  rr  r  \", \"r  srrrrrrrr         rrrrrrs rr sr  \", \"r  srrrrrrrr         rrrrrrs rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r   rrrrrrrr         rrrrrr  rr  r  \", \"r   rrrrrrrr         rrrrrr  rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"                sssss               \", \"r  rrrrrrrrr         rrrrrrr rr sr  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"                             s      \", \"r  srrrrrrrr         rrrrrrs rr  r  \", \"r   rrrrrrrr         rrrrr   rr  r  \", \"              s                     \", \"                             s      \", \"                rrrrr               \", \" s s        sssssssss    s sss s  ss\", \"r  srrrrrrrr         rrrrrrs rr  r  \", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s s        sssssssss      ss  s  ss\", \" s s        sssssssss    s ss  s  ss\", \" s           s  sssss          s  s \", \" s           s  sssss          s  s \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \" s           s  sssss          s  s \", \" s           s  sssss          s  s \", \"r  rrrrrrrrr         rrrrrrr rr sr  \", \"r  rrrrrrrrr         rrrrrrr rr sr  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"                             s      \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"                             rr     \", \"                             s      \", \"                             rs     \", \"r      sr                    rr  r  \", \"r   s  rr            s       rr  r  \", \"r   rssrr            rss     rr  r  \", \"r   rssrr            rss     rr  r  \", \"r   rrrrr            rrrss   rr  r  \", \"r   rrrrr            rrrss   rr  r  \", \"r   rrrrr            rrrss   rr  r  \", \"r   rrrrr            rrrss   rr  r  \", \"r   rrrrrsss         rrrrr   rr  r  \", \"r   rrrrrsss         rrrrr   rr  r  \", \"r   rrrrrrrr         rrrrr   rr  r  \", \"r   rrrrrrrr         rrrrr   rr  r  \", \"r   rrrrrrrr         rrrrr   rr  r  \", \"r   rrrrrrrr         rrrrrr  rr  r  \", \"                                 r  \", \"                                 s  \", \"r  srrrrrrrr         rrrrrrs rr  r  \", \"r  srrrrrrrr         rrrrrrs rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr  r  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \" s s        sssssssss    s ss  s  ss\", \"r  rrrrrrrrr         rrrrrrr rr rr  \", \"                             r      \"];\n  XPathParser.actionTableNumber = [\" 1 0        /.-,+*)('    & %$  #  \\\"!\", \"                 J                  \", \"a  aaaaaaaaa         aaaaaaa aa  a  \", \"                YYYYY               \", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \"K1  KKKKKKKK .  +*)('KKKKKK  KK# K\\\" \", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \"                            N       \", \"                            O       \", \"e  eeeeeeeee         eeeeeee ee ee  \", \"f  fffffffff         fffffff ff ff  \", \"d  ddddddddd         ddddddd dd dd  \", \"B  BBBBBBBBB         BBBBBBB BB BB  \", \"A  AAAAAAAAA         AAAAAAA AA AA  \", \"  P                                 \", \"                            Q       \", \" 1           .  +*)('          #  \\\" \", \"b  bbbbbbbbb         bbbbbbb bb  b  \", \"                                    \", \"!       S                    !!  !  \", \"\\\"      T\\\"                    \\\"\\\"  \\\"  \", \"$   V  $$            U       $$  $  \", \"&   &ZY&&            &XW     &&  &  \", \")   )))))            )))\\\\[   ))  )  \", \".   ....._^]         .....   ..  .  \", \"1   11111111         11111   11  1  \", \"5   55555555         55555`  55  5  \", \"7   77777777         777777  77  7  \", \"9   99999999         999999  99  9  \", \":  c::::::::         ::::::b :: a:  \", \"I  fIIIIIIII         IIIIIIe II  I  \", \"=  =========         ======= == ==  \", \"?  ?????????         ??????? ?? ??  \", \"C  CCCCCCCCC         CCCCCCC CC CC  \", \"J   JJJJJJJJ         JJJJJJ  JJ  J  \", \"M   MMMMMMMM         MMMMMM  MM  M  \", \"N  NNNNNNNNN         NNNNNNN NN  N  \", \"P  PPPPPPPPP         PPPPPPP PP  P  \", \"                +*)('               \", \"R  RRRRRRRRR         RRRRRRR RR aR  \", \"U  UUUUUUUUU         UUUUUUU UU  U  \", \"Z  ZZZZZZZZZ         ZZZZZZZ ZZ ZZ  \", \"c  ccccccccc         ccccccc cc cc  \", \"                             j      \", \"L  fLLLLLLLL         LLLLLLe LL  L  \", \"6   66666666         66666   66  6  \", \"              k                     \", \"                             l      \", \"                XXXXX               \", \" 1 0        /.-,+*)('    & %$m #  \\\"!\", \"_  f________         ______e __  _  \", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1 0        /.-,+*)('      %$  #  \\\"!\", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \" 1           .  +*)('          #  \\\" \", \" 1           .  +*)('          #  \\\" \", \">  >>>>>>>>>         >>>>>>> >> >>  \", \" 1           .  +*)('          #  \\\" \", \" 1           .  +*)('          #  \\\" \", \"Q  QQQQQQQQQ         QQQQQQQ QQ aQ  \", \"V  VVVVVVVVV         VVVVVVV VV aV  \", \"T  TTTTTTTTT         TTTTTTT TT  T  \", \"@  @@@@@@@@@         @@@@@@@ @@ @@  \", \"                             \\x87      \", \"[  [[[[[[[[[         [[[[[[[ [[ [[  \", \"D  DDDDDDDDD         DDDDDDD DD DD  \", \"                             HH     \", \"                             \\x88      \", \"                             F\\x89     \", \"#      T#                    ##  #  \", \"%   V  %%            U       %%  %  \", \"'   'ZY''            'XW     ''  '  \", \"(   (ZY((            (XW     ((  (  \", \"+   +++++            +++\\\\[   ++  +  \", \"*   *****            ***\\\\[   **  *  \", \"-   -----            ---\\\\[   --  -  \", \",   ,,,,,            ,,,\\\\[   ,,  ,  \", \"0   00000_^]         00000   00  0  \", \"/   /////_^]         /////   //  /  \", \"2   22222222         22222   22  2  \", \"3   33333333         33333   33  3  \", \"4   44444444         44444   44  4  \", \"8   88888888         888888  88  8  \", \"                                 ^  \", \"                                 \\x8a  \", \";  f;;;;;;;;         ;;;;;;e ;;  ;  \", \"<  f<<<<<<<<         <<<<<<e <<  <  \", \"O  OOOOOOOOO         OOOOOOO OO  O  \", \"`  `````````         ``````` ``  `  \", \"S  SSSSSSSSS         SSSSSSS SS  S  \", \"W  WWWWWWWWW         WWWWWWW WW  W  \", \"\\\\  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\         \\\\\\\\\\\\\\\\\\\\\\\\\\\\ \\\\\\\\ \\\\\\\\  \", \"E  EEEEEEEEE         EEEEEEE EE EE  \", \" 1 0        /.-,+*)('    & %$  #  \\\"!\", \"]  ]]]]]]]]]         ]]]]]]] ]] ]]  \", \"                             G      \"];\n  XPathParser.gotoTablee              \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                        h  J \", \"              i          j   \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"                             \", \"o456789:;<=>?@ ABpqCDEFGH IJ \", \"                             \", \"  r6789:;<=>?@ AB  CDEFGH IJ \", \"   s789:;<=>?@ AB  CDEFGH IJ \", \"    t89:;<=>?@ AB  CDEFGH IJ \", \"    u89:;<=>?@ AB  CDEFGH IJ \", \"     v9:;<=>?@ AB  CDEFGH IJ \", \"     w9:;<=>?@ AB  CDEFGH IJ \", \"     x9:;<=>?@ AB  CDEFGH IJ \", \"     y9:;<=>?@ AB  CDEFGH IJ \", \"      z:;<=>?@ AB  CDEFGH IJ \", \"      {:;<=>?@ AB  CDEFGH IJ \", \"       |;<=>?@ AB  CDEFGH IJ \", \"       };<=>?@ AB  CDEFGH IJ \", \"       ~;<=>?@ AB  CDEFGH IJ \", \"         \\x7f=>?@ AB  CDEFGH IJ \", \"\\x80456789:;<=>?@ AB  CDEFGH IJ\\x81\", \"            \\x82        EFGH IJ \", \"            \\x83        EFGH IJ \", \"                             \", \"                     \\x84 GH IJ \", \"                     \\x85 GH IJ \", \"              i          \\x86   \", \"              i          \\xo456789:;<=>?@ AB\\x8cqCDEFGH IJ \", \"                             \", \"                             \"];\n  XPathParser.productions = [[1, 1, 2], [2, 1, 3], [3, 1, 4], [3, 3, 3, -9, 4], [4, 1, 5], [4, 3, 4, -8, 5], [5, 1, 6], [5, 3, 5, -22, 6], [5, 3, 5, -5, 6], [6, 1, 7], [6, 3, 6, -23, 7], [6, 3, 6, -24, 7], [6, 3, 6, -6, 7], [6, 3, 6, -7, 7], [7, 1, 8], [7, 3, 7, -25, 8], [7, 3, 7, -26, 8], [8, 1, 9], [8, 3, 8, -12, 9], [8, 3, 8, -11, 9], [8, 3, 8, -10, 9], [9, 1, 10], [9, 2, -26, 9], [10, 1, 11], [10, 3, 10, -27, 11], [11, 1, 12], [11, 1, 13], [11, 3, 13, -28, 14], [11, 3, 13, -4, 14], [13, 1, 15], [13, 2, 13, 16], [15, 1, 17], [15, 3, -29, 2, -30], [15, 1, -15], [15, 1, -16], [15, 1, 18], [18, 3, -13, -29, -30], [18, 4, -13, -29, 19, -30], [19, 1, 20], [19, 3, 20, -31, 19], [20, 1, 2], [12, 1, 14], [12, 1, 21], [21, 1, -28], [21, 2, -28, 14], [21, 1, 22], [14, 1, 23], [14, 3, 14, -28, 23], [14, 1, 24], [23, 2, 25, 26], [23, 1, 26], [23, 3, 25, 26, 27], [23, 2, 26, 27], [23, 1, 28], [27, 1, 16], [27, 2, 16, 27], [25, 2, -14, -3], [25, 1, -32], [26, 1, 29], [26, 3, -20, -29, -30], [26, 4, -21, -29, -15, -30], [16, 3, -33, 30, -34], [30, 1, 2], [22, 2, -4, 14], [24, 3, 14, -4, 23], [28, 1, -35], [28, 1, -2], [17, 2, -36, -18], [29, 1, -17], [29, 1, -19], [29, 1, -18]];\n  XPathParser.DOUBLEDOT = 2;\n  XPathParser.DOUBLECOLON = 3;\n  XPathParser.DOUBLESLASH = 4;\n  XPathParser.NOTEQUAL = 5;\n  XPathParser.LESSTHANOREQUAL = 6;\n  XPathParser.GREATERTHANOREQUAL = 7;\n  XPathParser.AND = 8;\n  XPathParser.OR = 9;\n  XPathParser.MOD = 10;\n  XPathParser.DIV = 11;\n  XPathParser.MULTIPLYOPERATOR = 12;\n  XPathParser.FUNCTIONNAME = 13;\n  XPathParser.AXISNAME = 14;\n  XPathParser.LITERAL = 15;\n  XPathParser.NUMBER = 16;\n  XPathParser.ASTERISKNAMETEST = 17;\n  XPathParser.QNAME = 18;\n  XPathParser.NCNAMECOLONASTERISK = 19;\n  XPathParser.NODETYPE = 20;\n  XPathParser.PROCESSINGINSTRUCTIONWITHLITERAL = 21;\n  XPathParser.EQUALS = 22;\n  XPathParser.LESSTHAN = 23;\n  XPathParser.GREATERTHAN = 24;\n  XPathParser.PLUS = 25;\n  XPathParser.MINUS = 26;\n  XPathParser.BAR = 27;\n  XPathParser.SLASH = 28;\n  XPathParser.LEFTPARENTHESIS = 29;\n  XPathParser.RIGHTPARENTHESIS = 30;\n  XPathParser.COMMA = 31;\n  XPathParser.AT = 32;\n  XPathParser.LEFTBRACKET = 33;\n  XPathParser.RIGHTBRACKET = 34;\n  XPathParser.DOT = 35;\n  XPathParser.DOLLAR = 36;\n\n  XPathParser.prototype.tokenize = function (s1) {\n    var types = [];\n    var values = [];\n    var s = s1 + '\\0';\n    var pos = 0;\n    var c = s.charAt(pos++);\n\n    while (1) {\n      while (c == ' ' || c == '\\t' || c == '\\r' || c == '\\n') {\n        c = s.charAt(pos++);\n      }\n\n      if (c == '\\0' || pos >= s.length) {\n        break;\n      }\n\n      if (c == '(') {\n        types.push(XPathParser.LEFTPARENTHESIS);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == ')') {\n        types.push(XPathParser.RIGHTPARENTHESIS);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == '[') {\n        types.push(XPathParser.LEFTBRACKET);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == ']') {\n        types.push(XPathParser.RIGHTBRACKET);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == '@') {\n        types.push(XPathParser.AT);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == ',') {\n        types.push(XPathParser.COMMA);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == '|') {\n        types.push(XPathParser.BAR);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == '+') {\n        types.push(XPathParser.PLUS);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == '-') {\n        types.push(XPathParser.MINUS);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == '=') {\n        types.push(XPathParser.EQUALS);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == '$') {\n        types.push(XPathParser.DOLLAR);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == '.') {\n        c = s.charAt(pos++);\n\n        if (c == '.') {\n          types.push(XPathParser.DOUBLEDOT);\n          values.push(\"..\");\n          c = s.charAt(pos++);\n          continue;\n        }\n\n        if (c >= '0' && c <= '9') {\n          var number = \".\" + c;\n          c = s.charAt(pos++);\n\n          while (c >= '0' && c <= '9') {\n            number += c;\n            c = s.charAt(pos++);\n          }\n\n          types.push(XPathParser.NUMBER);\n          values.push(number);\n          continue;\n        }\n\n        types.push(XPathParser.DOT);\n        values.push('.');\n        continue;\n      }\n\n      if (c == '\\'' || c == '\"') {\n        var delimiter = c;\n        var literal = \"\";\n\n        while (pos < s.length && (c = s.charAt(pos)) !== delimiter) {\n          literal += c;\n          pos += 1;\n        }\n\n        if (c !== delimiter) {\n          throw XPathException.fromMessage(\"Unterminated string literal: \" + delimiter + literal);\n        }\n\n        pos += 1;\n        types.push(XPathParser.LITERAL);\n        values.push(literal);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c >= '0' && c <= '9') {\n        var number = c;\n        c = s.charAt(pos++);\n\n        while (c >= '0' && c <= '9') {\n          number += c;\n          c = s.charAt(pos++);\n        }\n\n        if (c == '.') {\n          if (s.charAt(pos) >= '0' && s.charAt(pos) <= '9') {\n            number += c;\n            number += s.charAt(pos++);\n            c = s.charAt(pos++);\n\n            while (c >= '0' && c <= '9') {\n              number += c;\n              c = s.charAt(pos++);\n            }\n          }\n        }\n\n        types.push(XPathParser.NUMBER);\n        values.push(number);\n        continue;\n      }\n\n      if (c == '*') {\n        if (types.length > 0) {\n          var last = types[types.length - 1];\n\n          if (last != XPathParser.AT && last != XPathParser.DOUBLECOLON && last != XPathParser.LEFTPARENTHESIS && last != XPathParser.LEFTBRACKET && last != XPathParser.AND && last != XPathParser.OR && last != XPathParser.MOD && last != XPathParser.DIV && last != XPathParser.MULTIPLYOPERATOR && last != XPathParser.SLASH && last != XPathParser.DOUBLESLASH && last != XPathParser.BAR && last != XPathParser.PLUS && last != XPathParser.MINUS && last != XPathParser.EQUALS && last != XPathParser.NOTEQUAL && last != XPathParser.LESSTHAN && last != XPathParser.LESSTHANOREQUAL && last != XPathParser.GREATERTHAN && last != XPathParser.GREATERTHANOREQUAL) {\n            types.push(XPathParser.MULTIPLYOPERATOR);\n            values.push(c);\n            c = s.charAt(pos++);\n            continue;\n          }\n        }\n\n        types.push(XPathParser.ASTERISKNAMETEST);\n        values.push(c);\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == ':') {\n        if (s.charAt(pos) == ':') {\n          types.push(XPathParser.DOUBLECOLON);\n          values.push(\"::\");\n          pos++;\n          c = s.charAt(pos++);\n          continue;\n        }\n      }\n\n      if (c == '/') {\n        c = s.charAt(pos++);\n\n        if (c == '/') {\n          types.push(XPathParser.DOUBLESLASH);\n          values.push(\"//\");\n          c = s.charAt(pos++);\n          continue;\n        }\n\n        types.push(XPathParser.SLASH);\n        values.push('/');\n        continue;\n      }\n\n      if (c == '!') {\n        if (s.charAt(pos) == '=') {\n          types.push(XPathParser.NOTEQUAL);\n          values.push(\"!=\");\n          pos++;\n          c = s.charAt(pos++);\n          continue;\n        }\n      }\n\n      if (c == '<') {\n        if (s.charAt(pos) == '=') {\n          types.push(XPathParser.LESSTHANOREQUAL);\n          values.push(\"<=\");\n          pos++;\n          c = s.charAt(pos++);\n          continue;\n        }\n\n        types.push(XPathParser.LESSTHAN);\n        values.push('<');\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == '>') {\n        if (s.charAt(pos) == '=') {\n          types.push(XPathParser.GREATERTHANOREQUAL);\n          values.push(\">=\");\n          pos++;\n          c = s.charAt(pos++);\n          continue;\n        }\n\n        types.push(XPathParser.GREATERTHAN);\n        values.push('>');\n        c = s.charAt(pos++);\n        continue;\n      }\n\n      if (c == '_' || Utilities.isLetter(c.charCodeAt(0))) {\n        var name = c;\n        c = s.charAt(pos++);\n\n        while (Utilities.isNCNameChar(c.charCodeAt(0))) {\n          name += c;\n          c = s.charAt(pos++);\n        }\n\n        if (types.length > 0) {\n          var last = types[types.length - 1];\n\n          if (last != XPathParser.AT && last != XPathParser.DOUBLECOLON && last != XPathParser.LEFTPARENTHESIS && last != XPathParser.LEFTBRACKET && last != XPathParser.AND && last != XPathParser.OR && last != XPathParser.MOD && last != XPathParser.DIV && last != XPathParser.MULTIPLYOPERATOR && last != XPathParser.SLASH && last != XPathParser.DOUBLESLASH && last != XPathParser.BAR && last != XPathParser.PLUS && last != XPathParser.MINUS && last != XPathParser.EQUALS && last != XPathParser.NOTEQUAL && last != XPathParser.LESSTHAN && last != XPathParser.LESSTHANOREQUAL && last != XPathParser.GREATERTHAN && last != XPathParser.GREATERTHANOREQUAL) {\n            if (name == \"and\") {\n              types.push(XPathParser.AND);\n              values.push(name);\n              continue;\n            }\n\n            if (name == \"or\") {\n              types.push(XPathParser.OR);\n              values.push(name);\n              continue;\n            }\n\n            if (name == \"mod\") {\n              types.push(XPathParser.MOD);\n              values.push(name);\n              continue;\n            }\n\n            if (name == \"div\") {\n              types.push(XPathParser.DIV);\n              values.push(name);\n              continue;\n            }\n          }\n        }\n\n        if (c == ':') {\n          if (s.charAt(pos) == '*') {\n            types.push(XPathParser.NCNAMECOLONASTERISK);\n            values.push(name + \":*\");\n            pos++;\n            c = s.charAt(pos++);\n            continue;\n          }\n\n          if (s.charAt(pos) == '_' || Utilities.isLetter(s.charCodeAt(pos))) {\n            name += ':';\n            c = s.charAt(pos++);\n\n            while (Utilities.isNCNameChar(c.charCodeAt(0))) {\n              name += c;\n              c = s.charAt(pos++);\n            }\n\n            if (c == '(') {\n              types.push(XPathParser.FUNCTIONNAME);\n              values.push(name);\n              continue;\n            }\n\n            types.push(XPathParser.QNAME);\n            values.push(name);\n            continue;\n          }\n\n          if (s.charAt(pos) == ':') {\n            types.push(XPathParser.AXISNAME);\n            values.push(name);\n            continue;\n          }\n        }\n\n        if (c == '(') {\n          if (name == \"comment\" || name == \"text\" || name == \"node\") {\n            types.push(XPathParser.NODETYPE);\n            values.push(name);\n            continue;\n          }\n\n          if (name == \"processing-instruction\") {\n            if (s.charAt(pos) == ')') {\n              types.push(XPathParser.NODETYPE);\n            } else {\n              types.push(XPathParser.PROCESSINGINSTRUCTIONWITHLITERAL);\n            }\n\n            values.push(name);\n            continue;\n          }\n\n          types.push(XPathParser.FUNCTIONNAME);\n          values.push(name);\n          continue;\n        }\n\n        types.push(XPathParser.QNAME);\n        values.push(name);\n        continue;\n      }\n\n      throw new Error(\"Unexpected character \" + c);\n    }\n\n    types.push(1);\n    values.push(\"[EOF]\");\n    return [types, values];\n  };\n\n  XPathParser.SHIFT = 's';\n  XPathParser.REDUCE = 'r';\n  XPathParser.ACCEPT = 'a';\n\n  XPathParser.prototype.parse = function (s) {\n    var types;\n    var values;\n    var res = this.tokenize(s);\n\n    if (res == undefined) {\n      return undefined;\n    }\n\n    types = res[0];\n    values = res[1];\n    var tokenPos = 0;\n    var state = [];\n    var tokenType = [];\n    var tokenValue = [];\n    var s;\n    var a;\n    var t;\n    state.push(0);\n    tokenType.push(1);\n    tokenValue.push(\"_S\");\n    a = types[tokenPos];\n    t = values[tokenPos++];\n\n    while (1) {\n      s = state[state.length - 1];\n\n      switch (XPathParser.actionTable[s].charAt(a - 1)) {\n        case XPathParser.SHIFT:\n          tokenType.push(-a);\n          tokenValue.push(t);\n          state.push(XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32);\n          a = types[tokenPos];\n          t = values[tokenPos++];\n          break;\n\n        case XPathParser.REDUCE:\n          var num = XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][1];\n          var rhs = [];\n\n          for (var i = 0; i < num; i++) {\n            tokenType.pop();\n            rhs.unshift(tokenValue.pop());\n            state.pop();\n          }\n\n          var s_ = state[state.length - 1];\n          tokenType.push(XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][0]);\n\n          if (this.reduceActions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32] == undefined) {\n            tokenValue.push(rhs[0]);\n          } else {\n            tokenValue.push(this.reduceActions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32](rhs));\n          }\n\n          state.push(XPathParser.gotoTable[s_].charCodeAt(XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][0] - 2) - 33);\n          break;\n\n        case XPathParser.ACCEPT:\n          return new XPath(tokenValue.pop());\n\n        default:\n          throw new Error(\"XPath parse error\");\n      }\n    }\n  }; // XPath /////////////////////////////////////////////////////////////////////\n\n\n  XPath.prototype = new Object();\n  XPath.prototype.constructor = XPath;\n  XPath.superclass = Object.prototype;\n\n  function XPath(e) {\n    this.expression = e;\n  }\n\n  XPath.prototype.toString = function () {\n    return this.expression.toString();\n  };\n\n  function setIfUnset(obj, prop, value) {\n    if (!(prop in obj)) {\n      obj[prop] = value;\n    }\n  }\n\n  XPath.prototype.evaluate = function (c) {\n    c.contextNode = c.expressionContextNode;\n    c.contextSize = 1;\n    c.contextPosition = 1; // [2017-11-25] Removed usage of .implementation.hasFeature() since it does\n    //              not reliably detect HTML DOMs (always returns false in xmldom and true in browsers)\n\n    if (c.isHtml) {\n      setIfUnset(c, 'caseInsensitive', true);\n      setIfUnset(c, 'allowAnyNamespaceForNoPrefix', true);\n    }\n\n    setIfUnset(c, 'caseInsensitive', false);\n    return this.expression.evaluate(c);\n  };\n\n  XPath.XML_NAMESPACE_URI = \"http://www.w3.org/XML/1998/namespace\";\n  XPath.XMLNS_NAMESPACE_URI = \"http://www.w3.org/2000/xmlns/\"; // Expression ////////////////////////////////////////////////////////////////\n\n  Expression.prototype = new Object();\n  Expression.prototype.constructor = Expression;\n  Expression.superclass = Object.prototype;\n\n  function Expression() {}\n\n  Expression.prototype.init = function () {};\n\n  Expression.prototype.toString = function () {\n    return \"<Expression>\";\n  };\n\n  Expression.prototype.evaluate = function (c) {\n    throw new Error(\"Could not evaluate expression.\");\n  }; // UnaryOperation ////////////////////////////////////////////////////////////\n\n\n  UnaryOperation.prototype = new Expression();\n  UnaryOperation.prototype.constructor = UnaryOperation;\n  UnaryOperation.superclass = Expression.prototype;\n\n  function UnaryOperation(rhs) {\n    if (arguments.length > 0) {\n      this.init(rhs);\n    }\n  }\n\n  UnaryOperation.prototype.init = function (rhs) {\n    this.rhs = rhs;\n  }; // UnaryMinusOperation ///////////////////////////////////////////////////////\n\n\n  UnaryMinusOperation.prototype = new UnaryOperation();\n  UnaryMinusOperation.prototype.constructor = UnaryMinusOperation;\n  UnaryMinusOperation.superclass = UnaryOperation.prototype;\n\n  function UnaryMinusOperation(rhs) {\n    if (arguments.length > 0) {\n      this.init(rhs);\n    }\n  }\n\n  UnaryMinusOperation.prototype.init = function (rhs) {\n    UnaryMinusOperation.superclass.init.call(this, rhs);\n  };\n\n  UnaryMinusOperation.prototype.evaluate = function (c) {\n    return this.rhs.evaluate(c).number().negate();\n  };\n\n  UnaryMinusOperation.prototype.toString = function () {\n    return \"-\" + this.rhs.toString();\n  }; // BinaryOperation ///////////////////////////////////////////////////////////\n\n\n  BinaryOperation.prototype = new Expression();\n  BinaryOperation.prototype.constructor = BinaryOperation;\n  BinaryOperation.superclass = Expression.prototype;\n\n  function BinaryOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  BinaryOperation.prototype.init = function (lhs, rhs) {\n    this.lhs = lhs;\n    this.rhs = rhs;\n  }; // OrOperation ///////////////////////////////////////////////////////////////\n\n\n  OrOperation.prototype = new BinaryOperation();\n  OrOperation.prototype.constructor = OrOperation;\n  OrOperation.superclass = BinaryOperation.prototype;\n\n  function OrOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  OrOperation.prototype.init = function (lhs, rhs) {\n    OrOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  OrOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" or \" + this.rhs.toString() + \")\";\n  };\n\n  OrOperation.prototype.evaluate = function (c) {\n    var b = this.lhs.evaluate(c).bool();\n\n    if (b.booleanValue()) {\n      return b;\n    }\n\n    return this.rhs.evaluate(c).bool();\n  }; // AndOperation //////////////////////////////////////////////////////////////\n\n\n  AndOperation.prototype = new BinaryOperation();\n  AndOperation.prototype.constructor = AndOperation;\n  AndOperation.superclass = BinaryOperation.prototype;\n\n  function AndOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  AndOperation.prototype.init = function (lhs, rhs) {\n    AndOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  AndOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" and \" + this.rhs.toString() + \")\";\n  };\n\n  AndOperation.prototype.evaluate = function (c) {\n    var b = this.lhs.evaluate(c).bool();\n\n    if (!b.booleanValue()) {\n      return b;\n    }\n\n    return this.rhs.evaluate(c).bool();\n  }; // EqualsOperation ///////////////////////////////////////////////////////////\n\n\n  EqualsOperation.prototype = new BinaryOperation();\n  EqualsOperation.prototype.constructor = EqualsOperation;\n  EqualsOperation.superclass = BinaryOperation.prototype;\n\n  function EqualsOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  EqualsOperation.prototype.init = function (lhs, rhs) {\n    EqualsOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  EqualsOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" = \" + this.rhs.toString() + \")\";\n  };\n\n  EqualsOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).equals(this.rhs.evaluate(c));\n  }; // NotEqualOperation /////////////////////////////////////////////////////////\n\n\n  NotEqualOperation.prototype = new BinaryOperation();\n  NotEqualOperation.prototype.constructor = NotEqualOperation;\n  NotEqualOperation.superclass = BinaryOperation.prototype;\n\n  function NotEqualOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  NotEqualOperation.prototype.init = function (lhs, rhs) {\n    NotEqualOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  NotEqualOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" != \" + this.rhs.toString() + \")\";\n  };\n\n  NotEqualOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).notequal(this.rhs.evaluate(c));\n  }; // LessThanOperation /////////////////////////////////////////////////////////\n\n\n  LessThanOperation.prototype = new BinaryOperation();\n  LessThanOperation.prototype.constructor = LessThanOperation;\n  LessThanOperation.superclass = BinaryOperation.prototype;\n\n  function LessThanOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  LessThanOperation.prototype.init = function (lhs, rhs) {\n    LessThanOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  LessThanOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).lessthan(this.rhs.evaluate(c));\n  };\n\n  LessThanOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" < \" + this.rhs.toString() + \")\";\n  }; // GreaterThanOperation //////////////////////////////////////////////////////\n\n\n  GreaterThanOperation.prototype = new BinaryOperation();\n  GreaterThanOperation.prototype.constructor = GreaterThanOperation;\n  GreaterThanOperation.superclass = BinaryOperation.prototype;\n\n  function GreaterThanOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  GreaterThanOperation.prototype.init = function (lhs, rhs) {\n    GreaterThanOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  GreaterThanOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).greaterthan(this.rhs.evaluate(c));\n  };\n\n  GreaterThanOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" > \" + this.rhs.toString() + \")\";\n  }; // LessThanOrEqualOperation //////////////////////////////////////////////////\n\n\n  LessThanOrEqualOperation.prototype = new BinaryOperation();\n  LessThanOrEqualOperation.prototype.constructor = LessThanOrEqualOperation;\n  LessThanOrEqualOperation.superclass = BinaryOperation.prototype;\n\n  function LessThanOrEqualOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  LessThanOrEqualOperation.prototype.init = function (lhs, rhs) {\n    LessThanOrEqualOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  LessThanOrEqualOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).lessthanorequal(this.rhs.evaluate(c));\n  };\n\n  LessThanOrEqualOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" <= \" + this.rhs.toString() + \")\";\n  }; // GreaterThanOrEqualOperation ///////////////////////////////////////////////\n\n\n  GreaterThanOrEqualOperation.prototype = new BinaryOperation();\n  GreaterThanOrEqualOperation.prototype.constructor = GreaterThanOrEqualOperation;\n  GreaterThanOrEqualOperation.superclass = BinaryOperation.prototype;\n\n  function GreaterThanOrEqualOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  GreaterThanOrEqualOperation.prototype.init = function (lhs, rhs) {\n    GreaterThanOrEqualOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  GreaterThanOrEqualOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).greaterthanorequal(this.rhs.evaluate(c));\n  };\n\n  GreaterThanOrEqualOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" >= \" + this.rhs.toString() + \")\";\n  }; // PlusOperation /////////////////////////////////////////////////////////////\n\n\n  PlusOperation.prototype = new BinaryOperation();\n  PlusOperation.prototype.constructor = PlusOperation;\n  PlusOperation.superclass = BinaryOperation.prototype;\n\n  function PlusOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  PlusOperation.prototype.init = function (lhs, rhs) {\n    PlusOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  PlusOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).number().plus(this.rhs.evaluate(c).number());\n  };\n\n  PlusOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" + \" + this.rhs.toString() + \")\";\n  }; // MinusOperation ////////////////////////////////////////////////////////////\n\n\n  MinusOperation.prototype = new BinaryOperation();\n  MinusOperation.prototype.constructor = MinusOperation;\n  MinusOperation.superclass = BinaryOperation.prototype;\n\n  function MinusOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  MinusOperation.prototype.init = function (lhs, rhs) {\n    MinusOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  MinusOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).number().minus(this.rhs.evaluate(c).number());\n  };\n\n  MinusOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" - \" + this.rhs.toString() + \")\";\n  }; // MultiplyOperation /////////////////////////////////////////////////////////\n\n\n  MultiplyOperation.prototype = new BinaryOperation();\n  MultiplyOperation.prototype.constructor = MultiplyOperation;\n  MultiplyOperation.superclass = BinaryOperation.prototype;\n\n  function MultiplyOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  MultiplyOperation.prototype.init = function (lhs, rhs) {\n    MultiplyOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  MultiplyOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).number().multiply(this.rhs.evaluate(c).number());\n  };\n\n  MultiplyOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" * \" + this.rhs.toString() + \")\";\n  }; // DivOperation //////////////////////////////////////////////////////////////\n\n\n  DivOperation.prototype = new BinaryOperation();\n  DivOperation.prototype.constructor = DivOperation;\n  DivOperation.superclass = BinaryOperation.prototype;\n\n  function DivOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  DivOperation.prototype.init = function (lhs, rhs) {\n    DivOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  DivOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).number().div(this.rhs.evaluate(c).number());\n  };\n\n  DivOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" div \" + this.rhs.toString() + \")\";\n  }; // ModOperation //////////////////////////////////////////////////////////////\n\n\n  ModOperation.prototype = new BinaryOperation();\n  ModOperation.prototype.constructor = ModOperation;\n  ModOperation.superclass = BinaryOperation.prototype;\n\n  function ModOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  ModOperation.prototype.init = function (lhs, rhs) {\n    ModOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  ModOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).number().mod(this.rhs.evaluate(c).number());\n  };\n\n  ModOperation.prototype.toString = function () {\n    return \"(\" + this.lhs.toString() + \" mod \" + this.rhs.toString() + \")\";\n  }; // BarOperation //////////////////////////////////////////////////////////////\n\n\n  BarOperation.prototype = new BinaryOperation();\n  BarOperation.prototype.constructor = BarOperation;\n  BarOperation.superclass = BinaryOperation.prototype;\n\n  function BarOperation(lhs, rhs) {\n    if (arguments.length > 0) {\n      this.init(lhs, rhs);\n    }\n  }\n\n  BarOperation.prototype.init = function (lhs, rhs) {\n    BarOperation.superclass.init.call(this, lhs, rhs);\n  };\n\n  BarOperation.prototype.evaluate = function (c) {\n    return this.lhs.evaluate(c).nodeset().union(this.rhs.evaluate(c).nodeset());\n  };\n\n  BarOperation.prototype.toString = function () {\n    return map(toString, [this.lhs, this.rhs]).join(' | ');\n  }; // PathExpr //////////////////////////////////////////////////////////////////\n\n\n  PathExpr.prototype = new Expression();\n  PathExpr.prototype.constructor = PathExpr;\n  PathExpr.superclass = Expression.prototype;\n\n  function PathExpr(filter, filterPreds, locpath) {\n    if (arguments.length > 0) {\n      this.init(filter, filterPreds, locpath);\n    }\n  }\n\n  PathExpr.prototype.init = function (filter, filterPreds, locpath) {\n    PathExpr.superclass.init.call(this);\n    this.filter = filter;\n    this.filterPredicates = filterPreds;\n    this.locationPath = locpath;\n  };\n  /**\r\n   * Returns the topmost node of the tree containing node\r\n   */\n\n\n  function findRoot(node) {\n    while (node && node.parentNode) {\n      node = node.parentNode;\n    }\n\n    return node;\n  }\n\n  PathExpr.applyPredicates = function (predicates, c, nodes) {\n    if (predicates.length === 0) {\n      return nodes;\n    }\n\n    var ctx = c.extend({});\n    return reduce(function (inNodes, pred) {\n      ctx.contextSize = inNodes.length;\n      return filter(function (node, i) {\n        ctx.contextNode = node;\n        ctx.contextPosition = i + 1;\n        return PathExpr.predicateMatches(pred, ctx);\n      }, inNodes);\n    }, nodes, predicates);\n  };\n\n  PathExpr.getRoot = function (xpc, nodes) {\n    var firstNode = nodes[0];\n\n    if (firstNode.nodeType === 9\n    /*Node.DOCUMENT_NODE*/\n    ) {\n      return firstNode;\n    }\n\n    if (xpc.virtualRoot) {\n      return xpc.virtualRoot;\n    }\n\n    var ownerDoc = firstNode.ownerDocument;\n\n    if (ownerDoc) {\n      return ownerDoc;\n    } // IE 5.5 doesn't have ownerDocument?\n\n\n    var n = firstNode;\n\n    while (n.parentNode != null) {\n      n = n.parentNode;\n    }\n\n    return n;\n  };\n\n  PathExpr.applyStep = function (step, xpc, node) {\n    var self = this;\n    var newNodes = [];\n    xpc.contextNode = node;\n\n    switch (step.axis) {\n      case Step.ANCESTOR:\n        // look at all the ancestor nodes\n        if (xpc.contextNode === xpc.virtualRoot) {\n          break;\n        }\n\n        var m;\n\n        if (xpc.contextNode.nodeType == 2\n        /*Node.ATTRIBUTE_NODE*/\n        ) {\n          m = PathExpr.getOwnerElement(xpc.contextNode);\n        } else {\n          m = xpc.contextNode.parentNode;\n        }\n\n        while (m != null) {\n          if (step.nodeTest.matches(m, xpc)) {\n            newNodes.push(m);\n          }\n\n          if (m === xpc.virtualRoot) {\n            break;\n          }\n\n          m = m.parentNode;\n        }\n\n        break;\n\n      case Step.ANCESTORORSELF:\n        // look at all the ancestor nodes and the current node\n        for (var m = xpc.contextNode; m != null; m = m.nodeType == 2\n        /*Node.ATTRIBUTE_NODE*/\n        ? PathExpr.getOwnerElement(m) : m.parentNode) {\n          if (step.nodeTest.matches(m, xpc)) {\n            newNodes.push(m);\n          }\n\n          if (m === xpc.virtualRoot) {\n            break;\n          }\n        }\n\n        break;\n\n      case Step.ATTRIBUTE:\n        // look at the attributes\n        var nnm = xpc.contextNode.attributes;\n\n        if (nnm != null) {\n          for (var k = 0; k < nnm.length; k++) {\n            var m = nnm.item(k);\n\n            if (step.nodeTest.matches(m, xpc)) {\n              newNodes.push(m);\n            }\n          }\n        }\n\n        break;\n\n      case Step.CHILD:\n        // look at all child elements\n        for (var m = xpc.contextNode.firstChild; m != null; m = m.nextSibling) {\n          if (step.nodeTest.matches(m, xpc)) {\n            newNodes.push(m);\n          }\n        }\n\n        break;\n\n      case Step.DESCENDANT:\n        // look at all descendant nodes\n        var st = [xpc.contextNode.firstChild];\n\n        while (st.length > 0) {\n          for (var m = st.pop(); m != null;) {\n            if (step.nodeTest.matches(m, xpc)) {\n              newNodes.push(m);\n            }\n\n            if (m.firstChild != null) {\n              st.push(m.nextSibling);\n              m = m.firstChild;\n            } else {\n              m = m.nextSibling;\n            }\n          }\n        }\n\n        break;\n\n      case Step.DESCENDANTORSELF:\n        // look at self\n        if (step.nodeTest.matches(xpc.contextNode, xpc)) {\n          newNodes.push(xpc.contextNode);\n        } // look at all descendant nodes\n\n\n        var st = [xpc.contextNode.firstChild];\n\n        while (st.length > 0) {\n          for (var m = st.pop(); m != null;) {\n            if (step.nodeTest.matches(m, xpc)) {\n              newNodes.push(m);\n            }\n\n            if (m.firstChild != null) {\n              st.push(m.nextSibling);\n              m = m.firstChild;\n            } else {\n              m = m.nextSibling;\n            }\n          }\n        }\n\n        break;\n\n      case Step.FOLLOWING:\n        if (xpc.contextNode === xpc.virtualRoot) {\n          break;\n        }\n\n        var st = [];\n\n        if (xpc.contextNode.firstChild != null) {\n          st.unshift(xpc.contextNode.firstChild);\n        } else {\n          st.unshift(xpc.contextNode.nextSibling);\n        }\n\n        for (var m = xpc.contextNode.parentNode; m != null && m.nodeType != 9\n        /*Node.DOCUMENT_NODE*/\n        && m !== xpc.virtualRoot; m = m.parentNode) {\n          st.unshift(m.nextSibling);\n        }\n\n        do {\n          for (var m = st.pop(); m != null;) {\n            if (step.nodeTest.matches(m, xpc)) {\n              newNodes.push(m);\n            }\n\n            if (m.firstChild != null) {\n              st.push(m.nextSibling);\n              m = m.firstChild;\n            } else {\n              m = m.nextSibling;\n            }\n          }\n        } while (st.length > 0);\n\n        break;\n\n      case Step.FOLLOWINGSIBLING:\n        if (xpc.contextNode === xpc.virtualRoot) {\n          break;\n        }\n\n        for (var m = xpc.contextNode.nextSibling; m != null; m = m.nextSibling) {\n          if (step.nodeTest.matches(m, xpc)) {\n            newNodes.push(m);\n          }\n        }\n\n        break;\n\n      case Step.NAMESPACE:\n        var n = {};\n\n        if (xpc.contextNode.nodeType == 1\n        /*Node.ELEMENT_NODE*/\n        ) {\n          n[\"xml\"] = XPath.XML_NAMESPACE_URI;\n          n[\"xmlns\"] = XPath.XMLNS_NAMESPACE_URI;\n\n          for (var m = xpc.contextNode; m != null && m.nodeType == 1\n          /*Node.ELEMENT_NODE*/\n          ; m = m.parentNode) {\n            for (var k = 0; k < m.attributes.length; k++) {\n              var attr = m.attributes.item(k);\n              var nm = String(attr.name);\n\n              if (nm == \"xmlns\") {\n                if (n[\"\"] == undefined) {\n                  n[\"\"] = attr.value;\n                }\n              } else if (nm.length > 6 && nm.substring(0, 6) == \"xmlns:\") {\n                var pre = nm.substring(6, nm.length);\n\n                if (n[pre] == undefined) {\n                  n[pre] = attr.value;\n                }\n              }\n            }\n          }\n\n          for (var pre in n) {\n            var nsn = new XPathNamespace(pre, n[pre], xpc.contextNode);\n\n            if (step.nodeTest.matches(nsn, xpc)) {\n              newNodes.push(nsn);\n            }\n          }\n        }\n\n        break;\n\n      case Step.PARENT:\n        m = null;\n\n        if (xpc.contextNode !== xpc.virtualRoot) {\n          if (xpc.contextNode.nodeType == 2\n          /*Node.ATTRIBUTE_NODE*/\n          ) {\n            m = PathExpr.getOwnerElement(xpc.contextNode);\n          } else {\n            m = xpc.contextNode.parentNode;\n          }\n        }\n\n        if (m != null && step.nodeTest.matches(m, xpc)) {\n          newNodes.push(m);\n        }\n\n        break;\n\n      case Step.PRECEDING:\n        var st;\n\n        if (xpc.virtualRoot != null) {\n          st = [xpc.virtualRoot];\n        } else {\n          // cannot rely on .ownerDocument because the node may be in a document fragment\n          st = [findRoot(xpc.contextNode)];\n        }\n\n        outer: while (st.length > 0) {\n          for (var m = st.pop(); m != null;) {\n            if (m == xpc.contextNode) {\n              break outer;\n            }\n\n            if (step.nodeTest.matches(m, xpc)) {\n              newNodes.unshift(m);\n            }\n\n            if (m.firstChild != null) {\n              st.push(m.nextSibling);\n              m = m.firstChild;\n            } else {\n              m = m.nextSibling;\n            }\n          }\n        }\n\n        break;\n\n      case Step.PRECEDINGSIBLING:\n        if (xpc.contextNode === xpc.virtualRoot) {\n          break;\n        }\n\n        for (var m = xpc.contextNode.previousSibling; m != null; m = m.previousSibling) {\n          if (step.nodeTest.matches(m, xpc)) {\n            newNodes.push(m);\n          }\n        }\n\n        break;\n\n      case Step.SELF:\n        if (step.nodeTest.matches(xpc.contextNode, xpc)) {\n          newNodes.push(xpc.contextNode);\n        }\n\n        break;\n\n      default:\n    }\n\n    return newNodes;\n  };\n\n  function applyStepWithPredicates(step, xpc, node) {\n    return PathExpr.applyPredicates(step.predicates, xpc, PathExpr.applyStep(step, xpc, node));\n  }\n\n  function applyStepToNodes(context, nodes, step) {\n    return flatten(map(applyStepWithPredicates.bind(null, step, context), nodes));\n  }\n\n  PathExpr.applySteps = function (steps, xpc, nodes) {\n    return reduce(applyStepToNodes.bind(null, xpc), nodes, steps);\n  };\n\n  PathExpr.prototype.applyFilter = function (c, xpc) {\n    if (!this.filter) {\n      return {\n        nodes: [c.contextNode]\n      };\n    }\n\n    var ns = this.filter.evaluate(c);\n\n    if (!Utilities.instance_of(ns, XNodeSet)) {\n      if (this.filterPredicates != null && this.filterPredicates.length > 0 || this.locationPath != null) {\n        throw new Error(\"Path expression filter must evaluate to a nodeset if predicates or location path are used\");\n      }\n\n      return {\n        nonNodes: ns\n      };\n    }\n\n    return {\n      nodes: PathExpr.applyPredicates(this.filterPredicates || [], xpc, ns.toUnsortedArray())\n    };\n  };\n\n  PathExpr.applyLocationPath = function (locationPath, xpc, nodes) {\n    if (!locationPath) {\n      return nodes;\n    }\n\n    var startNodes = locationPath.absolute ? [PathExpr.getRoot(xpc, nodes)] : nodes;\n    return PathExpr.applySteps(locationPath.steps, xpc, startNodes);\n  };\n\n  PathExpr.prototype.evaluate = function (c) {\n    var xpc = assign(new XPathContext(), c);\n    var filterResult = this.applyFilter(c, xpc);\n\n    if ('nonNodes' in filterResult) {\n      return filterResult.nonNodes;\n    }\n\n    var ns = new XNodeSet();\n    ns.addArray(PathExpr.applyLocationPath(this.locationPath, xpc, filterResult.nodes));\n    return ns;\n  };\n\n  PathExpr.predicateMatches = function (pred, c) {\n    var res = pred.evaluate(c);\n    return Utilities.instance_of(res, XNumber) ? c.contextPosition === res.numberValue() : res.booleanValue();\n  };\n\n  PathExpr.predicateString = function (predicate) {\n    return wrap('[', ']', predicate.toString());\n  };\n\n  PathExpr.predicatesString = function (predicates) {\n    return join('', map(PathExpr.predicateString, predicates));\n  };\n\n  PathExpr.prototype.toString = function () {\n    if (this.filter != undefined) {\n      var filterStr = toString(this.filter);\n\n      if (Utilities.instance_of(this.filter, XString)) {\n        return wrap(\"'\", \"'\", filterStr);\n      }\n\n      if (this.filterPredicates != undefined && this.filterPredicates.length) {\n        return wrap('(', ')', filterStr) + PathExpr.predicatesString(this.filterPredicates);\n      }\n\n      if (this.locationPath != undefined) {\n        return filterStr + (this.locationPath.absolute ? '' : '/') + toString(this.locationPath);\n      }\n\n      return filterStr;\n    }\n\n    return toString(this.locationPath);\n  };\n\n  PathExpr.getOwnerElement = function (n) {\n    // DOM 2 has ownerElement\n    if (n.ownerElement) {\n      return n.ownerElement;\n    } // DOM 1 Internet Explorer can use selectSingleNode (ironically)\n\n\n    try {\n      if (n.selectSingleNode) {\n        return n.selectSingleNode(\"..\");\n      }\n    } catch (e) {} // Other DOM 1 implementations must use this egregious search\n\n\n    var doc = n.nodeType == 9\n    /*Node.DOCUMENT_NODE*/\n    ? n : n.ownerDocument;\n    var elts = doc.getElementsByTagName(\"*\");\n\n    for (var i = 0; i < elts.length; i++) {\n      var elt = elts.item(i);\n      var nnm = elt.attributes;\n\n      for (var j = 0; j < nnm.length; j++) {\n        var an = nnm.item(j);\n\n        if (an === n) {\n          return elt;\n        }\n      }\n    }\n\n    return null;\n  }; // LocationPath //////////////////////////////////////////////////////////////\n\n\n  LocationPath.prototype = new Object();\n  LocationPath.prototype.constructor = LocationPath;\n  LocationPath.superclass = Object.prototype;\n\n  function LocationPath(abs, steps) {\n    if (arguments.length > 0) {\n      this.init(abs, steps);\n    }\n  }\n\n  LocationPath.prototype.init = function (abs, steps) {\n    this.absolute = abs;\n    this.steps = steps;\n  };\n\n  LocationPath.prototype.toString = function () {\n    return (this.absolute ? '/' : '') + map(toString, this.steps).join('/');\n  }; // Step //////////////////////////////////////////////////////////////////////\n\n\n  Step.prototype = new Object();\n  Step.prototype.constructor = Step;\n  Step.superclass = Object.prototype;\n\n  function Step(axis, nodetest, preds) {\n    if (arguments.length > 0) {\n      this.init(axis, nodetest, preds);\n    }\n  }\n\n  Step.prototype.init = function (axis, nodetest, preds) {\n    this.axis = axis;\n    this.nodeTest = nodetest;\n    this.predicates = preds;\n  };\n\n  Step.prototype.toString = function () {\n    return Step.STEPNAMES[this.axis] + \"::\" + this.nodeTest.toString() + PathExpr.predicatesString(this.predicates);\n  };\n\n  Step.ANCESTOR = 0;\n  Step.ANCESTORORSELF = 1;\n  Step.ATTRIBUTE = 2;\n  Step.CHILD = 3;\n  Step.DESCENDANT = 4;\n  Step.DESCENDANTORSELF = 5;\n  Step.FOLLOWING = 6;\n  Step.FOLLOWINGSIBLING = 7;\n  Step.NAMESPACE = 8;\n  Step.PARENT = 9;\n  Step.PRECEDING = 10;\n  Step.PRECEDINGSIBLING = 11;\n  Step.SELF = 12;\n  Step.STEPNAMES = reduce(function (acc, x) {\n    return acc[x[0]] = x[1], acc;\n  }, {}, [[Step.ANCESTOR, 'ancestor'], [Step.ANCESTORORSELF, 'ancestor-or-self'], [Step.ATTRIBUTE, 'attribute'], [Step.CHILD, 'child'], [Step.DESCENDANT, 'descendant'], [Step.DESCENDANTORSELF, 'descendant-or-self'], [Step.FOLLOWING, 'following'], [Step.FOLLOWINGSIBLING, 'following-sibling'], [Step.NAMESPACE, 'namespace'], [Step.PARENT, 'parent'], [Step.PRECEDING, 'preceding'], [Step.PRECEDINGSIBLING, 'preceding-sibling'], [Step.SELF, 'self']]); // NodeTest //////////////////////////////////////////////////////////////////\n\n  NodeTest.prototype = new Object();\n  NodeTest.prototype.constructor = NodeTest;\n  NodeTest.superclass = Object.prototype;\n\n  function NodeTest(type, value) {\n    if (arguments.length > 0) {\n      this.init(type, value);\n    }\n  }\n\n  NodeTest.prototype.init = function (type, value) {\n    this.type = type;\n    this.value = value;\n  };\n\n  NodeTest.prototype.toString = function () {\n    return \"<unknown nodetest type>\";\n  };\n\n  NodeTest.prototype.matches = function (n, xpc) {\n    console.warn('unknown node test type');\n  };\n\n  NodeTest.NAMETESTANY = 0;\n  NodeTest.NAMETESTPREFIXANY = 1;\n  NodeTest.NAMETESTQNAME = 2;\n  NodeTest.COMMENT = 3;\n  NodeTest.TEXT = 4;\n  NodeTest.PI = 5;\n  NodeTest.NODE = 6;\n\n  NodeTest.isNodeType = function (types) {\n    return function (node) {\n      return includes(types, node.nodeType);\n    };\n  };\n\n  NodeTest.makeNodeTestType = function (type, members, ctor) {\n    var newType = ctor || function () {};\n\n    newType.prototype = new NodeTest(type);\n    newType.prototype.constructor = newType;\n    assign(newType.prototype, members);\n    return newType;\n  }; // create invariant node test for certain node types\n\n\n  NodeTest.makeNodeTypeTest = function (type, nodeTypes, stringVal) {\n    return new (NodeTest.makeNodeTestType(type, {\n      matches: NodeTest.isNodeType(nodeTypes),\n      toString: always(stringVal)\n    }))();\n  };\n\n  NodeTest.hasPrefix = function (node) {\n    return node.prefix || (node.nodeName || node.tagName).indexOf(':') !== -1;\n  };\n\n  NodeTest.isElementOrAttribute = NodeTest.isNodeType([1, 2]);\n\n  NodeTest.nameSpaceMatches = function (prefix, xpc, n) {\n    var nNamespace = n.namespaceURI || '';\n\n    if (!prefix) {\n      return !nNamespace || xpc.allowAnyNamespaceForNoPrefix && !NodeTest.hasPrefix(n);\n    }\n\n    var ns = xpc.namespaceResolver.getNamespace(prefix, xpc.expressionContextNode);\n\n    if (ns == null) {\n      throw new Error(\"Cannot resolve QName \" + prefix);\n    }\n\n    return ns === nNamespace;\n  };\n\n  NodeTest.localNameMatches = function (localName, xpc, n) {\n    var nLocalName = n.localName || n.nodeName;\n    return xpc.caseInsensitive ? localName.toLowerCase() === nLocalName.toLowerCase() : localName === nLocalName;\n  };\n\n  NodeTest.NameTestPrefixAny = NodeTest.makeNodeTestType(NodeTest.NAMETESTPREFIXANY, {\n    matches: function (n, xpc) {\n      return NodeTest.isElementOrAttribute(n) && NodeTest.nameSpaceMatches(this.prefix, xpc, n);\n    },\n    toString: function () {\n      return this.prefix + \":*\";\n    }\n  }, function NameTestPrefixAny(prefix) {\n    this.prefix = prefix;\n  });\n  NodeTest.NameTestQName = NodeTest.makeNodeTestType(NodeTest.NAMETESTQNAME, {\n    matches: function (n, xpc) {\n      return NodeTest.isNodeType([1, 2, XPathNamespace.XPATH_NAMESPACE_NODE])(n) && NodeTest.nameSpaceMatches(this.prefix, xpc, n) && NodeTest.localNameMatches(this.localName, xpc, n);\n    },\n    toString: function () {\n      return this.name;\n    }\n  }, function NameTestQName(name) {\n    var nameParts = name.split(':');\n    this.name = name;\n    this.prefix = nameParts.length > 1 ? nameParts[0] : null;\n    this.localName = nameParts[nameParts.length > 1 ? 1 : 0];\n  });\n  NodeTest.PITest = NodeTest.makeNodeTestType(NodeTest.PI, {\n    matches: function (n, xpc) {\n      return NodeTest.isNodeType([7])(n) && (n.target || n.nodeName) === this.name;\n    },\n    toString: function () {\n      return wrap('processing-instruction(\"', '\")', this.name);\n    }\n  }, function (name) {\n    this.name = name;\n  }); // singletons\n  // elements, attributes, namespaces\n\n  NodeTest.nameTestAny = NodeTest.makeNodeTypeTest(NodeTest.NAMETESTANY, [1, 2, XPathNamespace.XPATH_NAMESPACE_NODE], '*'); // text, cdata\n\n  NodeTest.textTest = NodeTest.makeNodeTypeTest(NodeTest.TEXT, [3, 4], 'text()');\n  NodeTest.commentTest = NodeTest.makeNodeTypeTest(NodeTest.COMMENT, [8], 'comment()'); // elements, attributes, text, cdata, PIs, comments, document nodes\n\n  NodeTest.nodeTest = NodeTest.makeNodeTypeTest(NodeTest.NODE, [1, 2, 3, 4, 7, 8, 9], 'node()');\n  NodeTest.anyPiTest = NodeTest.makeNodeTypeTest(NodeTest.PI, [7], 'processing-instruction()'); // VariableReference /////////////////////////////////////////////////////////\n\n  VariableReference.prototype = new Expression();\n  VariableReference.prototype.constructor = VariableReference;\n  VariableReference.superclass = Expression.prototype;\n\n  function VariableReference(v) {\n    if (arguments.length > 0) {\n      this.init(v);\n    }\n  }\n\n  VariableReference.prototype.init = function (v) {\n    this.variable = v;\n  };\n\n  VariableReference.prototype.toString = function () {\n    return \"$\" + this.variable;\n  };\n\n  VariableReference.prototype.evaluate = function (c) {\n    var parts = Utilities.resolveQName(this.variable, c.namespaceResolver, c.contextNode, false);\n\n    if (parts[0] == null) {\n      throw new Error(\"Cannot resolve QName \" + fn);\n    }\n\n    var result = c.variableResolver.getVariable(parts[1], parts[0]);\n\n    if (!result) {\n      throw XPathException.fromMessage(\"Undeclared variable: \" + this.toString());\n    }\n\n    return result;\n  }; // FunctionCall //////////////////////////////////////////////////////////////\n\n\n  FunctionCall.prototype = new Expression();\n  FunctionCall.prototype.constructor = FunctionCall;\n  FunctionCall.superclass = Expression.prototype;\n\n  function FunctionCall(fn, args) {\n    if (arguments.length > 0) {\n      this.init(fn, args);\n    }\n  }\n\n  FunctionCall.prototype.init = function (fn, args) {\n    this.functionName = fn;\n    this.arguments = args;\n  };\n\n  FunctionCall.prototype.toString = function () {\n    var s = this.functionName + \"(\";\n\n    for (var i = 0; i < this.arguments.length; i++) {\n      if (i > 0) {\n        s += \", \";\n      }\n\n      s += this.arguments[i].toString();\n    }\n\n    return s + \")\";\n  };\n\n  FunctionCall.prototype.evaluate = function (c) {\n    var f = FunctionResolver.getFunctionFromContext(this.functionName, c);\n\n    if (!f) {\n      throw new Error(\"Unknown function \" + this.functionName);\n    }\n\n    var a = [c].concat(this.arguments);\n    return f.apply(c.functionResolver.thisArg, a);\n  }; // Operators /////////////////////////////////////////////////////////////////\n\n\n  var Operators = new Object();\n\n  Operators.equals = function (l, r) {\n    return l.equals(r);\n  };\n\n  Operators.notequal = function (l, r) {\n    return l.notequal(r);\n  };\n\n  Operators.lessthan = function (l, r) {\n    return l.lessthan(r);\n  };\n\n  Operators.greaterthan = function (l, r) {\n    return l.greaterthan(r);\n  };\n\n  Operators.lessthanorequal = function (l, r) {\n    return l.lessthanorequal(r);\n  };\n\n  Operators.greaterthanorequal = function (l, r) {\n    return l.greaterthanorequal(r);\n  }; // XString ///////////////////////////////////////////////////////////////////\n\n\n  XString.prototype = new Expression();\n  XString.prototype.constructor = XString;\n  XString.superclass = Expression.prototype;\n\n  function XString(s) {\n    if (arguments.length > 0) {\n      this.init(s);\n    }\n  }\n\n  XString.prototype.init = function (s) {\n    this.str = String(s);\n  };\n\n  XString.prototype.toString = function () {\n    return this.str;\n  };\n\n  XString.prototype.evaluate = function (c) {\n    return this;\n  };\n\n  XString.prototype.string = function () {\n    return this;\n  };\n\n  XString.prototype.number = function () {\n    return new XNumber(this.str);\n  };\n\n  XString.prototype.bool = function () {\n    return new XBoolean(this.str);\n  };\n\n  XString.prototype.nodeset = function () {\n    throw new Error(\"Cannot convert string to nodeset\");\n  };\n\n  XString.prototype.stringValue = function () {\n    return this.str;\n  };\n\n  XString.prototype.numberValue = function () {\n    return this.number().numberValue();\n  };\n\n  XString.prototype.booleanValue = function () {\n    return this.bool().booleanValue();\n  };\n\n  XString.prototype.equals = function (r) {\n    if (Utilities.instance_of(r, XBoolean)) {\n      return this.bool().equals(r);\n    }\n\n    if (Utilities.instance_of(r, XNumber)) {\n      return this.number().equals(r);\n    }\n\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithString(this, Operators.equals);\n    }\n\n    return new XBoolean(this.str == r.str);\n  };\n\n  XString.prototype.notequal = function (r) {\n    if (Utilities.instance_of(r, XBoolean)) {\n      return this.bool().notequal(r);\n    }\n\n    if (Utilities.instance_of(r, XNumber)) {\n      return this.number().notequal(r);\n    }\n\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithString(this, Operators.notequal);\n    }\n\n    return new XBoolean(this.str != r.str);\n  };\n\n  XString.prototype.lessthan = function (r) {\n    return this.number().lessthan(r);\n  };\n\n  XString.prototype.greaterthan = function (r) {\n    return this.number().greaterthan(r);\n  };\n\n  XString.prototype.lessthanorequal = function (r) {\n    return this.number().lessthanorequal(r);\n  };\n\n  XString.prototype.greaterthanorequal = function (r) {\n    return this.number().greaterthanorequal(r);\n  }; // XNumber ///////////////////////////////////////////////////////////////////\n\n\n  XNumber.prototype = new Expression();\n  XNumber.prototype.constructor = XNumber;\n  XNumber.superclass = Expression.prototype;\n\n  function XNumber(n) {\n    if (arguments.length > 0) {\n      this.init(n);\n    }\n  }\n\n  XNumber.prototype.init = function (n) {\n    this.num = typeof n === \"string\" ? this.parse(n) : Number(n);\n  };\n\n  XNumber.prototype.numberFormat = /^\\s*-?[0-9]*\\.?[0-9]+\\s*$/;\n\n  XNumber.prototype.parse = function (s) {\n    // XPath representation of numbers is more restrictive than what Number() or parseFloat() allow\n    return this.numberFormat.test(s) ? parseFloat(s) : Number.NaN;\n  };\n\n  function padSmallNumber(numberStr) {\n    var parts = numberStr.split('e-');\n    var base = parts[0].replace('.', '');\n    var exponent = Number(parts[1]);\n\n    for (var i = 0; i < exponent - 1; i += 1) {\n      base = '0' + base;\n    }\n\n    return '0.' + base;\n  }\n\n  function padLargeNumber(numberStr) {\n    var parts = numberStr.split('e');\n    var base = parts[0].replace('.', '');\n    var exponent = Number(parts[1]);\n    var zerosToAppend = exponent + 1 - base.length;\n\n    for (var i = 0; i < zerosToAppend; i += 1) {\n      base += '0';\n    }\n\n    return base;\n  }\n\n  XNumber.prototype.toString = function () {\n    var strValue = this.num.toString();\n\n    if (strValue.indexOf('e-') !== -1) {\n      return padSmallNumber(strValue);\n    }\n\n    if (strValue.indexOf('e') !== -1) {\n      return padLargeNumber(strValue);\n    }\n\n    return strValue;\n  };\n\n  XNumber.prototype.evaluate = function (c) {\n    return this;\n  };\n\n  XNumber.prototype.string = function () {\n    return new XString(this.toString());\n  };\n\n  XNumber.prototype.number = function () {\n    return this;\n  };\n\n  XNumber.prototype.bool = function () {\n    return new XBoolean(this.num);\n  };\n\n  XNumber.prototype.nodeset = function () {\n    throw new Error(\"Cannot convert number to nodeset\");\n  };\n\n  XNumber.prototype.stringValue = function () {\n    return this.string().stringValue();\n  };\n\n  XNumber.prototype.numberValue = function () {\n    return this.num;\n  };\n\n  XNumber.prototype.booleanValue = function () {\n    return this.bool().booleanValue();\n  };\n\n  XNumber.prototype.negate = function () {\n    return new XNumber(-this.num);\n  };\n\n  XNumber.prototype.equals = function (r) {\n    if (Utilities.instance_of(r, XBoolean)) {\n      return this.bool().equals(r);\n    }\n\n    if (Utilities.instance_of(r, XString)) {\n      return this.equals(r.number());\n    }\n\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithNumber(this, Operators.equals);\n    }\n\n    return new XBoolean(this.num == r.num);\n  };\n\n  XNumber.prototype.notequal = function (r) {\n    if (Utilities.instance_of(r, XBoolean)) {\n      return this.bool().notequal(r);\n    }\n\n    if (Utilities.instance_of(r, XString)) {\n      return this.notequal(r.number());\n    }\n\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithNumber(this, Operators.notequal);\n    }\n\n    return new XBoolean(this.num != r.num);\n  };\n\n  XNumber.prototype.lessthan = function (r) {\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithNumber(this, Operators.greaterthan);\n    }\n\n    if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\n      return this.lessthan(r.number());\n    }\n\n    return new XBoolean(this.num < r.num);\n  };\n\n  XNumber.prototype.greaterthan = function (r) {\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithNumber(this, Operators.lessthan);\n    }\n\n    if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\n      return this.greaterthan(r.number());\n    }\n\n    return new XBoolean(this.num > r.num);\n  };\n\n  XNumber.prototype.lessthanorequal = function (r) {\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithNumber(this, Operators.greaterthanorequal);\n    }\n\n    if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\n      return this.lessthanorequal(r.number());\n    }\n\n    return new XBoolean(this.num <= r.num);\n  };\n\n  XNumber.prototype.greaterthanorequal = function (r) {\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithNumber(this, Operators.lessthanorequal);\n    }\n\n    if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\n      return this.greaterthanorequal(r.number());\n    }\n\n    return new XBoolean(this.num >= r.num);\n  };\n\n  XNumber.prototype.plus = function (r) {\n    return new XNumber(this.num + r.num);\n  };\n\n  XNumber.prototype.minus = function (r) {\n    return new XNumber(this.num - r.num);\n  };\n\n  XNumber.prototype.multiply = function (r) {\n    return new XNumber(this.num * r.num);\n  };\n\n  XNumber.prototype.div = function (r) {\n    return new XNumber(this.num / r.num);\n  };\n\n  XNumber.prototype.mod = function (r) {\n    return new XNumber(this.num % r.num);\n  }; // XBoolean //////////////////////////////////////////////////////////////////\n\n\n  XBoolean.prototype = new Expression();\n  XBoolean.prototype.constructor = XBoolean;\n  XBoolean.superclass = Expression.prototype;\n\n  function XBoolean(b) {\n    if (arguments.length > 0) {\n      this.init(b);\n    }\n  }\n\n  XBoolean.prototype.init = function (b) {\n    this.b = Boolean(b);\n  };\n\n  XBoolean.prototype.toString = function () {\n    return this.b.toString();\n  };\n\n  XBoolean.prototype.evaluate = function (c) {\n    return this;\n  };\n\n  XBoolean.prototype.string = function () {\n    return new XString(this.b);\n  };\n\n  XBoolean.prototype.number = function () {\n    return new XNumber(this.b);\n  };\n\n  XBoolean.prototype.bool = function () {\n    return this;\n  };\n\n  XBoolean.prototype.nodeset = function () {\n    throw new Error(\"Cannot convert boolean to nodeset\");\n  };\n\n  XBoolean.prototype.stringValue = function () {\n    return this.string().stringValue();\n  };\n\n  XBoolean.prototype.numberValue = function () {\n    return this.number().numberValue();\n  };\n\n  XBoolean.prototype.booleanValue = function () {\n    return this.b;\n  };\n\n  XBoolean.prototype.not = function () {\n    return new XBoolean(!this.b);\n  };\n\n  XBoolean.prototype.equals = function (r) {\n    if (Utilities.instance_of(r, XString) || Utilities.instance_of(r, XNumber)) {\n      return this.equals(r.bool());\n    }\n\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithBoolean(this, Operators.equals);\n    }\n\n    return new XBoolean(this.b == r.b);\n  };\n\n  XBoolean.prototype.notequal = function (r) {\n    if (Utilities.instance_of(r, XString) || Utilities.instance_of(r, XNumber)) {\n      return this.notequal(r.bool());\n    }\n\n    if (Utilities.instance_of(r, XNodeSet)) {\n      return r.compareWithBoolean(this, Operators.notequal);\n    }\n\n    return new XBoolean(this.b != r.b);\n  };\n\n  XBoolean.prototype.lessthan = function (r) {\n    return this.number().lessthan(r);\n  };\n\n  XBoolean.prototype.greaterthan = function (r) {\n    return this.number().greaterthan(r);\n  };\n\n  XBoolean.prototype.lessthanorequal = function (r) {\n    return this.number().lessthanorequal(r);\n  };\n\n  XBoolean.prototype.greaterthanorequal = function (r) {\n    return this.number().greaterthanorequal(r);\n  };\n\n  XBoolean.true_ = new XBoolean(true);\n  XBoolean.false_ = new XBoolean(false); // AVLTree ///////////////////////////////////////////////////////////////////\n\n  AVLTree.prototype = new Object();\n  AVLTree.prototype.constructor = AVLTree;\n  AVLTree.superclass = Object.prototype;\n\n  function AVLTree(n) {\n    this.init(n);\n  }\n\n  AVLTree.prototype.init = function (n) {\n    this.left = null;\n    this.right = null;\n    this.node = n;\n    this.depth = 1;\n  };\n\n  AVLTree.prototype.balance = function () {\n    var ldepth = this.left == null ? 0 : this.left.depth;\n    var rdepth = this.right == null ? 0 : this.right.depth;\n\n    if (ldepth > rdepth + 1) {\n      // LR or LL rotation\n      var lldepth = this.left.left == null ? 0 : this.left.left.depth;\n      var lrdepth = this.left.right == null ? 0 : this.left.right.depth;\n\n      if (lldepth < lrdepth) {\n        // LR rotation consists of a RR rotation of the left child\n        this.left.rotateRR(); // plus a LL rotation of this node, which happens anyway\n      }\n\n      this.rotateLL();\n    } else if (ldepth + 1 < rdepth) {\n      // RR or RL rorarion\n      var rrdepth = this.right.right == null ? 0 : this.right.right.depth;\n      var rldepth = this.right.left == null ? 0 : this.right.left.depth;\n\n      if (rldepth > rrdepth) {\n        // RR rotation consists of a LL rotation of the right child\n        this.right.rotateLL(); // plus a RR rotation of this node, which happens anyway\n      }\n\n      this.rotateRR();\n    }\n  };\n\n  AVLTree.prototype.rotateLL = function () {\n    // the left side is too long => rotate from the left (_not_ leftwards)\n    var nodeBefore = this.node;\n    var rightBefore = this.right;\n    this.node = this.left.node;\n    this.right = this.left;\n    this.left = this.left.left;\n    this.right.left = this.right.right;\n    this.right.right = rightBefore;\n    this.right.node = nodeBefore;\n    this.right.updateInNewLocation();\n    this.updateInNewLocation();\n  };\n\n  AVLTree.prototype.rotateRR = function () {\n    // the right side is too long => rotate from the right (_not_ rightwards)\n    var nodeBefore = this.node;\n    var leftBefore = this.left;\n    this.node = this.right.node;\n    this.left = this.right;\n    this.right = this.right.right;\n    this.left.right = this.left.left;\n    this.left.left = leftBefore;\n    this.left.node = nodeBefore;\n    this.left.updateInNewLocation();\n    this.updateInNewLocation();\n  };\n\n  AVLTree.prototype.updateInNewLocation = function () {\n    this.getDepthFromChildren();\n  };\n\n  AVLTree.prototype.getDepthFromChildren = function () {\n    this.depth = this.node == null ? 0 : 1;\n\n    if (this.left != null) {\n      this.depth = this.left.depth + 1;\n    }\n\n    if (this.right != null && this.depth <= this.right.depth) {\n      this.depth = this.right.depth + 1;\n    }\n  };\n\n  function nodeOrder(n1, n2) {\n    if (n1 === n2) {\n      return 0;\n    }\n\n    if (n1.compareDocumentPosition) {\n      var cpos = n1.compareDocumentPosition(n2);\n\n      if (cpos & 0x01) {\n        // not in the same document; return an arbitrary result (is there a better way to do this)\n        return 1;\n      }\n\n      if (cpos & 0x0A) {\n        // n2 precedes or contains n1\n        return 1;\n      }\n\n      if (cpos & 0x14) {\n        // n2 follows or is contained by n1\n        return -1;\n      }\n\n      return 0;\n    }\n\n    var d1 = 0,\n        d2 = 0;\n\n    for (var m1 = n1; m1 != null; m1 = m1.parentNode || m1.ownerElement) {\n      d1++;\n    }\n\n    for (var m2 = n2; m2 != null; m2 = m2.parentNode || m2.ownerElement) {\n      d2++;\n    } // step up to same depth\n\n\n    if (d1 > d2) {\n      while (d1 > d2) {\n        n1 = n1.parentNode || n1.ownerElement;\n        d1--;\n      }\n\n      if (n1 === n2) {\n        return 1;\n      }\n    } else if (d2 > d1) {\n      while (d2 > d1) {\n        n2 = n2.parentNode || n2.ownerElement;\n        d2--;\n      }\n\n      if (n1 === n2) {\n        return -1;\n      }\n    }\n\n    var n1Par = n1.parentNode || n1.ownerElement,\n        n2Par = n2.parentNode || n2.ownerElement; // find common parent\n\n    while (n1Par !== n2Par) {\n      n1 = n1Par;\n      n2 = n2Par;\n      n1Par = n1.parentNode || n1.ownerElement;\n      n2Par = n2.parentNode || n2.ownerElement;\n    }\n\n    var n1isAttr = Utilities.isAttribute(n1);\n    var n2isAttr = Utilities.isAttribute(n2);\n\n    if (n1isAttr && !n2isAttr) {\n      return -1;\n    }\n\n    if (!n1isAttr && n2isAttr) {\n      return 1;\n    }\n\n    if (n1Par) {\n      var cn = n1isAttr ? n1Par.attributes : n1Par.childNodes,\n          len = cn.length;\n\n      for (var i = 0; i < len; i += 1) {\n        var n = cn[i];\n\n        if (n === n1) {\n          return -1;\n        }\n\n        if (n === n2) {\n          return 1;\n        }\n      }\n    }\n\n    throw new Error('Unexpected: could not determine node order');\n  }\n\n  AVLTree.prototype.add = function (n) {\n    if (n === this.node) {\n      return false;\n    }\n\n    var o = nodeOrder(n, this.node);\n    var ret = false;\n\n    if (o == -1) {\n      if (this.left == null) {\n        this.left = new AVLTree(n);\n        ret = true;\n      } else {\n        ret = this.left.add(n);\n\n        if (ret) {\n          this.balance();\n        }\n      }\n    } else if (o == 1) {\n      if (this.right == null) {\n        this.right = new AVLTree(n);\n        ret = true;\n      } else {\n        ret = this.right.add(n);\n\n        if (ret) {\n          this.balance();\n        }\n      }\n    }\n\n    if (ret) {\n      this.getDepthFromChildren();\n    }\n\n    return ret;\n  }; // XNodeSet //////////////////////////////////////////////////////////////////\n\n\n  XNodeSet.prototype = new Expression();\n  XNodeSet.prototype.constructor = XNodeSet;\n  XNodeSet.superclass = Expression.prototype;\n\n  function XNodeSet() {\n    this.init();\n  }\n\n  XNodeSet.prototype.init = function () {\n    this.tree = null;\n    this.nodes = [];\n    this.size = 0;\n  };\n\n  XNodeSet.prototype.toString = function () {\n    var p = this.first();\n\n    if (p == null) {\n      return \"\";\n    }\n\n    return this.stringForNode(p);\n  };\n\n  XNodeSet.prototype.evaluate = function (c) {\n    return this;\n  };\n\n  XNodeSet.prototype.string = function () {\n    return new XString(this.toString());\n  };\n\n  XNodeSet.prototype.stringValue = function () {\n    return this.toString();\n  };\n\n  XNodeSet.prototype.number = function () {\n    return new XNumber(this.string());\n  };\n\n  XNodeSet.prototype.numberValue = function () {\n    return Number(this.string());\n  };\n\n  XNodeSet.prototype.bool = function () {\n    return new XBoolean(this.booleanValue());\n  };\n\n  XNodeSet.prototype.booleanValue = function () {\n    return !!this.size;\n  };\n\n  XNodeSet.prototype.nodeset = function () {\n    return this;\n  };\n\n  XNodeSet.prototype.stringForNode = function (n) {\n    if (n.nodeType == 9\n    /*Node.DOCUMENT_NODE*/\n    || n.nodeType == 1\n    /*Node.ELEMENT_NODE */\n    || n.nodeType === 11\n    /*Node.DOCUMENT_FRAGMENT*/\n    ) {\n      return this.stringForContainerNode(n);\n    }\n\n    if (n.nodeType === 2\n    /* Node.ATTRIBUTE_NODE */\n    ) {\n      return n.value || n.nodeValue;\n    }\n\n    if (n.isNamespaceNode) {\n      return n.namespace;\n    }\n\n    return n.nodeValue;\n  };\n\n  XNodeSet.prototype.stringForContainerNode = function (n) {\n    var s = \"\";\n\n    for (var n2 = n.firstChild; n2 != null; n2 = n2.nextSibling) {\n      var nt = n2.nodeType; //  Element,    Text,       CDATA,      Document,   Document Fragment\n\n      if (nt === 1 || nt === 3 || nt === 4 || nt === 9 || nt === 11) {\n        s += this.stringForNode(n2);\n      }\n    }\n\n    return s;\n  };\n\n  XNodeSet.prototype.buildTree = function () {\n    if (!this.tree && this.nodes.length) {\n      this.tree = new AVLTree(this.nodes[0]);\n\n      for (var i = 1; i < this.nodes.length; i += 1) {\n        this.tree.add(this.nodes[i]);\n      }\n    }\n\n    return this.tree;\n  };\n\n  XNodeSet.prototype.first = function () {\n    var p = this.buildTree();\n\n    if (p == null) {\n      return null;\n    }\n\n    while (p.left != null) {\n      p = p.left;\n    }\n\n    return p.node;\n  };\n\n  XNodeSet.prototype.add = function (n) {\n    for (var i = 0; i < this.nodes.length; i += 1) {\n      if (n === this.nodes[i]) {\n        return;\n      }\n    }\n\n    this.tree = null;\n    this.nodes.push(n);\n    this.size += 1;\n  };\n\n  XNodeSet.prototype.addArray = function (ns) {\n    var self = this;\n    forEach(function (x) {\n      self.add(x);\n    }, ns);\n  };\n  /**\r\n   * Returns an array of the node set's contents in document order\r\n   */\n\n\n  XNodeSet.prototype.toArray = function () {\n    var a = [];\n    this.toArrayRec(this.buildTree(), a);\n    return a;\n  };\n\n  XNodeSet.prototype.toArrayRec = function (t, a) {\n    if (t != null) {\n      this.toArrayRec(t.left, a);\n      a.push(t.node);\n      this.toArrayRec(t.right, a);\n    }\n  };\n  /**\r\n   * Returns an array of the node set's contents in arbitrary order\r\n   */\n\n\n  XNodeSet.prototype.toUnsortedArray = function () {\n    return this.nodes.slice();\n  };\n\n  XNodeSet.prototype.compareWithString = function (r, o) {\n    var a = this.toUnsortedArray();\n\n    for (var i = 0; i < a.length; i++) {\n      var n = a[i];\n      var l = new XString(this.stringForNode(n));\n      var res = o(l, r);\n\n      if (res.booleanValue()) {\n        return res;\n      }\n    }\n\n    return new XBoolean(false);\n  };\n\n  XNodeSet.prototype.compareWithNumber = function (r, o) {\n    var a = this.toUnsortedArray();\n\n    for (var i = 0; i < a.length; i++) {\n      var n = a[i];\n      var l = new XNumber(this.stringForNode(n));\n      var res = o(l, r);\n\n      if (res.booleanValue()) {\n        return res;\n      }\n    }\n\n    return new XBoolean(false);\n  };\n\n  XNodeSet.prototype.compareWithBoolean = function (r, o) {\n    return o(this.bool(), r);\n  };\n\n  XNodeSet.prototype.compareWithNodeSet = function (r, o) {\n    var arr = this.toUnsortedArray();\n\n    var oInvert = function (lop, rop) {\n      return o(rop, lop);\n    };\n\n    for (var i = 0; i < arr.length; i++) {\n      var l = new XString(this.stringForNode(arr[i]));\n      var res = r.compareWithString(l, oInvert);\n\n      if (res.booleanValue()) {\n        return res;\n      }\n    }\n\n    return new XBoolean(false);\n  };\n\n  XNodeSet.compareWith = curry(function (o, r) {\n    if (Utilities.instance_of(r, XString)) {\n      return this.compareWithString(r, o);\n    }\n\n    if (Utilities.instance_of(r, XNumber)) {\n      return this.compareWithNumber(r, o);\n    }\n\n    if (Utilities.instance_of(r, XBoolean)) {\n      return this.compareWithBoolean(r, o);\n    }\n\n    return this.compareWithNodeSet(r, o);\n  });\n  XNodeSet.prototype.equals = XNodeSet.compareWith(Operators.equals);\n  XNodeSet.prototype.notequal = XNodeSet.compareWith(Operators.notequal);\n  XNodeSet.prototype.lessthan = XNodeSet.compareWith(Operators.lessthan);\n  XNodeSet.prototype.greaterthan = XNodeSet.compareWith(Operators.greaterthan);\n  XNodeSet.prototype.lessthanorequal = XNodeSet.compareWith(Operators.lessthanorequal);\n  XNodeSet.prototype.greaterthanorequal = XNodeSet.compareWith(Operators.greaterthanorequal);\n\n  XNodeSet.prototype.union = function (r) {\n    var ns = new XNodeSet();\n    ns.addArray(this.toUnsortedArray());\n    ns.addArray(r.toUnsortedArray());\n    return ns;\n  }; // XPathNamespace ////////////////////////////////////////////////////////////\n\n\n  XPathNamespace.prototype = new Object();\n  XPathNamespace.prototype.constructor = XPathNamespace;\n  XPathNamespace.superclass = Object.prototype;\n\n  function XPathNamespace(pre, ns, p) {\n    this.isXPathNamespace = true;\n    this.ownerDocument = p.ownerDocument;\n    this.nodeName = \"#namespace\";\n    this.prefix = pre;\n    this.localName = pre;\n    this.namespaceURI = ns;\n    this.nodeValue = ns;\n    this.ownerElement = p;\n    this.nodeType = XPathNamespace.XPATH_NAMESPACE_NODE;\n  }\n\n  XPathNamespace.prototype.toString = function () {\n    return \"{ \\\"\" + this.prefix + \"\\\", \\\"\" + this.namespaceURI + \"\\\" }\";\n  }; // XPathContext //////////////////////////////////////////////////////////////\n\n\n  XPathContext.prototype = new Object();\n  XPathContext.prototype.constructor = XPathContext;\n  XPathContext.superclass = Object.prototype;\n\n  function XPathContext(vr, nr, fr) {\n    this.variableResolver = vr != null ? vr : new VariableResolver();\n    this.namespaceResolver = nr != null ? nr : new NamespaceResolver();\n    this.functionResolver = fr != null ? fr : new FunctionResolver();\n  }\n\n  XPathContext.prototype.extend = function (newProps) {\n    return assign(new XPathContext(), this, newProps);\n  }; // VariableResolver //////////////////////////////////////////////////////////\n\n\n  VariableResolver.prototype = new Object();\n  VariableResolver.prototype.constructor = VariableResolver;\n  VariableResolver.superclass = Object.prototype;\n\n  function VariableResolver() {}\n\n  VariableResolver.prototype.getVariable = function (ln, ns) {\n    return null;\n  }; // FunctionResolver //////////////////////////////////////////////////////////\n\n\n  FunctionResolver.prototype = new Object();\n  FunctionResolver.prototype.constructor = FunctionResolver;\n  FunctionResolver.superclass = Object.prototype;\n\n  function FunctionResolver(thisArg) {\n    this.thisArg = thisArg != null ? thisArg : Functions;\n    this.functions = new Object();\n    this.addStandardFunctions();\n  }\n\n  FunctionResolver.prototype.addStandardFunctions = function () {\n    this.functions[\"{}last\"] = Functions.last;\n    this.functions[\"{}position\"] = Functions.position;\n    this.functions[\"{}count\"] = Functions.count;\n    this.functions[\"{}id\"] = Functions.id;\n    this.functions[\"{}local-name\"] = Functions.localName;\n    this.functions[\"{}namespace-uri\"] = Functions.namespaceURI;\n    this.functions[\"{}name\"] = Functions.name;\n    this.functions[\"{}string\"] = Functions.string;\n    this.functions[\"{}concat\"] = Functions.concat;\n    this.functions[\"{}starts-with\"] = Functions.startsWith;\n    this.functions[\"{}contains\"] = Functions.contains;\n    this.functions[\"{}substring-before\"] = Functions.substringBefore;\n    this.functions[\"{}substring-after\"] = Functions.substringAfter;\n    this.functions[\"{}substring\"] = Functions.substring;\n    this.functions[\"{}string-length\"] = Functions.stringLength;\n    this.functions[\"{}normalize-space\"] = Functions.normalizeSpace;\n    this.functions[\"{}translate\"] = Functions.translate;\n    this.functions[\"{}boolean\"] = Functions.boolean_;\n    this.functions[\"{}not\"] = Functions.not;\n    this.functions[\"{}true\"] = Functions.true_;\n    this.functions[\"{}false\"] = Functions.false_;\n    this.functions[\"{}lang\"] = Functions.lang;\n    this.functions[\"{}number\"] = Functions.number;\n    this.functions[\"{}sum\"] = Functions.sum;\n    this.functions[\"{}floor\"] = Functions.floor;\n    this.functions[\"{}ceiling\"] = Functions.ceiling;\n    this.functions[\"{}round\"] = Functions.round;\n  };\n\n  FunctionResolver.prototype.addFunction = function (ns, ln, f) {\n    this.functions[\"{\" + ns + \"}\" + ln] = f;\n  };\n\n  FunctionResolver.getFunctionFromContext = function (qName, context) {\n    var parts = Utilities.resolveQName(qName, context.namespaceResolver, context.contextNode, false);\n\n    if (parts[0] === null) {\n      throw new Error(\"Cannot resolve QName \" + name);\n    }\n\n    return context.functionResolver.getFunction(parts[1], parts[0]);\n  };\n\n  FunctionResolver.prototype.getFunction = function (localName, namespace) {\n    return this.functions[\"{\" + namespace + \"}\" + localName];\n  }; // NamespaceResolver /////////////////////////////////////////////////////////\n\n\n  NamespaceResolver.prototype = new Object();\n  NamespaceResolver.prototype.constructor = NamespaceResolver;\n  NamespaceResolver.superclass = Object.prototype;\n\n  function NamespaceResolver() {}\n\n  NamespaceResolver.prototype.getNamespace = function (prefix, n) {\n    if (prefix == \"xml\") {\n      return XPath.XML_NAMESPACE_URI;\n    } else if (prefix == \"xmlns\") {\n      return XPath.XMLNS_NAMESPACE_URI;\n    }\n\n    if (n.nodeType == 9\n    /*Node.DOCUMENT_NODE*/\n    ) {\n      n = n.documentElement;\n    } else if (n.nodeType == 2\n    /*Node.ATTRIBUTE_NODE*/\n    ) {\n      n = PathExpr.getOwnerElement(n);\n    } else if (n.nodeType != 1\n    /*Node.ELEMENT_NODE*/\n    ) {\n      n = n.parentNode;\n    }\n\n    while (n != null && n.nodeType == 1\n    /*Node.ELEMENT_NODE*/\n    ) {\n      var nnm = n.attributes;\n\n      for (var i = 0; i < nnm.length; i++) {\n        var a = nnm.item(i);\n        var aname = a.name || a.nodeName;\n\n        if (aname === \"xmlns\" && prefix === \"\" || aname === \"xmlns:\" + prefix) {\n          return String(a.value || a.nodeValue);\n        }\n      }\n\n      n = n.parentNode;\n    }\n\n    return null;\n  }; // Functions /////////////////////////////////////////////////////////////////\n\n\n  var Functions = new Object();\n\n  Functions.last = function (c) {\n    if (arguments.length != 1) {\n      throw new Error(\"Function last expects ()\");\n    }\n\n    return new XNumber(c.contextSize);\n  };\n\n  Functions.position = function (c) {\n    if (arguments.length != 1) {\n      throw new Error(\"Function position expects ()\");\n    }\n\n    return new XNumber(c.contextPosition);\n  };\n\n  Functions.count = function () {\n    var c = arguments[0];\n    var ns;\n\n    if (arguments.length != 2 || !Utilities.instance_of(ns = arguments[1].evaluate(c), XNodeSet)) {\n      throw new Error(\"Function count expects (node-set)\");\n    }\n\n    return new XNumber(ns.size);\n  };\n\n  Functions.id = function () {\n    var c = arguments[0];\n    var id;\n\n    if (arguments.length != 2) {\n      throw new Error(\"Function id expects (object)\");\n    }\n\n    id = arguments[1].evaluate(c);\n\n    if (Utilities.instance_of(id, XNodeSet)) {\n      id = id.toArray().join(\" \");\n    } else {\n      id = id.stringValue();\n    }\n\n    var ids = id.split(/[\\x0d\\x0a\\x09\\x20]+/);\n    var count = 0;\n    var ns = new XNodeSet();\n    var doc = c.contextNode.nodeType == 9\n    /*Node.DOCUMENT_NODE*/\n    ? c.contextNode : c.contextNode.ownerDocument;\n\n    for (var i = 0; i < ids.length; i++) {\n      var n;\n\n      if (doc.getElementById) {\n        n = doc.getElementById(ids[i]);\n      } else {\n        n = Utilities.getElementById(doc, ids[i]);\n      }\n\n      if (n != null) {\n        ns.add(n);\n        count++;\n      }\n    }\n\n    return ns;\n  };\n\n  Functions.localName = function (c, eNode) {\n    var n;\n\n    if (arguments.length == 1) {\n      n = c.contextNode;\n    } else if (arguments.length == 2) {\n      n = eNode.evaluate(c).first();\n    } else {\n      throw new Error(\"Function local-name expects (node-set?)\");\n    }\n\n    if (n == null) {\n      return new XString(\"\");\n    }\n\n    return new XString(n.localName || //  standard elements and attributes\n    n.baseName || //  IE\n    n.target || //  processing instructions\n    n.nodeName || //  DOM1 elements\n    \"\" //  fallback\n    );\n  };\n\n  Functions.namespaceURI = function () {\n    var c = arguments[0];\n    var n;\n\n    if (arguments.length == 1) {\n      n = c.contextNode;\n    } else if (arguments.length == 2) {\n      n = arguments[1].evaluate(c).first();\n    } else {\n      throw new Error(\"Function namespace-uri expects (node-set?)\");\n    }\n\n    if (n == null) {\n      return new XString(\"\");\n    }\n\n    return new XString(n.namespaceURI);\n  };\n\n  Functions.name = function () {\n    var c = arguments[0];\n    var n;\n\n    if (arguments.length == 1) {\n      n = c.contextNode;\n    } else if (arguments.length == 2) {\n      n = arguments[1].evaluate(c).first();\n    } else {\n      throw new Error(\"Function name expects (node-set?)\");\n    }\n\n    if (n == null) {\n      return new XString(\"\");\n    }\n\n    if (n.nodeType == 1\n    /*Node.ELEMENT_NODE*/\n    ) {\n      return new XString(n.nodeName);\n    } else if (n.nodeType == 2\n    /*Node.ATTRIBUTE_NODE*/\n    ) {\n      return new XString(n.name || n.nodeName);\n    } else if (n.nodeType === 7\n    /*Node.PROCESSING_INSTRUCTION_NODE*/\n    ) {\n      return new XString(n.target || n.nodeName);\n    } else if (n.localName == null) {\n      return new XString(\"\");\n    } else {\n      return new XString(n.localName);\n    }\n  };\n\n  Functions.string = function () {\n    var c = arguments[0];\n\n    if (arguments.length == 1) {\n      return new XString(XNodeSet.prototype.stringForNode(c.contextNode));\n    } else if (arguments.length == 2) {\n      return arguments[1].evaluate(c).string();\n    }\n\n    throw new Error(\"Function string expects (object?)\");\n  };\n\n  Functions.concat = function (c) {\n    if (arguments.length < 3) {\n      throw new Error(\"Function concat expects (string, string[, string]*)\");\n    }\n\n    var s = \"\";\n\n    for (var i = 1; i < arguments.length; i++) {\n      s += arguments[i].evaluate(c).stringValue();\n    }\n\n    return new XString(s);\n  };\n\n  Functions.startsWith = function () {\n    var c = arguments[0];\n\n    if (arguments.length != 3) {\n      throw new Error(\"Function startsWith expects (string, string)\");\n    }\n\n    var s1 = arguments[1].evaluate(c).stringValue();\n    var s2 = arguments[2].evaluate(c).stringValue();\n    return new XBoolean(s1.substring(0, s2.length) == s2);\n  };\n\n  Functions.contains = function () {\n    var c = arguments[0];\n\n    if (arguments.length != 3) {\n      throw new Error(\"Function contains expects (string, string)\");\n    }\n\n    var s1 = arguments[1].evaluate(c).stringValue();\n    var s2 = arguments[2].evaluate(c).stringValue();\n    return new XBoolean(s1.indexOf(s2) !== -1);\n  };\n\n  Functions.substringBefore = function () {\n    var c = arguments[0];\n\n    if (arguments.length != 3) {\n      throw new Error(\"Function substring-before expects (string, string)\");\n    }\n\n    var s1 = arguments[1].evaluate(c).stringValue();\n    var s2 = arguments[2].evaluate(c).stringValue();\n    return new XString(s1.substring(0, s1.indexOf(s2)));\n  };\n\n  Functions.substringAfter = function () {\n    var c = arguments[0];\n\n    if (arguments.length != 3) {\n      throw new Error(\"Function substring-after expects (string, string)\");\n    }\n\n    var s1 = arguments[1].evaluate(c).stringValue();\n    var s2 = arguments[2].evaluate(c).stringValue();\n\n    if (s2.length == 0) {\n      return new XString(s1);\n    }\n\n    var i = s1.indexOf(s2);\n\n    if (i == -1) {\n      return new XString(\"\");\n    }\n\n    return new XString(s1.substring(i + s2.length));\n  };\n\n  Functions.substring = function () {\n    var c = arguments[0];\n\n    if (!(arguments.length == 3 || arguments.length == 4)) {\n      throw new Error(\"Function substring expects (string, number, number?)\");\n    }\n\n    var s = arguments[1].evaluate(c).stringValue();\n    var n1 = Math.round(arguments[2].evaluate(c).numberValue()) - 1;\n    var n2 = arguments.length == 4 ? n1 + Math.round(arguments[3].evaluate(c).numberValue()) : undefined;\n    return new XString(s.substring(n1, n2));\n  };\n\n  Functions.stringLength = function () {\n    var c = arguments[0];\n    var s;\n\n    if (arguments.length == 1) {\n      s = XNodeSet.prototype.stringForNode(c.contextNode);\n    } else if (arguments.length == 2) {\n      s = arguments[1].evaluate(c).stringValue();\n    } else {\n      throw new Error(\"Function string-length expects (string?)\");\n    }\n\n    return new XNumber(s.length);\n  };\n\n  Functions.normalizeSpace = function () {\n    var c = arguments[0];\n    var s;\n\n    if (arguments.length == 1) {\n      s = XNodeSet.prototype.stringForNode(c.contextNode);\n    } else if (arguments.length == 2) {\n      s = arguments[1].evaluate(c).stringValue();\n    } else {\n      throw new Error(\"Function normalize-space expects (string?)\");\n    }\n\n    var i = 0;\n    var j = s.length - 1;\n\n    while (Utilities.isSpace(s.charCodeAt(j))) {\n      j--;\n    }\n\n    var t = \"\";\n\n    while (i <= j && Utilities.isSpace(s.charCodeAt(i))) {\n      i++;\n    }\n\n    while (i <= j) {\n      if (Utilities.isSpace(s.charCodeAt(i))) {\n        t += \" \";\n\n        while (i <= j && Utilities.isSpace(s.charCodeAt(i))) {\n          i++;\n        }\n      } else {\n        t += s.charAt(i);\n        i++;\n      }\n    }\n\n    return new XString(t);\n  };\n\n  Functions.translate = function (c, eValue, eFrom, eTo) {\n    if (arguments.length != 4) {\n      throw new Error(\"Function translate expects (string, string, string)\");\n    }\n\n    var value = eValue.evaluate(c).stringValue();\n    var from = eFrom.evaluate(c).stringValue();\n    var to = eTo.evaluate(c).stringValue();\n    var cMap = reduce(function (acc, ch, i) {\n      if (!(ch in acc)) {\n        acc[ch] = i > to.length ? '' : to[i];\n      }\n\n      return acc;\n    }, {}, from);\n    var t = join('', map(function (ch) {\n      return ch in cMap ? cMap[ch] : ch;\n    }, value));\n    return new XString(t);\n  };\n\n  Functions.boolean_ = function () {\n    var c = arguments[0];\n\n    if (arguments.length != 2) {\n      throw new Error(\"Function boolean expects (object)\");\n    }\n\n    return arguments[1].evaluate(c).bool();\n  };\n\n  Functions.not = function (c, eValue) {\n    if (arguments.length != 2) {\n      throw new Error(\"Function not expects (object)\");\n    }\n\n    return eValue.evaluate(c).bool().not();\n  };\n\n  Functions.true_ = function () {\n    if (arguments.length != 1) {\n      throw new Error(\"Function true expects ()\");\n    }\n\n    return XBoolean.true_;\n  };\n\n  Functions.false_ = function () {\n    if (arguments.length != 1) {\n      throw new Error(\"Function false expects ()\");\n    }\n\n    return XBoolean.false_;\n  };\n\n  Functions.lang = function () {\n    var c = arguments[0];\n\n    if (arguments.length != 2) {\n      throw new Error(\"Function lang expects (string)\");\n    }\n\n    var lang;\n\n    for (var n = c.contextNode; n != null && n.nodeType != 9\n    /*Node.DOCUMENT_NODE*/\n    ; n = n.parentNode) {\n      var a = n.getAttributeNS(XPath.XML_NAMESPACE_URI, \"lang\");\n\n      if (a != null) {\n        lang = String(a);\n        break;\n      }\n    }\n\n    if (lang == null) {\n      return XBoolean.false_;\n    }\n\n    var s = arguments[1].evaluate(c).stringValue();\n    return new XBoolean(lang.substring(0, s.length) == s && (lang.length == s.length || lang.charAt(s.length) == '-'));\n  };\n\n  Functions.number = function () {\n    var c = arguments[0];\n\n    if (!(arguments.length == 1 || arguments.length == 2)) {\n      throw new Error(\"Function number expects (object?)\");\n    }\n\n    if (arguments.length == 1) {\n      return new XNumber(XNodeSet.prototype.stringForNode(c.contextNode));\n    }\n\n    return arguments[1].evaluate(c).number();\n  };\n\n  Functions.sum = function () {\n    var c = arguments[0];\n    var ns;\n\n    if (arguments.length != 2 || !Utilities.instance_of(ns = arguments[1].evaluate(c), XNodeSet)) {\n      throw new Error(\"Function sum expects (node-set)\");\n    }\n\n    ns = ns.toUnsortedArray();\n    var n = 0;\n\n    for (var i = 0; i < ns.length; i++) {\n      n += new XNumber(XNodeSet.prototype.stringForNode(ns[i])).numberValue();\n    }\n\n    return new XNumber(n);\n  };\n\n  Functions.floor = function () {\n    var c = arguments[0];\n\n    if (arguments.length != 2) {\n      throw new Error(\"Function floor expects (number)\");\n    }\n\n    return new XNumber(Math.floor(arguments[1].evaluate(c).numberValue()));\n  };\n\n  Functions.ceiling = function () {\n    var c = arguments[0];\n\n    if (arguments.length != 2) {\n      throw new Error(\"Function ceiling expects (number)\");\n    }\n\n    return new XNumber(Math.ceil(arguments[1].evaluate(c).numberValue()));\n  };\n\n  Functions.round = function () {\n    var c = arguments[0];\n\n    if (arguments.length != 2) {\n      throw new Error(\"Function round expects (number)\");\n    }\n\n    return new XNumber(Math.round(arguments[1].evaluate(c).numberValue()));\n  }; // Utilities /////////////////////////////////////////////////////////////////\n\n\n  var Utilities = new Object();\n\n  Utilities.isAttribute = function (val) {\n    return val && (val.nodeType === 2 || val.ownerElement);\n  };\n\n  Utilities.splitQName = function (qn) {\n    var i = qn.indexOf(\":\");\n\n    if (i == -1) {\n      return [null, qn];\n    }\n\n    return [qn.substring(0, i), qn.substring(i + 1)];\n  };\n\n  Utilities.resolveQName = function (qn, nr, n, useDefault) {\n    var parts = Utilities.splitQName(qn);\n\n    if (parts[0] != null) {\n      parts[0] = nr.getNamespace(parts[0], n);\n    } else {\n      if (useDefault) {\n        parts[0] = nr.getNamespace(\"\", n);\n\n        if (parts[0] == null) {\n          parts[0] = \"\";\n        }\n      } else {\n        parts[0] = \"\";\n      }\n    }\n\n    return parts;\n  };\n\n  Utilities.isSpace = function (c) {\n    return c == 0x9 || c == 0xd || c == 0xa || c == 0x20;\n  };\n\n  Utilities.isLetter = function (c) {\n    return c >= 0x0041 && c <= 0x005A || c >= 0x0061 && c <= 0x007A || c >= 0x00C0 && c <= 0x00D6 || c >= 0x00D8 && c <= 0x00F6 || c >= 0x00F8 && c <= 0x00FF || c >= 0x0100 && c <= 0x0131 || c >= 0x0134 && c <= 0x013E || c >= 0x0141 && c <= 0x0148 || c >= 0x014A && c <= 0x017E || c >= 0x0180 && c <= 0x01C3 || c >= 0x01CD && c <= 0x01F0 || c >= 0x01F4 && c <= 0x01F5 || c >= 0x01FA && c <= 0x0217 || c >= 0x0250 && c <= 0x02A8 || c >= 0x02BB && c <= 0x02C1 || c == 0x0386 || c >= 0x0388 && c <= 0x038A || c == 0x038C || c >= 0x038E && c <= 0x03A1 || c >= 0x03A3 && c <= 0x03CE || c >= 0x03D0 && c <= 0x03D6 || c == 0x03DA || c == 0x03DC || c == 0x03DE || c == 0x03E0 || c >= 0x03E2 && c <= 0x03F3 || c >= 0x0401 && c <= 0x040C || c >= 0x040E && c <= 0x044F || c >= 0x0451 && c <= 0x045C || c >= 0x045E && c <= 0x0481 || c >= 0x0490 && c <= 0x04C4 || c >= 0x04C7 && c <= 0x04C8 || c >= 0x04CB && c <= 0x04CC || c >= 0x04D0 && c <= 0x04EB || c >= 0x04EE && c <= 0x04F5 || c >= 0x04F8 && c <= 0x04F9 || c >= 0x0531 && c <= 0x0556 || c == 0x0559 || c >= 0x0561 && c <= 0x0586 || c >= 0x05D0 && c <= 0x05EA || c >= 0x05F0 && c <= 0x05F2 || c >= 0x0621 && c <= 0x063A || c >= 0x0641 && c <= 0x064A || c >= 0x0671 && c <= 0x06B7 || c >= 0x06BA && c <= 0x06BE || c >= 0x06C0 && c <= 0x06CE || c >= 0x06D0 && c <= 0x06D3 || c == 0x06D5 || c >= 0x06E5 && c <= 0x06E6 || c >= 0x0905 && c <= 0x0939 || c == 0x093D || c >= 0x0958 && c <= 0x0961 || c >= 0x0985 && c <= 0x098C || c >= 0x098F && c <= 0x0990 || c >= 0x0993 && c <= 0x09A8 || c >= 0x09AA && c <= 0x09B0 || c == 0x09B2 || c >= 0x09B6 && c <= 0x09B9 || c >= 0x09DC && c <= 0x09DD || c >= 0x09DF && c <= 0x09E1 || c >= 0x09F0 && c <= 0x09F1 || c >= 0x0A05 && c <= 0x0A0A || c >= 0x0A0F && c <= 0x0A10 || c >= 0x0A13 && c <= 0x0A28 || c >= 0x0A2A && c <= 0x0A30 || c >= 0x0A32 && c <= 0x0A33 || c >= 0x0A35 && c <= 0x0A36 || c >= 0x0A38 && c <= 0x0A39 || c >= 0x0A59 && c <= 0x0A5C || c == 0x0A5E || c >= 0x0A72 && c <= 0x0A74 || c >= 0x0A85 && c <= 0x0A8B || c == 0x0A8D || c >= 0x0A8F && c <= 0x0A91 || c >= 0x0A93 && c <= 0x0AA8 || c >= 0x0AAA && c <= 0x0AB0 || c >= 0x0AB2 && c <= 0x0AB3 || c >= 0x0AB5 && c <= 0x0AB9 || c == 0x0ABD || c == 0x0AE0 || c >= 0x0B05 && c <= 0x0B0C || c >= 0x0B0F && c <= 0x0B10 || c >= 0x0B13 && c <= 0x0B28 || c >= 0x0B2A && c <= 0x0B30 || c >= 0x0B32 && c <= 0x0B33 || c >= 0x0B36 && c <= 0x0B39 || c == 0x0B3D || c >= 0x0B5C && c <= 0x0B5D || c >= 0x0B5F && c <= 0x0B61 || c >= 0x0B85 && c <= 0x0B8A || c >= 0x0B8E && c <= 0x0B90 || c >= 0x0B92 && c <= 0x0B95 || c >= 0x0B99 && c <= 0x0B9A || c == 0x0B9C || c >= 0x0B9E && c <= 0x0B9F || c >= 0x0BA3 && c <= 0x0BA4 || c >= 0x0BA8 && c <= 0x0BAA || c >= 0x0BAE && c <= 0x0BB5 || c >= 0x0BB7 && c <= 0x0BB9 || c >= 0x0C05 && c <= 0x0C0C || c >= 0x0C0E && c <= 0x0C10 || c >= 0x0C12 && c <= 0x0C28 || c >= 0x0C2A && c <= 0x0C33 || c >= 0x0C35 && c <= 0x0C39 || c >= 0x0C60 && c <= 0x0C61 || c >= 0x0C85 && c <= 0x0C8C || c >= 0x0C8E && c <= 0x0C90 || c >= 0x0C92 && c <= 0x0CA8 || c >= 0x0CAA && c <= 0x0CB3 || c >= 0x0CB5 && c <= 0x0CB9 || c == 0x0CDE || c >= 0x0CE0 && c <= 0x0CE1 || c >= 0x0D05 && c <= 0x0D0C || c >= 0x0D0E && c <= 0x0D10 || c >= 0x0D12 && c <= 0x0D28 || c >= 0x0D2A && c <= 0x0D39 || c >= 0x0D60 && c <= 0x0D61 || c >= 0x0E01 && c <= 0x0E2E || c == 0x0E30 || c >= 0x0E32 && c <= 0x0E33 || c >= 0x0E40 && c <= 0x0E45 || c >= 0x0E81 && c <= 0x0E82 || c == 0x0E84 || c >= 0x0E87 && c <= 0x0E88 || c == 0x0E8A || c == 0x0E8D || c >= 0x0E94 && c <= 0x0E97 || c >= 0x0E99 && c <= 0x0E9F || c >= 0x0EA1 && c <= 0x0EA3 || c == 0x0EA5 || c == 0x0EA7 || c >= 0x0EAA && c <= 0x0EAB || c >= 0x0EAD && c <= 0x0EAE || c == 0x0EB0 || c >= 0x0EB2 && c <= 0x0EB3 || c == 0x0EBD || c >= 0x0EC0 && c <= 0x0EC4 || c >= 0x0F40 && c <= 0x0F47 || c >= 0x0F49 && c <= 0x0F69 || c >= 0x10A0 && c <= 0x10C5 || c >= 0x10D0 && c <= 0x10F6 || c == 0x1100 || c >= 0x1102 && c <= 0x1103 || c >= 0x1105 && c <= 0x1107 || c == 0x1109 || c >= 0x110B && c <= 0x110C || c >= 0x110E && c <= 0x1112 || c == 0x113C || c == 0x113E || c == 0x1140 || c == 0x114C || c == 0x114E || c == 0x1150 || c >= 0x1154 && c <= 0x1155 || c == 0x1159 || c >= 0x115F && c <= 0x1161 || c == 0x1163 || c == 0x1165 || c == 0x1167 || c == 0x1169 || c >= 0x116D && c <= 0x116E || c >= 0x1172 && c <= 0x1173 || c == 0x1175 || c == 0x119E || c == 0x11A8 || c == 0x11AB || c >= 0x11AE && c <= 0x11AF || c >= 0x11B7 && c <= 0x11B8 || c == 0x11BA || c >= 0x11BC && c <= 0x11C2 || c == 0x11EB || c == 0x11F0 || c == 0x11F9 || c >= 0x1E00 && c <= 0x1E9B || c >= 0x1EA0 && c <= 0x1EF9 || c >= 0x1F00 && c <= 0x1F15 || c >= 0x1F18 && c <= 0x1F1D || c >= 0x1F20 && c <= 0x1F45 || c >= 0x1F48 && c <= 0x1F4D || c >= 0x1F50 && c <= 0x1F57 || c == 0x1F59 || c == 0x1F5B || c == 0x1F5D || c >= 0x1F5F && c <= 0x1F7D || c >= 0x1F80 && c <= 0x1FB4 || c >= 0x1FB6 && c <= 0x1FBC || c == 0x1FBE || c >= 0x1FC2 && c <= 0x1FC4 || c >= 0x1FC6 && c <= 0x1FCC || c >= 0x1FD0 && c <= 0x1FD3 || c >= 0x1FD6 && c <= 0x1FDB || c >= 0x1FE0 && c <= 0x1FEC || c >= 0x1FF2 && c <= 0x1FF4 || c >= 0x1FF6 && c <= 0x1FFC || c == 0x2126 || c >= 0x212A && c <= 0x212B || c == 0x212E || c >= 0x2180 && c <= 0x2182 || c >= 0x3041 && c <= 0x3094 || c >= 0x30A1 && c <= 0x30FA || c >= 0x3105 && c <= 0x312C || c >= 0xAC00 && c <= 0xD7A3 || c >= 0x4E00 && c <= 0x9FA5 || c == 0x3007 || c >= 0x3021 && c <= 0x3029;\n  };\n\n  Utilities.isNCNameChar = function (c) {\n    return c >= 0x0030 && c <= 0x0039 || c >= 0x0660 && c <= 0x0669 || c >= 0x06F0 && c <= 0x06F9 || c >= 0x0966 && c <= 0x096F || c >= 0x09E6 && c <= 0x09EF || c >= 0x0A66 && c <= 0x0A6F || c >= 0x0AE6 && c <= 0x0AEF || c >= 0x0B66 && c <= 0x0B6F || c >= 0x0BE7 && c <= 0x0BEF || c >= 0x0C66 && c <= 0x0C6F || c >= 0x0CE6 && c <= 0x0CEF || c >= 0x0D66 && c <= 0x0D6F || c >= 0x0E50 && c <= 0x0E59 || c >= 0x0ED0 && c <= 0x0ED9 || c >= 0x0F20 && c <= 0x0F29 || c == 0x002E || c == 0x002D || c == 0x005F || Utilities.isLetter(c) || c >= 0x0300 && c <= 0x0345 || c >= 0x0360 && c <= 0x0361 || c >= 0x0483 && c <= 0x0486 || c >= 0x0591 && c <= 0x05A1 || c >= 0x05A3 && c <= 0x05B9 || c >= 0x05BB && c <= 0x05BD || c == 0x05BF || c >= 0x05C1 && c <= 0x05C2 || c == 0x05C4 || c >= 0x064B && c <= 0x0652 || c == 0x0670 || c >= 0x06D6 && c <= 0x06DC || c >= 0x06DD && c <= 0x06DF || c >= 0x06E0 && c <= 0x06E4 || c >= 0x06E7 && c <= 0x06E8 || c >= 0x06EA && c <= 0x06ED || c >= 0x0901 && c <= 0x0903 || c == 0x093C || c >= 0x093E && c <= 0x094C || c == 0x094D || c >= 0x0951 && c <= 0x0954 || c >= 0x0962 && c <= 0x0963 || c >= 0x0981 && c <= 0x0983 || c == 0x09BC || c == 0x09BE || c == 0x09BF || c >= 0x09C0 && c <= 0x09C4 || c >= 0x09C7 && c <= 0x09C8 || c >= 0x09CB && c <= 0x09CD || c == 0x09D7 || c >= 0x09E2 && c <= 0x09E3 || c == 0x0A02 || c == 0x0A3C || c == 0x0A3E || c == 0x0A3F || c >= 0x0A40 && c <= 0x0A42 || c >= 0x0A47 && c <= 0x0A48 || c >= 0x0A4B && c <= 0x0A4D || c >= 0x0A70 && c <= 0x0A71 || c >= 0x0A81 && c <= 0x0A83 || c == 0x0ABC || c >= 0x0ABE && c <= 0x0AC5 || c >= 0x0AC7 && c <= 0x0AC9 || c >= 0x0ACB && c <= 0x0ACD || c >= 0x0B01 && c <= 0x0B03 || c == 0x0B3C || c >= 0x0B3E && c <= 0x0B43 || c >= 0x0B47 && c <= 0x0B48 || c >= 0x0B4B && c <= 0x0B4D || c >= 0x0B56 && c <= 0x0B57 || c >= 0x0B82 && c <= 0x0B83 || c >= 0x0BBE && c <= 0x0BC2 || c >= 0x0BC6 && c <= 0x0BC8 || c >= 0x0BCA && c <= 0x0BCD || c == 0x0BD7 || c >= 0x0C01 && c <= 0x0C03 || c >= 0x0C3E && c <= 0x0C44 || c >= 0x0C46 && c <= 0x0C48 || c >= 0x0C4A && c <= 0x0C4D || c >= 0x0C55 && c <= 0x0C56 || c >= 0x0C82 && c <= 0x0C83 || c >= 0x0CBE && c <= 0x0CC4 || c >= 0x0CC6 && c <= 0x0CC8 || c >= 0x0CCA && c <= 0x0CCD || c >= 0x0CD5 && c <= 0x0CD6 || c >= 0x0D02 && c <= 0x0D03 || c >= 0x0D3E && c <= 0x0D43 || c >= 0x0D46 && c <= 0x0D48 || c >= 0x0D4A && c <= 0x0D4D || c == 0x0D57 || c == 0x0E31 || c >= 0x0E34 && c <= 0x0E3A || c >= 0x0E47 && c <= 0x0E4E || c == 0x0EB1 || c >= 0x0EB4 && c <= 0x0EB9 || c >= 0x0EBB && c <= 0x0EBC || c >= 0x0EC8 && c <= 0x0ECD || c >= 0x0F18 && c <= 0x0F19 || c == 0x0F35 || c == 0x0F37 || c == 0x0F39 || c == 0x0F3E || c == 0x0F3F || c >= 0x0F71 && c <= 0x0F84 || c >= 0x0F86 && c <= 0x0F8B || c >= 0x0F90 && c <= 0x0F95 || c == 0x0F97 || c >= 0x0F99 && c <= 0x0FAD || c >= 0x0FB1 && c <= 0x0FB7 || c == 0x0FB9 || c >= 0x20D0 && c <= 0x20DC || c == 0x20E1 || c >= 0x302A && c <= 0x302F || c == 0x3099 || c == 0x309A || c == 0x00B7 || c == 0x02D0 || c == 0x02D1 || c == 0x0387 || c == 0x0640 || c == 0x0E46 || c == 0x0EC6 || c == 0x3005 || c >= 0x3031 && c <= 0x3035 || c >= 0x309D && c <= 0x309E || c >= 0x30FC && c <= 0x30FE;\n  };\n\n  Utilities.coalesceText = function (n) {\n    for (var m = n.firstChild; m != null; m = m.nextSibling) {\n      if (m.nodeType == 3\n      /*Node.TEXT_NODE*/\n      || m.nodeType == 4\n      /*Node.CDATA_SECTION_NODE*/\n      ) {\n        var s = m.nodeValue;\n        var first = m;\n        m = m.nextSibling;\n\n        while (m != null && (m.nodeType == 3\n        /*Node.TEXT_NODE*/\n        || m.nodeType == 4\n        /*Node.CDATA_SECTION_NODE*/\n        )) {\n          s += m.nodeValue;\n          var del = m;\n          m = m.nextSibling;\n          del.parentNode.removeChild(del);\n        }\n\n        if (first.nodeType == 4\n        /*Node.CDATA_SECTION_NODE*/\n        ) {\n          var p = first.parentNode;\n\n          if (first.nextSibling == null) {\n            p.removeChild(first);\n            p.appendChild(p.ownerDocument.createTextNode(s));\n          } else {\n            var next = first.nextSibling;\n            p.removeChild(first);\n            p.insertBefore(p.ownerDocument.createTextNode(s), next);\n          }\n        } else {\n          first.nodeValue = s;\n        }\n\n        if (m == null) {\n          break;\n        }\n      } else if (m.nodeType == 1\n      /*Node.ELEMENT_NODE*/\n      ) {\n        Utilities.coalesceText(m);\n      }\n    }\n  };\n\n  Utilities.instance_of = function (o, c) {\n    while (o != null) {\n      if (o.constructor === c) {\n        return true;\n      }\n\n      if (o === Object) {\n        return false;\n      }\n\n      o = o.constructor.superclass;\n    }\n\n    return false;\n  };\n\n  Utilities.getElementById = function (n, id) {\n    // Note that this does not check the DTD to check for actual\n    // attributes of type ID, so this may be a bit wrong.\n    if (n.nodeType == 1\n    /*Node.ELEMENT_NODE*/\n    ) {\n      if (n.getAttribute(\"id\") == id || n.getAttributeNS(null, \"id\") == id) {\n        return n;\n      }\n    }\n\n    for (var m = n.firstChild; m != null; m = m.nextSibling) {\n      var res = Utilities.getElementById(m, id);\n\n      if (res != null) {\n        return res;\n      }\n    }\n\n    return null;\n  }; // XPathException ////////////////////////////////////////////////////////////\n\n\n  var XPathException = function () {\n    function getMessage(code, exception) {\n      var msg = exception ? \": \" + exception.toString() : \"\";\n\n      switch (code) {\n        case XPathException.INVALID_EXPRESSION_ERR:\n          return \"Invalid expression\" + msg;\n\n        case XPathException.TYPE_ERR:\n          return \"Type error\" + msg;\n      }\n\n      return null;\n    }\n\n    function XPathException(code, error, message) {\n      var err = Error.call(this, getMessage(code, error) || message);\n      err.code = code;\n      err.exception = error;\n      return err;\n    }\n\n    XPathException.prototype = Object.create(Error.prototype);\n    XPathException.prototype.constructor = XPathException;\n    XPathException.superclass = Error;\n\n    XPathException.prototype.toString = function () {\n      return this.message;\n    };\n\n    XPathException.fromMessage = function (message, error) {\n      return new XPathException(null, error, message);\n    };\n\n    XPathException.INVALID_EXPRESSION_ERR = 51;\n    XPathException.TYPE_ERR = 52;\n    return XPathException;\n  }(); // XPathExpression ///////////////////////////////////////////////////////////\n\n\n  XPathExpression.prototype = {};\n  XPathExpression.prototype.constructor = XPathExpression;\n  XPathExpression.superclass = Object.prototype;\n\n  function XPathExpression(e, r, p) {\n    this.xpath = p.parse(e);\n    this.context = new XPathContext();\n    this.context.namespaceResolver = new XPathNSResolverWrapper(r);\n  }\n\n  XPathExpression.getOwnerDocument = function (n) {\n    return n.nodeType === 9\n    /*Node.DOCUMENT_NODE*/\n    ? n : n.ownerDocument;\n  };\n\n  XPathExpression.detectHtmlDom = function (n) {\n    if (!n) {\n      return false;\n    }\n\n    var doc = XPathExpression.getOwnerDocument(n);\n\n    try {\n      return doc.implementation.hasFeature(\"HTML\", \"2.0\");\n    } catch (e) {\n      return true;\n    }\n  };\n\n  XPathExpression.prototype.evaluate = function (n, t, res) {\n    this.context.expressionContextNode = n; // backward compatibility - no reliable way to detect whether the DOM is HTML, but\n    // this library has been using this method up until now, so we will continue to use it\n    // ONLY when using an XPathExpression\n\n    this.context.caseInsensitive = XPathExpression.detectHtmlDom(n);\n    var result = this.xpath.evaluate(this.context);\n    return new XPathResult(result, t);\n  }; // XPathNSResolverWrapper ////////////////////////////////////////////////////\n\n\n  XPathNSResolverWrapper.prototype = {};\n  XPathNSResolverWrapper.prototype.constructor = XPathNSResolverWrapper;\n  XPathNSResolverWrapper.superclass = Object.prototype;\n\n  function XPathNSResolverWrapper(r) {\n    this.xpathNSResolver = r;\n  }\n\n  XPathNSResolverWrapper.prototype.getNamespace = function (prefix, n) {\n    if (this.xpathNSResolver == null) {\n      return null;\n    }\n\n    return this.xpathNSResolver.lookupNamespaceURI(prefix);\n  }; // NodeXPathNSResolver ///////////////////////////////////////////////////////\n\n\n  NodeXPathNSResolver.prototype = {};\n  NodeXPathNSResolver.prototype.constructor = NodeXPathNSResolver;\n  NodeXPathNSResolver.superclass = Object.prototype;\n\n  function NodeXPathNSResolver(n) {\n    this.node = n;\n    this.namespaceResolver = new NamespaceResolver();\n  }\n\n  NodeXPathNSResolver.prototype.lookupNamespaceURI = function (prefix) {\n    return this.namespaceResolver.getNamespace(prefix, this.node);\n  }; // XPathResult ///////////////////////////////////////////////////////////////\n\n\n  XPathResult.prototype = {};\n  XPathResult.prototype.constructor = XPathResult;\n  XPathResult.superclass = Object.prototype;\n\n  function XPathResult(v, t) {\n    if (t == XPathResult.ANY_TYPE) {\n      if (v.constructor === XString) {\n        t = XPathResult.STRING_TYPE;\n      } else if (v.constructor === XNumber) {\n        t = XPathResult.NUMBER_TYPE;\n      } else if (v.constructor === XBoolean) {\n        t = XPathResult.BOOLEAN_TYPE;\n      } else if (v.constructor === XNodeSet) {\n        t = XPathResult.UNORDERED_NODE_ITERATOR_TYPE;\n      }\n    }\n\n    this.resultType = t;\n\n    switch (t) {\n      case XPathResult.NUMBER_TYPE:\n        this.numberValue = v.numberValue();\n        return;\n\n      case XPathResult.STRING_TYPE:\n        this.stringValue = v.stringValue();\n        return;\n\n      case XPathResult.BOOLEAN_TYPE:\n        this.booleanValue = v.booleanValue();\n        return;\n\n      case XPathResult.ANY_UNORDERED_NODE_TYPE:\n      case XPathResult.FIRST_ORDERED_NODE_TYPE:\n        if (v.constructor === XNodeSet) {\n          this.singleNodeValue = v.first();\n          return;\n        }\n\n        break;\n\n      case XPathResult.UNORDERED_NODE_ITERATOR_TYPE:\n      case XPathResult.ORDERED_NODE_ITERATOR_TYPE:\n        if (v.constructor === XNodeSet) {\n          this.invalidIteratorState = false;\n          this.nodes = v.toArray();\n          this.iteratorIndex = 0;\n          return;\n        }\n\n        break;\n\n      case XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE:\n      case XPathResult.ORDERED_NODE_SNAPSHOT_TYPE:\n        if (v.constructor === XNodeSet) {\n          this.nodes = v.toArray();\n          this.snapshotLength = this.nodes.length;\n          return;\n        }\n\n        break;\n    }\n\n    throw new XPathException(XPathException.TYPE_ERR);\n  }\n\n  ;\n\n  XPathResult.prototype.iterateNext = function () {\n    if (this.resultType != XPathResult.UNORDERED_NODE_ITERATOR_TYPE && this.resultType != XPathResult.ORDERED_NODE_ITERATOR_TYPE) {\n      throw new XPathException(XPathException.TYPE_ERR);\n    }\n\n    return this.nodes[this.iteratorIndex++];\n  };\n\n  XPathResult.prototype.snapshotItem = function (i) {\n    if (this.resultType != XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE && this.resultType != XPathResult.ORDERED_NODE_SNAPSHOT_TYPE) {\n      throw new XPathException(XPathException.TYPE_ERR);\n    }\n\n    return this.nodes[i];\n  };\n\n  XPathResult.ANY_TYPE = 0;\n  XPathResult.NUMBER_TYPE = 1;\n  XPathResult.STRING_TYPE = 2;\n  XPathResult.BOOLEAN_TYPE = 3;\n  XPathResult.UNORDERED_NODE_ITERATOR_TYPE = 4;\n  XPathResult.ORDERED_NODE_ITERATOR_TYPE = 5;\n  XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE = 6;\n  XPathResult.ORDERED_NODE_SNAPSHOT_TYPE = 7;\n  XPathResult.ANY_UNORDERED_NODE_TYPE = 8;\n  XPathResult.FIRST_ORDERED_NODE_TYPE = 9; // DOM 3 XPath support ///////////////////////////////////////////////////////\n\n  function installDOM3XPathSupport(doc, p) {\n    doc.createExpression = function (e, r) {\n      try {\n        return new XPathExpression(e, r, p);\n      } catch (e) {\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR, e);\n      }\n    };\n\n    doc.createNSResolver = function (n) {\n      return new NodeXPathNSResolver(n);\n    };\n\n    doc.evaluate = function (e, cn, r, t, res) {\n      if (t < 0 || t > 9) {\n        throw {\n          code: 0,\n          toString: function () {\n            return \"Request type not supported\";\n          }\n        };\n      }\n\n      return doc.createExpression(e, r, p).evaluate(cn, t, res);\n    };\n  }\n\n  ; // ---------------------------------------------------------------------------\n  // Install DOM 3 XPath support for the current document.\n\n  try {\n    var shouldInstall = true;\n\n    try {\n      if (document.implementation && document.implementation.hasFeature && document.implementation.hasFeature(\"XPath\", null)) {\n        shouldInstall = false;\n      }\n    } catch (e) {}\n\n    if (shouldInstall) {\n      installDOM3XPathSupport(document, new XPathParser());\n    }\n  } catch (e) {} // ---------------------------------------------------------------------------\n  // exports for node.js\n\n\n  installDOM3XPathSupport(exports, new XPathParser());\n\n  (function () {\n    var parser = new XPathParser();\n    var defaultNSResolver = new NamespaceResolver();\n    var defaultFunctionResolver = new FunctionResolver();\n    var defaultVariableResolver = new VariableResolver();\n\n    function makeNSResolverFromFunction(func) {\n      return {\n        getNamespace: function (prefix, node) {\n          var ns = func(prefix, node);\n          return ns || defaultNSResolver.getNamespace(prefix, node);\n        }\n      };\n    }\n\n    function makeNSResolverFromObject(obj) {\n      return makeNSResolverFromFunction(obj.getNamespace.bind(obj));\n    }\n\n    function makeNSResolverFromMap(map) {\n      return makeNSResolverFromFunction(function (prefix) {\n        return map[prefix];\n      });\n    }\n\n    function makeNSResolver(resolver) {\n      if (resolver && typeof resolver.getNamespace === \"function\") {\n        return makeNSResolverFromObject(resolver);\n      }\n\n      if (typeof resolver === \"function\") {\n        return makeNSResolverFromFunction(resolver);\n      } // assume prefix -> uri mapping\n\n\n      if (typeof resolver === \"object\") {\n        return makeNSResolverFromMap(resolver);\n      }\n\n      return defaultNSResolver;\n    }\n    /** Converts native JavaScript types to their XPath library equivalent */\n\n\n    function convertValue(value) {\n      if (value === null || typeof value === \"undefined\" || value instanceof XString || value instanceof XBoolean || value instanceof XNumber || value instanceof XNodeSet) {\n        return value;\n      }\n\n      switch (typeof value) {\n        case \"string\":\n          return new XString(value);\n\n        case \"boolean\":\n          return new XBoolean(value);\n\n        case \"number\":\n          return new XNumber(value);\n      } // assume node(s)\n\n\n      var ns = new XNodeSet();\n      ns.addArray([].concat(value));\n      return ns;\n    }\n\n    function makeEvaluator(func) {\n      return function (context) {\n        var args = Array.prototype.slice.call(arguments, 1).map(function (arg) {\n          return arg.evaluate(context);\n        });\n        var result = func.apply(this, [].concat(context, args));\n        return convertValue(result);\n      };\n    }\n\n    function makeFunctionResolverFromFunction(func) {\n      return {\n        getFunction: function (name, namespace) {\n          var found = func(name, namespace);\n\n          if (found) {\n            return makeEvaluator(found);\n          }\n\n          return defaultFunctionResolver.getFunction(name, namespace);\n        }\n      };\n    }\n\n    function makeFunctionResolverFromObject(obj) {\n      return makeFunctionResolverFromFunction(obj.getFunction.bind(obj));\n    }\n\n    function makeFunctionResolverFromMap(map) {\n      return makeFunctionResolverFromFunction(function (name) {\n        return map[name];\n      });\n    }\n\n    function makeFunctionResolver(resolver) {\n      if (resolver && typeof resolver.getFunction === \"function\") {\n        return makeFunctionResolverFromObject(resolver);\n      }\n\n      if (typeof resolver === \"function\") {\n        return makeFunctionResolverFromFunction(resolver);\n      } // assume map\n\n\n      if (typeof resolver === \"object\") {\n        return makeFunctionResolverFromMap(resolver);\n      }\n\n      return defaultFunctionResolver;\n    }\n\n    function makeVariableResolverFromFunction(func) {\n      return {\n        getVariable: function (name, namespace) {\n          var value = func(name, namespace);\n          return convertValue(value);\n        }\n      };\n    }\n\n    function makeVariableResolver(resolver) {\n      if (resolver) {\n        if (typeof resolver.getVariable === \"function\") {\n          return makeVariableResolverFromFunction(resolver.getVariable.bind(resolver));\n        }\n\n        if (typeof resolver === \"function\") {\n          return makeVariableResolverFromFunction(resolver);\n        } // assume map\n\n\n        if (typeof resolver === \"object\") {\n          return makeVariableResolverFromFunction(function (name) {\n            return resolver[name];\n          });\n        }\n      }\n\n      return defaultVariableResolver;\n    }\n\n    function copyIfPresent(prop, dest, source) {\n      if (prop in source) {\n        dest[prop] = source[prop];\n      }\n    }\n\n    function makeContext(options) {\n      var context = new XPathContext();\n\n      if (options) {\n        context.namespaceResolver = makeNSResolver(options.namespaces);\n        context.functionResolver = makeFunctionResolver(options.functions);\n        context.variableResolver = makeVariableResolver(options.variables);\n        context.expressionContextNode = options.node;\n        copyIfPresent('allowAnyNamespaceForNoPrefix', context, options);\n        copyIfPresent('isHtml', context, options);\n      } else {\n        context.namespaceResolver = defaultNSResolver;\n      }\n\n      return context;\n    }\n\n    function evaluate(parsedExpression, options) {\n      var context = makeContext(options);\n      return parsedExpression.evaluate(context);\n    }\n\n    var evaluatorPrototype = {\n      evaluate: function (options) {\n        return evaluate(this.expression, options);\n      },\n      evaluateNumber: function (options) {\n        return this.evaluate(options).numberValue();\n      },\n      evaluateString: function (options) {\n        return this.evaluate(options).stringValue();\n      },\n      evaluateBoolean: function (options) {\n        return this.evaluate(options).booleanValue();\n      },\n      evaluateNodeSet: function (options) {\n        return this.evaluate(options).nodeset();\n      },\n      select: function (options) {\n        return this.evaluateNodeSet(options).toArray();\n      },\n      select1: function (options) {\n        return this.select(options)[0];\n      }\n    };\n\n    function parse(xpath) {\n      var parsed = parser.parse(xpath);\n      return Object.create(evaluatorPrototype, {\n        expression: {\n          value: parsed\n        }\n      });\n    }\n\n    exports.parse = parse;\n  })();\n\n  assign(exports, {\n    XPath,\n    XPathParser,\n    XPathResult,\n    Step,\n    PathExpr,\n    NodeTest,\n    LocationPath,\n    OrOperation,\n    AndOperation,\n    BarOperation,\n    EqualsOperation,\n    NotEqualOperation,\n    LessThanOperation,\n    GreaterThanOperation,\n    LessThanOrEqualOperation,\n    GreaterThanOrEqualOperation,\n    PlusOperation,\n    MinusOperation,\n    MultiplyOperation,\n    DivOperation,\n    ModOperation,\n    UnaryMinusOperation,\n    FunctionCall,\n    VariableReference,\n    XPathContext,\n    XNodeSet,\n    XBoolean,\n    XString,\n    XNumber,\n    NamespaceResolver,\n    FunctionResolver,\n    VariableResolver,\n    Utilities\n  }); // helper\n\n  exports.select = function (e, doc, single) {\n    return exports.selectWithResolver(e, doc, null, single);\n  };\n\n  exports.useNamespaces = function (mappings) {\n    var resolver = {\n      mappings: mappings || {},\n      lookupNamespaceURI: function (prefix) {\n        return this.mappings[prefix];\n      }\n    };\n    return function (e, doc, single) {\n      return exports.selectWithResolver(e, doc, resolver, single);\n    };\n  };\n\n  exports.selectWithResolver = function (e, doc, resolver, single) {\n    var expression = new XPathExpression(e, resolver, new XPathParser());\n    var type = XPathResult.ANY_TYPE;\n    var result = expression.evaluate(doc, type, null);\n\n    if (result.resultType == XPathResult.STRING_TYPE) {\n      result = result.stringValue;\n    } else if (result.resultType == XPathResult.NUMBER_TYPE) {\n      result = result.numberValue;\n    } else if (result.resultType == XPathResult.BOOLEAN_TYPE) {\n      result = result.booleanValue;\n    } else {\n      result = result.nodes;\n\n      if (single) {\n        result = result[0];\n      }\n    }\n\n    return result;\n  };\n\n  exports.select1 = function (e, doc) {\n    return exports.select(e, doc, true);\n  }; // end non-node wrapper\n\n})(xpath);","map":{"version":3,"names":["xpath","exports","curry","func","slice","Array","prototype","totalargs","length","partial","args","fn","apply","concat","call","arguments","forEach","f","xs","i","reduce","seed","acc","x","map","mapped","filter","filtered","push","includes","values","value","always","toString","join","s","wrap","pref","suf","str","prototypeConcat","MAX_ARGUMENT_LENGTH","flatten","arr","result","start","chunk","assign","target","varArgs","to","Object","index","nextSource","nextKey","hasOwnProperty","XPathParser","constructor","superclass","init","reduceActions","rhs","OrOperation","AndOperation","EqualsOperation","NotEqualOperation","LessThanOperation","GreaterThanOperation","LessThanOrEqualOperation","GreaterThanOrEqualOperation","PlusOperation","MinusOperation","MultiplyOperation","DivOperation","ModOperation","UnaryMinusOperation","BarOperation","PathExpr","undefined","locationPath","steps","unshift","Step","DESCENDANTORSELF","NodeTest","nodeTest","Utilities","instance_of","filterPredicates","XString","XNumber","FunctionCall","LocationPath","absolute","CHILD","ANCESTOR","ANCESTORORSELF","ATTRIBUTE","DESCENDANT","FOLLOWING","FOLLOWINGSIBLING","NAMESPACE","PARENT","PRECEDING","PRECEDINGSIBLING","SELF","commentTest","textTest","anyPiTest","PITest","VariableReference","nameTestAny","NameTestPrefixAny","split","NameTestQName","actionTable","actionTableNumber","gotoTable","productions","DOUBLEDOT","DOUBLECOLON","DOUBLESLASH","NOTEQUAL","LESSTHANOREQUAL","GREATERTHANOREQUAL","AND","OR","MOD","DIV","MULTIPLYOPERATOR","FUNCTIONNAME","AXISNAME","LITERAL","NUMBER","ASTERISKNAMETEST","QNAME","NCNAMECOLONASTERISK","NODETYPE","PROCESSINGINSTRUCTIONWITHLITERAL","EQUALS","LESSTHAN","GREATERTHAN","PLUS","MINUS","BAR","SLASH","LEFTPARENTHESIS","RIGHTPARENTHESIS","COMMA","AT","LEFTBRACKET","RIGHTBRACKET","DOT","DOLLAR","tokenize","s1","types","pos","c","charAt","number","delimiter","literal","XPathException","fromMessage","last","isLetter","charCodeAt","name","isNCNameChar","Error","SHIFT","REDUCE","ACCEPT","parse","res","tokenPos","state","tokenType","tokenValue","a","t","num","pop","s_","XPath","e","expression","setIfUnset","obj","prop","evaluate","contextNode","expressionContextNode","contextSize","contextPosition","isHtml","XML_NAMESPACE_URI","XMLNS_NAMESPACE_URI","Expression","UnaryOperation","negate","BinaryOperation","lhs","b","bool","booleanValue","equals","notequal","lessthan","greaterthan","lessthanorequal","greaterthanorequal","plus","minus","multiply","div","mod","nodeset","union","filterPreds","locpath","findRoot","node","parentNode","applyPredicates","predicates","nodes","ctx","extend","inNodes","pred","predicateMatches","getRoot","xpc","firstNode","nodeType","virtualRoot","ownerDoc","ownerDocument","n","applyStep","step","self","newNodes","axis","m","getOwnerElement","matches","nnm","attributes","k","item","firstChild","nextSibling","st","attr","nm","String","substring","pre","nsn","XPathNamespace","outer","previousSibling","applyStepWithPredicates","applyStepToNodes","context","bind","applySteps","applyFilter","ns","XNodeSet","nonNodes","toUnsortedArray","applyLocationPath","startNodes","XPathContext","filterResult","addArray","numberValue","predicateString","predicate","predicatesString","filterStr","ownerElement","selectSingleNode","doc","elts","getElementsByTagName","elt","j","an","abs","nodetest","preds","STEPNAMES","type","console","warn","NAMETESTANY","NAMETESTPREFIXANY","NAMETESTQNAME","COMMENT","TEXT","PI","NODE","isNodeType","makeNodeTestType","members","ctor","newType","makeNodeTypeTest","nodeTypes","stringVal","hasPrefix","prefix","nodeName","tagName","indexOf","isElementOrAttribute","nameSpaceMatches","nNamespace","namespaceURI","allowAnyNamespaceForNoPrefix","namespaceResolver","getNamespace","localNameMatches","localName","nLocalName","caseInsensitive","toLowerCase","XPATH_NAMESPACE_NODE","nameParts","v","variable","parts","resolveQName","variableResolver","getVariable","functionName","FunctionResolver","getFunctionFromContext","functionResolver","thisArg","Operators","l","r","string","XBoolean","stringValue","compareWithString","Number","numberFormat","test","parseFloat","NaN","padSmallNumber","numberStr","base","replace","exponent","padLargeNumber","zerosToAppend","strValue","compareWithNumber","Boolean","not","compareWithBoolean","true_","false_","AVLTree","left","right","depth","balance","ldepth","rdepth","lldepth","lrdepth","rotateRR","rotateLL","rrdepth","rldepth","nodeBefore","rightBefore","updateInNewLocation","leftBefore","getDepthFromChildren","nodeOrder","n1","n2","compareDocumentPosition","cpos","d1","d2","m1","m2","n1Par","n2Par","n1isAttr","isAttribute","n2isAttr","cn","childNodes","len","add","o","ret","tree","size","p","first","stringForNode","stringForContainerNode","nodeValue","isNamespaceNode","namespace","nt","buildTree","toArray","toArrayRec","compareWithNodeSet","oInvert","lop","rop","compareWith","isXPathNamespace","vr","nr","fr","VariableResolver","NamespaceResolver","newProps","ln","Functions","functions","addStandardFunctions","position","count","id","startsWith","contains","substringBefore","substringAfter","stringLength","normalizeSpace","translate","boolean_","lang","sum","floor","ceiling","round","addFunction","qName","getFunction","documentElement","aname","ids","getElementById","eNode","baseName","s2","Math","isSpace","eValue","eFrom","eTo","from","cMap","ch","getAttributeNS","ceil","val","splitQName","qn","useDefault","coalesceText","del","removeChild","appendChild","createTextNode","next","insertBefore","getAttribute","getMessage","code","exception","msg","INVALID_EXPRESSION_ERR","TYPE_ERR","error","message","err","create","XPathExpression","XPathNSResolverWrapper","getOwnerDocument","detectHtmlDom","implementation","hasFeature","XPathResult","xpathNSResolver","lookupNamespaceURI","NodeXPathNSResolver","ANY_TYPE","STRING_TYPE","NUMBER_TYPE","BOOLEAN_TYPE","UNORDERED_NODE_ITERATOR_TYPE","resultType","ANY_UNORDERED_NODE_TYPE","FIRST_ORDERED_NODE_TYPE","singleNodeValue","ORDERED_NODE_ITERATOR_TYPE","invalidIteratorState","iteratorIndex","UNORDERED_NODE_SNAPSHOT_TYPE","ORDERED_NODE_SNAPSHOT_TYPE","snapshotLength","iterateNext","snapshotItem","installDOM3XPathSupport","createExpression","createNSResolver","shouldInstall","document","parser","defaultNSResolver","defaultFunctionResolver","defaultVariableResolver","makeNSResolverFromFunction","makeNSResolverFromObject","makeNSResolverFromMap","makeNSResolver","resolver","convertValue","makeEvaluator","arg","makeFunctionResolverFromFunction","found","makeFunctionResolverFromObject","makeFunctionResolverFromMap","makeFunctionResolver","makeVariableResolverFromFunction","makeVariableResolver","copyIfPresent","dest","source","makeContext","options","namespaces","variables","parsedExpression","evaluatorPrototype","evaluateNumber","evaluateString","evaluateBoolean","evaluateNodeSet","select","select1","parsed","single","selectWithResolver","useNamespaces","mappings"],"sources":["C:/Users/ayber/node_modules/xpath/xpath.js"],"sourcesContent":["/*\r\n * xpath.js\r\n *\r\n * An XPath 1.0 library for JavaScript.\r\n *\r\n * Cameron McCormack <cam (at) mcc.id.au>\r\n *\r\n * This work is licensed under the MIT License.\r\n *\r\n * Revision 20: April 26, 2011\r\n *   Fixed a typo resulting in FIRST_ORDERED_NODE_TYPE results being wrong,\r\n *   thanks to <shi_a009 (at) hotmail.com>.\r\n *\r\n * Revision 19: November 29, 2005\r\n *   Nodesets now store their nodes in a height balanced tree, increasing\r\n *   performance for the common case of selecting nodes in document order,\r\n *   thanks to Sébastien Cramatte <contact (at) zeninteractif.com>.\r\n *   AVL tree code adapted from Raimund Neumann <rnova (at) gmx.net>.\r\n *\r\n * Revision 18: October 27, 2005\r\n *   DOM 3 XPath support.  Caveats:\r\n *     - namespace prefixes aren't resolved in XPathEvaluator.createExpression,\r\n *       but in XPathExpression.evaluate.\r\n *     - XPathResult.invalidIteratorState is not implemented.\r\n *\r\n * Revision 17: October 25, 2005\r\n *   Some core XPath function fixes and a patch to avoid crashing certain\r\n *   versions of MSXML in PathExpr.prototype.getOwnerElement, thanks to\r\n *   Sébastien Cramatte <contact (at) zeninteractif.com>.\r\n *\r\n * Revision 16: September 22, 2005\r\n *   Workarounds for some IE 5.5 deficiencies.\r\n *   Fixed problem with prefix node tests on attribute nodes.\r\n *\r\n * Revision 15: May 21, 2005\r\n *   Fixed problem with QName node tests on elements with an xmlns=\"...\".\r\n *\r\n * Revision 14: May 19, 2005\r\n *   Fixed QName node tests on attribute node regression.\r\n *\r\n * Revision 13: May 3, 2005\r\n *   Node tests are case insensitive now if working in an HTML DOM.\r\n *\r\n * Revision 12: April 26, 2005\r\n *   Updated licence.  Slight code changes to enable use of Dean\r\n *   Edwards' script compression, http://dean.edwards.name/packer/ .\r\n *\r\n * Revision 11: April 23, 2005\r\n *   Fixed bug with 'and' and 'or' operators, fix thanks to\r\n *   Sandy McArthur <sandy (at) mcarthur.org>.\r\n *\r\n * Revision 10: April 15, 2005\r\n *   Added support for a virtual root node, supposedly helpful for\r\n *   implementing XForms.  Fixed problem with QName node tests and\r\n *   the parent axis.\r\n *\r\n * Revision 9: March 17, 2005\r\n *   Namespace resolver tweaked so using the document node as the context\r\n *   for namespace lookups is equivalent to using the document element.\r\n *\r\n * Revision 8: February 13, 2005\r\n *   Handle implicit declaration of 'xmlns' namespace prefix.\r\n *   Fixed bug when comparing nodesets.\r\n *   Instance data can now be associated with a FunctionResolver, and\r\n *     workaround for MSXML not supporting 'localName' and 'getElementById',\r\n *     thanks to Grant Gongaware.\r\n *   Fix a few problems when the context node is the root node.\r\n *\r\n * Revision 7: February 11, 2005\r\n *   Default namespace resolver fix from Grant Gongaware\r\n *   <grant (at) gongaware.com>.\r\n *\r\n * Revision 6: February 10, 2005\r\n *   Fixed bug in 'number' function.\r\n *\r\n * Revision 5: February 9, 2005\r\n *   Fixed bug where text nodes not getting converted to string values.\r\n *\r\n * Revision 4: January 21, 2005\r\n *   Bug in 'name' function, fix thanks to Bill Edney.\r\n *   Fixed incorrect processing of namespace nodes.\r\n *   Fixed NamespaceResolver to resolve 'xml' namespace.\r\n *   Implemented union '|' operator.\r\n *\r\n * Revision 3: January 14, 2005\r\n *   Fixed bug with nodeset comparisons, bug lexing < and >.\r\n *\r\n * Revision 2: October 26, 2004\r\n *   QName node test namespace handling fixed.  Few other bug fixes.\r\n *\r\n * Revision 1: August 13, 2004\r\n *   Bug fixes from William J. Edney <bedney (at) technicalpursuit.com>.\r\n *   Added minimal licence.\r\n *\r\n * Initial version: June 14, 2004\r\n */\r\n\r\n// non-node wrapper\r\nvar xpath = (typeof exports === 'undefined') ? {} : exports;\r\n\r\n(function (exports) {\r\n    \"use strict\";\r\n\r\n    // functional helpers\r\n    function curry(func) {\r\n        var slice = Array.prototype.slice,\r\n            totalargs = func.length,\r\n            partial = function (args, fn) {\r\n                return function () {\r\n                    return fn.apply(this, args.concat(slice.call(arguments)));\r\n                }\r\n            },\r\n            fn = function () {\r\n                var args = slice.call(arguments);\r\n                return (args.length < totalargs) ?\r\n                    partial(args, fn) :\r\n                    func.apply(this, slice.apply(arguments, [0, totalargs]));\r\n            };\r\n        return fn;\r\n    }\r\n\r\n    var forEach = function (f, xs) {\r\n        for (var i = 0; i < xs.length; i += 1) {\r\n            f(xs[i], i, xs);\r\n        }\r\n    };\r\n\r\n    var reduce = function (f, seed, xs) {\r\n        var acc = seed;\r\n\r\n        forEach(function (x, i) { acc = f(acc, x, i); }, xs);\r\n\r\n        return acc;\r\n    };\r\n\r\n    var map = function (f, xs) {\r\n        var mapped = new Array(xs.length);\r\n\r\n        forEach(function (x, i) { mapped[i] = f(x); }, xs);\r\n\r\n        return mapped;\r\n    };\r\n\r\n    var filter = function (f, xs) {\r\n        var filtered = [];\r\n\r\n        forEach(function (x, i) { if (f(x, i)) { filtered.push(x); } }, xs);\r\n\r\n        return filtered;\r\n    };\r\n\r\n    var includes = function (values, value) {\r\n        for (var i = 0; i < values.length; i += 1) {\r\n            if (values[i] === value) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    function always(value) { return function () { return value; } }\r\n\r\n    function toString(x) { return x.toString(); }\r\n    var join = function (s, xs) { return xs.join(s); };\r\n    var wrap = function (pref, suf, str) { return pref + str + suf; };\r\n\r\n    var prototypeConcat = Array.prototype.concat;\r\n\r\n    // .apply() fails above a certain number of arguments - https://github.com/goto100/xpath/pull/98\r\n    var MAX_ARGUMENT_LENGTH = 32767;\r\n\r\n    function flatten(arr) {\r\n        var result = [];\r\n\r\n        for (var start = 0; start < arr.length; start += MAX_ARGUMENT_LENGTH) {\r\n            var chunk = arr.slice(start, start + MAX_ARGUMENT_LENGTH);\r\n            \r\n            result = prototypeConcat.apply(result, chunk);\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n    function assign(target, varArgs) { // .length of function is 2\r\n        var to = Object(target);\r\n\r\n        for (var index = 1; index < arguments.length; index++) {\r\n            var nextSource = arguments[index];\r\n\r\n            if (nextSource != null) { // Skip over if undefined or null\r\n                for (var nextKey in nextSource) {\r\n                    // Avoid bugs when hasOwnProperty is shadowed\r\n                    if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\r\n                        to[nextKey] = nextSource[nextKey];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return to;\r\n    }\r\n\r\n    // XPathParser ///////////////////////////////////////////////////////////////\r\n\r\n    XPathParser.prototype = new Object();\r\n    XPathParser.prototype.constructor = XPathParser;\r\n    XPathParser.superclass = Object.prototype;\r\n\r\n    function XPathParser() {\r\n        this.init();\r\n    }\r\n\r\n    XPathParser.prototype.init = function () {\r\n        this.reduceActions = [];\r\n\r\n        this.reduceActions[3] = function (rhs) {\r\n            return new OrOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[5] = function (rhs) {\r\n            return new AndOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[7] = function (rhs) {\r\n            return new EqualsOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[8] = function (rhs) {\r\n            return new NotEqualOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[10] = function (rhs) {\r\n            return new LessThanOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[11] = function (rhs) {\r\n            return new GreaterThanOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[12] = function (rhs) {\r\n            return new LessThanOrEqualOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[13] = function (rhs) {\r\n            return new GreaterThanOrEqualOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[15] = function (rhs) {\r\n            return new PlusOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[16] = function (rhs) {\r\n            return new MinusOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[18] = function (rhs) {\r\n            return new MultiplyOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[19] = function (rhs) {\r\n            return new DivOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[20] = function (rhs) {\r\n            return new ModOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[22] = function (rhs) {\r\n            return new UnaryMinusOperation(rhs[1]);\r\n        };\r\n        this.reduceActions[24] = function (rhs) {\r\n            return new BarOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[25] = function (rhs) {\r\n            return new PathExpr(undefined, undefined, rhs[0]);\r\n        };\r\n        this.reduceActions[27] = function (rhs) {\r\n            rhs[0].locationPath = rhs[2];\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[28] = function (rhs) {\r\n            rhs[0].locationPath = rhs[2];\r\n            rhs[0].locationPath.steps.unshift(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[29] = function (rhs) {\r\n            return new PathExpr(rhs[0], [], undefined);\r\n        };\r\n        this.reduceActions[30] = function (rhs) {\r\n            if (Utilities.instance_of(rhs[0], PathExpr)) {\r\n                if (rhs[0].filterPredicates == undefined) {\r\n                    rhs[0].filterPredicates = [];\r\n                }\r\n                rhs[0].filterPredicates.push(rhs[1]);\r\n                return rhs[0];\r\n            } else {\r\n                return new PathExpr(rhs[0], [rhs[1]], undefined);\r\n            }\r\n        };\r\n        this.reduceActions[32] = function (rhs) {\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[33] = function (rhs) {\r\n            return new XString(rhs[0]);\r\n        };\r\n        this.reduceActions[34] = function (rhs) {\r\n            return new XNumber(rhs[0]);\r\n        };\r\n        this.reduceActions[36] = function (rhs) {\r\n            return new FunctionCall(rhs[0], []);\r\n        };\r\n        this.reduceActions[37] = function (rhs) {\r\n            return new FunctionCall(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[38] = function (rhs) {\r\n            return [rhs[0]];\r\n        };\r\n        this.reduceActions[39] = function (rhs) {\r\n            rhs[2].unshift(rhs[0]);\r\n            return rhs[2];\r\n        };\r\n        this.reduceActions[43] = function (rhs) {\r\n            return new LocationPath(true, []);\r\n        };\r\n        this.reduceActions[44] = function (rhs) {\r\n            rhs[1].absolute = true;\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[46] = function (rhs) {\r\n            return new LocationPath(false, [rhs[0]]);\r\n        };\r\n        this.reduceActions[47] = function (rhs) {\r\n            rhs[0].steps.push(rhs[2]);\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[49] = function (rhs) {\r\n            return new Step(rhs[0], rhs[1], []);\r\n        };\r\n        this.reduceActions[50] = function (rhs) {\r\n            return new Step(Step.CHILD, rhs[0], []);\r\n        };\r\n        this.reduceActions[51] = function (rhs) {\r\n            return new Step(rhs[0], rhs[1], rhs[2]);\r\n        };\r\n        this.reduceActions[52] = function (rhs) {\r\n            return new Step(Step.CHILD, rhs[0], rhs[1]);\r\n        };\r\n        this.reduceActions[54] = function (rhs) {\r\n            return [rhs[0]];\r\n        };\r\n        this.reduceActions[55] = function (rhs) {\r\n            rhs[1].unshift(rhs[0]);\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[56] = function (rhs) {\r\n            if (rhs[0] == \"ancestor\") {\r\n                return Step.ANCESTOR;\r\n            } else if (rhs[0] == \"ancestor-or-self\") {\r\n                return Step.ANCESTORORSELF;\r\n            } else if (rhs[0] == \"attribute\") {\r\n                return Step.ATTRIBUTE;\r\n            } else if (rhs[0] == \"child\") {\r\n                return Step.CHILD;\r\n            } else if (rhs[0] == \"descendant\") {\r\n                return Step.DESCENDANT;\r\n            } else if (rhs[0] == \"descendant-or-self\") {\r\n                return Step.DESCENDANTORSELF;\r\n            } else if (rhs[0] == \"following\") {\r\n                return Step.FOLLOWING;\r\n            } else if (rhs[0] == \"following-sibling\") {\r\n                return Step.FOLLOWINGSIBLING;\r\n            } else if (rhs[0] == \"namespace\") {\r\n                return Step.NAMESPACE;\r\n            } else if (rhs[0] == \"parent\") {\r\n                return Step.PARENT;\r\n            } else if (rhs[0] == \"preceding\") {\r\n                return Step.PRECEDING;\r\n            } else if (rhs[0] == \"preceding-sibling\") {\r\n                return Step.PRECEDINGSIBLING;\r\n            } else if (rhs[0] == \"self\") {\r\n                return Step.SELF;\r\n            }\r\n            return -1;\r\n        };\r\n        this.reduceActions[57] = function (rhs) {\r\n            return Step.ATTRIBUTE;\r\n        };\r\n        this.reduceActions[59] = function (rhs) {\r\n            if (rhs[0] == \"comment\") {\r\n                return NodeTest.commentTest;\r\n            } else if (rhs[0] == \"text\") {\r\n                return NodeTest.textTest;\r\n            } else if (rhs[0] == \"processing-instruction\") {\r\n                return NodeTest.anyPiTest;\r\n            } else if (rhs[0] == \"node\") {\r\n                return NodeTest.nodeTest;\r\n            }\r\n            return new NodeTest(-1, undefined);\r\n        };\r\n        this.reduceActions[60] = function (rhs) {\r\n            return new NodeTest.PITest(rhs[2]);\r\n        };\r\n        this.reduceActions[61] = function (rhs) {\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[63] = function (rhs) {\r\n            rhs[1].absolute = true;\r\n            rhs[1].steps.unshift(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[64] = function (rhs) {\r\n            rhs[0].steps.push(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\r\n            rhs[0].steps.push(rhs[2]);\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[65] = function (rhs) {\r\n            return new Step(Step.SELF, NodeTest.nodeTest, []);\r\n        };\r\n        this.reduceActions[66] = function (rhs) {\r\n            return new Step(Step.PARENT, NodeTest.nodeTest, []);\r\n        };\r\n        this.reduceActions[67] = function (rhs) {\r\n            return new VariableReference(rhs[1]);\r\n        };\r\n        this.reduceActions[68] = function (rhs) {\r\n            return NodeTest.nameTestAny;\r\n        };\r\n        this.reduceActions[69] = function (rhs) {\r\n            return new NodeTest.NameTestPrefixAny(rhs[0].split(':')[0]);\r\n        };\r\n        this.reduceActions[70] = function (rhs) {\r\n            return new NodeTest.NameTestQName(rhs[0]);\r\n        };\r\n    };\r\n\r\n    XPathParser.actionTable = [\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"                 s                  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"                rrrrr               \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"rs  rrrrrrrr s  sssssrrrrrr  rrs rs \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"                            s       \",\r\n        \"                            s       \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"  s                                 \",\r\n        \"                            s       \",\r\n        \" s           s  sssss          s  s \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"a                                   \",\r\n        \"r       s                    rr  r  \",\r\n        \"r      sr                    rr  r  \",\r\n        \"r   s  rr            s       rr  r  \",\r\n        \"r   rssrr            rss     rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrrsss         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrs  rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr sr  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"                sssss               \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr sr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             s      \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"              s                     \",\r\n        \"                             s      \",\r\n        \"                rrrrr               \",\r\n        \" s s        sssssssss    s sss s  ss\",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss      ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s           s  sssss          s  s \",\r\n        \" s           s  sssss          s  s \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \" s           s  sssss          s  s \",\r\n        \" s           s  sssss          s  s \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr sr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr sr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             s      \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             rr     \",\r\n        \"                             s      \",\r\n        \"                             rs     \",\r\n        \"r      sr                    rr  r  \",\r\n        \"r   s  rr            s       rr  r  \",\r\n        \"r   rssrr            rss     rr  r  \",\r\n        \"r   rssrr            rss     rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrrsss         rrrrr   rr  r  \",\r\n        \"r   rrrrrsss         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"                                 r  \",\r\n        \"                                 s  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             r      \"\r\n    ];\r\n\r\n    XPathParser.actionTableNumber = [\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"                 J                  \",\r\n        \"a  aaaaaaaaa         aaaaaaa aa  a  \",\r\n        \"                YYYYY               \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"K1  KKKKKKKK .  +*)('KKKKKK  KK# K\\\" \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"                            N       \",\r\n        \"                            O       \",\r\n        \"e  eeeeeeeee         eeeeeee ee ee  \",\r\n        \"f  fffffffff         fffffff ff ff  \",\r\n        \"d  ddddddddd         ddddddd dd dd  \",\r\n        \"B  BBBBBBBBB         BBBBBBB BB BB  \",\r\n        \"A  AAAAAAAAA         AAAAAAA AA AA  \",\r\n        \"  P                                 \",\r\n        \"                            Q       \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \"b  bbbbbbbbb         bbbbbbb bb  b  \",\r\n        \"                                    \",\r\n        \"!       S                    !!  !  \",\r\n        \"\\\"      T\\\"                    \\\"\\\"  \\\"  \",\r\n        \"$   V  $$            U       $$  $  \",\r\n        \"&   &ZY&&            &XW     &&  &  \",\r\n        \")   )))))            )))\\\\[   ))  )  \",\r\n        \".   ....._^]         .....   ..  .  \",\r\n        \"1   11111111         11111   11  1  \",\r\n        \"5   55555555         55555`  55  5  \",\r\n        \"7   77777777         777777  77  7  \",\r\n        \"9   99999999         999999  99  9  \",\r\n        \":  c::::::::         ::::::b :: a:  \",\r\n        \"I  fIIIIIIII         IIIIIIe II  I  \",\r\n        \"=  =========         ======= == ==  \",\r\n        \"?  ?????????         ??????? ?? ??  \",\r\n        \"C  CCCCCCCCC         CCCCCCC CC CC  \",\r\n        \"J   JJJJJJJJ         JJJJJJ  JJ  J  \",\r\n        \"M   MMMMMMMM         MMMMMM  MM  M  \",\r\n        \"N  NNNNNNNNN         NNNNNNN NN  N  \",\r\n        \"P  PPPPPPPPP         PPPPPPP PP  P  \",\r\n        \"                +*)('               \",\r\n        \"R  RRRRRRRRR         RRRRRRR RR aR  \",\r\n        \"U  UUUUUUUUU         UUUUUUU UU  U  \",\r\n        \"Z  ZZZZZZZZZ         ZZZZZZZ ZZ ZZ  \",\r\n        \"c  ccccccccc         ccccccc cc cc  \",\r\n        \"                             j      \",\r\n        \"L  fLLLLLLLL         LLLLLLe LL  L  \",\r\n        \"6   66666666         66666   66  6  \",\r\n        \"              k                     \",\r\n        \"                             l      \",\r\n        \"                XXXXX               \",\r\n        \" 1 0        /.-,+*)('    & %$m #  \\\"!\",\r\n        \"_  f________         ______e __  _  \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('      %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \">  >>>>>>>>>         >>>>>>> >> >>  \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \"Q  QQQQQQQQQ         QQQQQQQ QQ aQ  \",\r\n        \"V  VVVVVVVVV         VVVVVVV VV aV  \",\r\n        \"T  TTTTTTTTT         TTTTTTT TT  T  \",\r\n        \"@  @@@@@@@@@         @@@@@@@ @@ @@  \",\r\n        \"                             \\x87      \",\r\n        \"[  [[[[[[[[[         [[[[[[[ [[ [[  \",\r\n        \"D  DDDDDDDDD         DDDDDDD DD DD  \",\r\n        \"                             HH     \",\r\n        \"                             \\x88      \",\r\n        \"                             F\\x89     \",\r\n        \"#      T#                    ##  #  \",\r\n        \"%   V  %%            U       %%  %  \",\r\n        \"'   'ZY''            'XW     ''  '  \",\r\n        \"(   (ZY((            (XW     ((  (  \",\r\n        \"+   +++++            +++\\\\[   ++  +  \",\r\n        \"*   *****            ***\\\\[   **  *  \",\r\n        \"-   -----            ---\\\\[   --  -  \",\r\n        \",   ,,,,,            ,,,\\\\[   ,,  ,  \",\r\n        \"0   00000_^]         00000   00  0  \",\r\n        \"/   /////_^]         /////   //  /  \",\r\n        \"2   22222222         22222   22  2  \",\r\n        \"3   33333333         33333   33  3  \",\r\n        \"4   44444444         44444   44  4  \",\r\n        \"8   88888888         888888  88  8  \",\r\n        \"                                 ^  \",\r\n        \"                                 \\x8a  \",\r\n        \";  f;;;;;;;;         ;;;;;;e ;;  ;  \",\r\n        \"<  f<<<<<<<<         <<<<<<e <<  <  \",\r\n        \"O  OOOOOOOOO         OOOOOOO OO  O  \",\r\n        \"`  `````````         ``````` ``  `  \",\r\n        \"S  SSSSSSSSS         SSSSSSS SS  S  \",\r\n        \"W  WWWWWWWWW         WWWWWWW WW  W  \",\r\n        \"\\\\  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\         \\\\\\\\\\\\\\\\\\\\\\\\\\\\ \\\\\\\\ \\\\\\\\  \",\r\n        \"E  EEEEEEEEE         EEEEEEE EE EE  \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"]  ]]]]]]]]]         ]]]]]]] ]] ]]  \",\r\n        \"                             G      \"\r\n    ];\r\n\r\n    XPathParser.gotoTable = [\r\n        \"3456789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"L456789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"            M        EFGH IJ \",\r\n        \"       N;<=>?@ AB  CDEFGH IJ \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"            S        EFGH IJ \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"              e              \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                        h  J \",\r\n        \"              i          j   \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"o456789:;<=>?@ ABpqCDEFGH IJ \",\r\n        \"                             \",\r\n        \"  r6789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"   s789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"    t89:;<=>?@ AB  CDEFGH IJ \",\r\n        \"    u89:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     v9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     w9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     x9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     y9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"      z:;<=>?@ AB  CDEFGH IJ \",\r\n        \"      {:;<=>?@ AB  CDEFGH IJ \",\r\n        \"       |;<=>?@ AB  CDEFGH IJ \",\r\n        \"       };<=>?@ AB  CDEFGH IJ \",\r\n        \"       ~;<=>?@ AB  CDEFGH IJ \",\r\n        \"         \\x7f=>?@ AB  CDEFGH IJ \",\r\n        \"\\x80456789:;<=>?@ AB  CDEFGH IJ\\x81\",\r\n        \"            \\x82        EFGH IJ \",\r\n        \"            \\x83        EFGH IJ \",\r\n        \"                             \",\r\n        \"                     \\x84 GH IJ \",\r\n        \"                     \\x85 GH IJ \",\r\n        \"              i          \\x86   \",\r\n        \"              i          \\x87   \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"o456789:;<=>?@ AB\\x8cqCDEFGH IJ \",\r\n        \"                             \",\r\n        \"                             \"\r\n    ];\r\n\r\n    XPathParser.productions = [\r\n        [1, 1, 2],\r\n        [2, 1, 3],\r\n        [3, 1, 4],\r\n        [3, 3, 3, -9, 4],\r\n        [4, 1, 5],\r\n        [4, 3, 4, -8, 5],\r\n        [5, 1, 6],\r\n        [5, 3, 5, -22, 6],\r\n        [5, 3, 5, -5, 6],\r\n        [6, 1, 7],\r\n        [6, 3, 6, -23, 7],\r\n        [6, 3, 6, -24, 7],\r\n        [6, 3, 6, -6, 7],\r\n        [6, 3, 6, -7, 7],\r\n        [7, 1, 8],\r\n        [7, 3, 7, -25, 8],\r\n        [7, 3, 7, -26, 8],\r\n        [8, 1, 9],\r\n        [8, 3, 8, -12, 9],\r\n        [8, 3, 8, -11, 9],\r\n        [8, 3, 8, -10, 9],\r\n        [9, 1, 10],\r\n        [9, 2, -26, 9],\r\n        [10, 1, 11],\r\n        [10, 3, 10, -27, 11],\r\n        [11, 1, 12],\r\n        [11, 1, 13],\r\n        [11, 3, 13, -28, 14],\r\n        [11, 3, 13, -4, 14],\r\n        [13, 1, 15],\r\n        [13, 2, 13, 16],\r\n        [15, 1, 17],\r\n        [15, 3, -29, 2, -30],\r\n        [15, 1, -15],\r\n        [15, 1, -16],\r\n        [15, 1, 18],\r\n        [18, 3, -13, -29, -30],\r\n        [18, 4, -13, -29, 19, -30],\r\n        [19, 1, 20],\r\n        [19, 3, 20, -31, 19],\r\n        [20, 1, 2],\r\n        [12, 1, 14],\r\n        [12, 1, 21],\r\n        [21, 1, -28],\r\n        [21, 2, -28, 14],\r\n        [21, 1, 22],\r\n        [14, 1, 23],\r\n        [14, 3, 14, -28, 23],\r\n        [14, 1, 24],\r\n        [23, 2, 25, 26],\r\n        [23, 1, 26],\r\n        [23, 3, 25, 26, 27],\r\n        [23, 2, 26, 27],\r\n        [23, 1, 28],\r\n        [27, 1, 16],\r\n        [27, 2, 16, 27],\r\n        [25, 2, -14, -3],\r\n        [25, 1, -32],\r\n        [26, 1, 29],\r\n        [26, 3, -20, -29, -30],\r\n        [26, 4, -21, -29, -15, -30],\r\n        [16, 3, -33, 30, -34],\r\n        [30, 1, 2],\r\n        [22, 2, -4, 14],\r\n        [24, 3, 14, -4, 23],\r\n        [28, 1, -35],\r\n        [28, 1, -2],\r\n        [17, 2, -36, -18],\r\n        [29, 1, -17],\r\n        [29, 1, -19],\r\n        [29, 1, -18]\r\n    ];\r\n\r\n    XPathParser.DOUBLEDOT = 2;\r\n    XPathParser.DOUBLECOLON = 3;\r\n    XPathParser.DOUBLESLASH = 4;\r\n    XPathParser.NOTEQUAL = 5;\r\n    XPathParser.LESSTHANOREQUAL = 6;\r\n    XPathParser.GREATERTHANOREQUAL = 7;\r\n    XPathParser.AND = 8;\r\n    XPathParser.OR = 9;\r\n    XPathParser.MOD = 10;\r\n    XPathParser.DIV = 11;\r\n    XPathParser.MULTIPLYOPERATOR = 12;\r\n    XPathParser.FUNCTIONNAME = 13;\r\n    XPathParser.AXISNAME = 14;\r\n    XPathParser.LITERAL = 15;\r\n    XPathParser.NUMBER = 16;\r\n    XPathParser.ASTERISKNAMETEST = 17;\r\n    XPathParser.QNAME = 18;\r\n    XPathParser.NCNAMECOLONASTERISK = 19;\r\n    XPathParser.NODETYPE = 20;\r\n    XPathParser.PROCESSINGINSTRUCTIONWITHLITERAL = 21;\r\n    XPathParser.EQUALS = 22;\r\n    XPathParser.LESSTHAN = 23;\r\n    XPathParser.GREATERTHAN = 24;\r\n    XPathParser.PLUS = 25;\r\n    XPathParser.MINUS = 26;\r\n    XPathParser.BAR = 27;\r\n    XPathParser.SLASH = 28;\r\n    XPathParser.LEFTPARENTHESIS = 29;\r\n    XPathParser.RIGHTPARENTHESIS = 30;\r\n    XPathParser.COMMA = 31;\r\n    XPathParser.AT = 32;\r\n    XPathParser.LEFTBRACKET = 33;\r\n    XPathParser.RIGHTBRACKET = 34;\r\n    XPathParser.DOT = 35;\r\n    XPathParser.DOLLAR = 36;\r\n\r\n    XPathParser.prototype.tokenize = function (s1) {\r\n        var types = [];\r\n        var values = [];\r\n        var s = s1 + '\\0';\r\n\r\n        var pos = 0;\r\n        var c = s.charAt(pos++);\r\n        while (1) {\r\n            while (c == ' ' || c == '\\t' || c == '\\r' || c == '\\n') {\r\n                c = s.charAt(pos++);\r\n            }\r\n            if (c == '\\0' || pos >= s.length) {\r\n                break;\r\n            }\r\n\r\n            if (c == '(') {\r\n                types.push(XPathParser.LEFTPARENTHESIS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == ')') {\r\n                types.push(XPathParser.RIGHTPARENTHESIS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '[') {\r\n                types.push(XPathParser.LEFTBRACKET);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == ']') {\r\n                types.push(XPathParser.RIGHTBRACKET);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '@') {\r\n                types.push(XPathParser.AT);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == ',') {\r\n                types.push(XPathParser.COMMA);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '|') {\r\n                types.push(XPathParser.BAR);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '+') {\r\n                types.push(XPathParser.PLUS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '-') {\r\n                types.push(XPathParser.MINUS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '=') {\r\n                types.push(XPathParser.EQUALS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '$') {\r\n                types.push(XPathParser.DOLLAR);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == '.') {\r\n                c = s.charAt(pos++);\r\n                if (c == '.') {\r\n                    types.push(XPathParser.DOUBLEDOT);\r\n                    values.push(\"..\");\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                if (c >= '0' && c <= '9') {\r\n                    var number = \".\" + c;\r\n                    c = s.charAt(pos++);\r\n                    while (c >= '0' && c <= '9') {\r\n                        number += c;\r\n                        c = s.charAt(pos++);\r\n                    }\r\n                    types.push(XPathParser.NUMBER);\r\n                    values.push(number);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.DOT);\r\n                values.push('.');\r\n                continue;\r\n            }\r\n\r\n            if (c == '\\'' || c == '\"') {\r\n                var delimiter = c;\r\n                var literal = \"\";\r\n                while (pos < s.length && (c = s.charAt(pos)) !== delimiter) {\r\n                    literal += c;\r\n                    pos += 1;\r\n                }\r\n                if (c !== delimiter) {\r\n                    throw XPathException.fromMessage(\"Unterminated string literal: \" + delimiter + literal);\r\n                }\r\n                pos += 1;\r\n                types.push(XPathParser.LITERAL);\r\n                values.push(literal);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c >= '0' && c <= '9') {\r\n                var number = c;\r\n                c = s.charAt(pos++);\r\n                while (c >= '0' && c <= '9') {\r\n                    number += c;\r\n                    c = s.charAt(pos++);\r\n                }\r\n                if (c == '.') {\r\n                    if (s.charAt(pos) >= '0' && s.charAt(pos) <= '9') {\r\n                        number += c;\r\n                        number += s.charAt(pos++);\r\n                        c = s.charAt(pos++);\r\n                        while (c >= '0' && c <= '9') {\r\n                            number += c;\r\n                            c = s.charAt(pos++);\r\n                        }\r\n                    }\r\n                }\r\n                types.push(XPathParser.NUMBER);\r\n                values.push(number);\r\n                continue;\r\n            }\r\n\r\n            if (c == '*') {\r\n                if (types.length > 0) {\r\n                    var last = types[types.length - 1];\r\n                    if (last != XPathParser.AT\r\n                        && last != XPathParser.DOUBLECOLON\r\n                        && last != XPathParser.LEFTPARENTHESIS\r\n                        && last != XPathParser.LEFTBRACKET\r\n                        && last != XPathParser.AND\r\n                        && last != XPathParser.OR\r\n                        && last != XPathParser.MOD\r\n                        && last != XPathParser.DIV\r\n                        && last != XPathParser.MULTIPLYOPERATOR\r\n                        && last != XPathParser.SLASH\r\n                        && last != XPathParser.DOUBLESLASH\r\n                        && last != XPathParser.BAR\r\n                        && last != XPathParser.PLUS\r\n                        && last != XPathParser.MINUS\r\n                        && last != XPathParser.EQUALS\r\n                        && last != XPathParser.NOTEQUAL\r\n                        && last != XPathParser.LESSTHAN\r\n                        && last != XPathParser.LESSTHANOREQUAL\r\n                        && last != XPathParser.GREATERTHAN\r\n                        && last != XPathParser.GREATERTHANOREQUAL) {\r\n                        types.push(XPathParser.MULTIPLYOPERATOR);\r\n                        values.push(c);\r\n                        c = s.charAt(pos++);\r\n                        continue;\r\n                    }\r\n                }\r\n                types.push(XPathParser.ASTERISKNAMETEST);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == ':') {\r\n                if (s.charAt(pos) == ':') {\r\n                    types.push(XPathParser.DOUBLECOLON);\r\n                    values.push(\"::\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (c == '/') {\r\n                c = s.charAt(pos++);\r\n                if (c == '/') {\r\n                    types.push(XPathParser.DOUBLESLASH);\r\n                    values.push(\"//\");\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.SLASH);\r\n                values.push('/');\r\n                continue;\r\n            }\r\n\r\n            if (c == '!') {\r\n                if (s.charAt(pos) == '=') {\r\n                    types.push(XPathParser.NOTEQUAL);\r\n                    values.push(\"!=\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (c == '<') {\r\n                if (s.charAt(pos) == '=') {\r\n                    types.push(XPathParser.LESSTHANOREQUAL);\r\n                    values.push(\"<=\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.LESSTHAN);\r\n                values.push('<');\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == '>') {\r\n                if (s.charAt(pos) == '=') {\r\n                    types.push(XPathParser.GREATERTHANOREQUAL);\r\n                    values.push(\">=\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.GREATERTHAN);\r\n                values.push('>');\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == '_' || Utilities.isLetter(c.charCodeAt(0))) {\r\n                var name = c;\r\n                c = s.charAt(pos++);\r\n                while (Utilities.isNCNameChar(c.charCodeAt(0))) {\r\n                    name += c;\r\n                    c = s.charAt(pos++);\r\n                }\r\n                if (types.length > 0) {\r\n                    var last = types[types.length - 1];\r\n                    if (last != XPathParser.AT\r\n                        && last != XPathParser.DOUBLECOLON\r\n                        && last != XPathParser.LEFTPARENTHESIS\r\n                        && last != XPathParser.LEFTBRACKET\r\n                        && last != XPathParser.AND\r\n                        && last != XPathParser.OR\r\n                        && last != XPathParser.MOD\r\n                        && last != XPathParser.DIV\r\n                        && last != XPathParser.MULTIPLYOPERATOR\r\n                        && last != XPathParser.SLASH\r\n                        && last != XPathParser.DOUBLESLASH\r\n                        && last != XPathParser.BAR\r\n                        && last != XPathParser.PLUS\r\n                        && last != XPathParser.MINUS\r\n                        && last != XPathParser.EQUALS\r\n                        && last != XPathParser.NOTEQUAL\r\n                        && last != XPathParser.LESSTHAN\r\n                        && last != XPathParser.LESSTHANOREQUAL\r\n                        && last != XPathParser.GREATERTHAN\r\n                        && last != XPathParser.GREATERTHANOREQUAL) {\r\n                        if (name == \"and\") {\r\n                            types.push(XPathParser.AND);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        if (name == \"or\") {\r\n                            types.push(XPathParser.OR);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        if (name == \"mod\") {\r\n                            types.push(XPathParser.MOD);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        if (name == \"div\") {\r\n                            types.push(XPathParser.DIV);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                    }\r\n                }\r\n                if (c == ':') {\r\n                    if (s.charAt(pos) == '*') {\r\n                        types.push(XPathParser.NCNAMECOLONASTERISK);\r\n                        values.push(name + \":*\");\r\n                        pos++;\r\n                        c = s.charAt(pos++);\r\n                        continue;\r\n                    }\r\n                    if (s.charAt(pos) == '_' || Utilities.isLetter(s.charCodeAt(pos))) {\r\n                        name += ':';\r\n                        c = s.charAt(pos++);\r\n                        while (Utilities.isNCNameChar(c.charCodeAt(0))) {\r\n                            name += c;\r\n                            c = s.charAt(pos++);\r\n                        }\r\n                        if (c == '(') {\r\n                            types.push(XPathParser.FUNCTIONNAME);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        types.push(XPathParser.QNAME);\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                    if (s.charAt(pos) == ':') {\r\n                        types.push(XPathParser.AXISNAME);\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                }\r\n                if (c == '(') {\r\n                    if (name == \"comment\" || name == \"text\" || name == \"node\") {\r\n                        types.push(XPathParser.NODETYPE);\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                    if (name == \"processing-instruction\") {\r\n                        if (s.charAt(pos) == ')') {\r\n                            types.push(XPathParser.NODETYPE);\r\n                        } else {\r\n                            types.push(XPathParser.PROCESSINGINSTRUCTIONWITHLITERAL);\r\n                        }\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                    types.push(XPathParser.FUNCTIONNAME);\r\n                    values.push(name);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.QNAME);\r\n                values.push(name);\r\n                continue;\r\n            }\r\n\r\n            throw new Error(\"Unexpected character \" + c);\r\n        }\r\n        types.push(1);\r\n        values.push(\"[EOF]\");\r\n        return [types, values];\r\n    };\r\n\r\n    XPathParser.SHIFT = 's';\r\n    XPathParser.REDUCE = 'r';\r\n    XPathParser.ACCEPT = 'a';\r\n\r\n    XPathParser.prototype.parse = function (s) {\r\n        var types;\r\n        var values;\r\n        var res = this.tokenize(s);\r\n        if (res == undefined) {\r\n            return undefined;\r\n        }\r\n        types = res[0];\r\n        values = res[1];\r\n        var tokenPos = 0;\r\n        var state = [];\r\n        var tokenType = [];\r\n        var tokenValue = [];\r\n        var s;\r\n        var a;\r\n        var t;\r\n\r\n        state.push(0);\r\n        tokenType.push(1);\r\n        tokenValue.push(\"_S\");\r\n\r\n        a = types[tokenPos];\r\n        t = values[tokenPos++];\r\n        while (1) {\r\n            s = state[state.length - 1];\r\n            switch (XPathParser.actionTable[s].charAt(a - 1)) {\r\n                case XPathParser.SHIFT:\r\n                    tokenType.push(-a);\r\n                    tokenValue.push(t);\r\n                    state.push(XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32);\r\n                    a = types[tokenPos];\r\n                    t = values[tokenPos++];\r\n                    break;\r\n                case XPathParser.REDUCE:\r\n                    var num = XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][1];\r\n                    var rhs = [];\r\n                    for (var i = 0; i < num; i++) {\r\n                        tokenType.pop();\r\n                        rhs.unshift(tokenValue.pop());\r\n                        state.pop();\r\n                    }\r\n                    var s_ = state[state.length - 1];\r\n                    tokenType.push(XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][0]);\r\n                    if (this.reduceActions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32] == undefined) {\r\n                        tokenValue.push(rhs[0]);\r\n                    } else {\r\n                        tokenValue.push(this.reduceActions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32](rhs));\r\n                    }\r\n                    state.push(XPathParser.gotoTable[s_].charCodeAt(XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][0] - 2) - 33);\r\n                    break;\r\n                case XPathParser.ACCEPT:\r\n                    return new XPath(tokenValue.pop());\r\n                default:\r\n                    throw new Error(\"XPath parse error\");\r\n            }\r\n        }\r\n    };\r\n\r\n    // XPath /////////////////////////////////////////////////////////////////////\r\n\r\n    XPath.prototype = new Object();\r\n    XPath.prototype.constructor = XPath;\r\n    XPath.superclass = Object.prototype;\r\n\r\n    function XPath(e) {\r\n        this.expression = e;\r\n    }\r\n\r\n    XPath.prototype.toString = function () {\r\n        return this.expression.toString();\r\n    };\r\n\r\n    function setIfUnset(obj, prop, value) {\r\n        if (!(prop in obj)) {\r\n            obj[prop] = value;\r\n        }\r\n    }\r\n\r\n    XPath.prototype.evaluate = function (c) {\r\n        c.contextNode = c.expressionContextNode;\r\n        c.contextSize = 1;\r\n        c.contextPosition = 1;\r\n\r\n        // [2017-11-25] Removed usage of .implementation.hasFeature() since it does\r\n        //              not reliably detect HTML DOMs (always returns false in xmldom and true in browsers)\r\n        if (c.isHtml) {\r\n            setIfUnset(c, 'caseInsensitive', true);\r\n            setIfUnset(c, 'allowAnyNamespaceForNoPrefix', true);\r\n        }\r\n\r\n        setIfUnset(c, 'caseInsensitive', false);\r\n\r\n        return this.expression.evaluate(c);\r\n    };\r\n\r\n    XPath.XML_NAMESPACE_URI = \"http://www.w3.org/XML/1998/namespace\";\r\n    XPath.XMLNS_NAMESPACE_URI = \"http://www.w3.org/2000/xmlns/\";\r\n\r\n    // Expression ////////////////////////////////////////////////////////////////\r\n\r\n    Expression.prototype = new Object();\r\n    Expression.prototype.constructor = Expression;\r\n    Expression.superclass = Object.prototype;\r\n\r\n    function Expression() {\r\n    }\r\n\r\n    Expression.prototype.init = function () {\r\n    };\r\n\r\n    Expression.prototype.toString = function () {\r\n        return \"<Expression>\";\r\n    };\r\n\r\n    Expression.prototype.evaluate = function (c) {\r\n        throw new Error(\"Could not evaluate expression.\");\r\n    };\r\n\r\n    // UnaryOperation ////////////////////////////////////////////////////////////\r\n\r\n    UnaryOperation.prototype = new Expression();\r\n    UnaryOperation.prototype.constructor = UnaryOperation;\r\n    UnaryOperation.superclass = Expression.prototype;\r\n\r\n    function UnaryOperation(rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(rhs);\r\n        }\r\n    }\r\n\r\n    UnaryOperation.prototype.init = function (rhs) {\r\n        this.rhs = rhs;\r\n    };\r\n\r\n    // UnaryMinusOperation ///////////////////////////////////////////////////////\r\n\r\n    UnaryMinusOperation.prototype = new UnaryOperation();\r\n    UnaryMinusOperation.prototype.constructor = UnaryMinusOperation;\r\n    UnaryMinusOperation.superclass = UnaryOperation.prototype;\r\n\r\n    function UnaryMinusOperation(rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(rhs);\r\n        }\r\n    }\r\n\r\n    UnaryMinusOperation.prototype.init = function (rhs) {\r\n        UnaryMinusOperation.superclass.init.call(this, rhs);\r\n    };\r\n\r\n    UnaryMinusOperation.prototype.evaluate = function (c) {\r\n        return this.rhs.evaluate(c).number().negate();\r\n    };\r\n\r\n    UnaryMinusOperation.prototype.toString = function () {\r\n        return \"-\" + this.rhs.toString();\r\n    };\r\n\r\n    // BinaryOperation ///////////////////////////////////////////////////////////\r\n\r\n    BinaryOperation.prototype = new Expression();\r\n    BinaryOperation.prototype.constructor = BinaryOperation;\r\n    BinaryOperation.superclass = Expression.prototype;\r\n\r\n    function BinaryOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    BinaryOperation.prototype.init = function (lhs, rhs) {\r\n        this.lhs = lhs;\r\n        this.rhs = rhs;\r\n    };\r\n\r\n    // OrOperation ///////////////////////////////////////////////////////////////\r\n\r\n    OrOperation.prototype = new BinaryOperation();\r\n    OrOperation.prototype.constructor = OrOperation;\r\n    OrOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function OrOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    OrOperation.prototype.init = function (lhs, rhs) {\r\n        OrOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    OrOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" or \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    OrOperation.prototype.evaluate = function (c) {\r\n        var b = this.lhs.evaluate(c).bool();\r\n        if (b.booleanValue()) {\r\n            return b;\r\n        }\r\n        return this.rhs.evaluate(c).bool();\r\n    };\r\n\r\n    // AndOperation //////////////////////////////////////////////////////////////\r\n\r\n    AndOperation.prototype = new BinaryOperation();\r\n    AndOperation.prototype.constructor = AndOperation;\r\n    AndOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function AndOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    AndOperation.prototype.init = function (lhs, rhs) {\r\n        AndOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    AndOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" and \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    AndOperation.prototype.evaluate = function (c) {\r\n        var b = this.lhs.evaluate(c).bool();\r\n        if (!b.booleanValue()) {\r\n            return b;\r\n        }\r\n        return this.rhs.evaluate(c).bool();\r\n    };\r\n\r\n    // EqualsOperation ///////////////////////////////////////////////////////////\r\n\r\n    EqualsOperation.prototype = new BinaryOperation();\r\n    EqualsOperation.prototype.constructor = EqualsOperation;\r\n    EqualsOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function EqualsOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    EqualsOperation.prototype.init = function (lhs, rhs) {\r\n        EqualsOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    EqualsOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" = \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    EqualsOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).equals(this.rhs.evaluate(c));\r\n    };\r\n\r\n    // NotEqualOperation /////////////////////////////////////////////////////////\r\n\r\n    NotEqualOperation.prototype = new BinaryOperation();\r\n    NotEqualOperation.prototype.constructor = NotEqualOperation;\r\n    NotEqualOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function NotEqualOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    NotEqualOperation.prototype.init = function (lhs, rhs) {\r\n        NotEqualOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    NotEqualOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" != \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    NotEqualOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).notequal(this.rhs.evaluate(c));\r\n    };\r\n\r\n    // LessThanOperation /////////////////////////////////////////////////////////\r\n\r\n    LessThanOperation.prototype = new BinaryOperation();\r\n    LessThanOperation.prototype.constructor = LessThanOperation;\r\n    LessThanOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function LessThanOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    LessThanOperation.prototype.init = function (lhs, rhs) {\r\n        LessThanOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    LessThanOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).lessthan(this.rhs.evaluate(c));\r\n    };\r\n\r\n    LessThanOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" < \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // GreaterThanOperation //////////////////////////////////////////////////////\r\n\r\n    GreaterThanOperation.prototype = new BinaryOperation();\r\n    GreaterThanOperation.prototype.constructor = GreaterThanOperation;\r\n    GreaterThanOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function GreaterThanOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    GreaterThanOperation.prototype.init = function (lhs, rhs) {\r\n        GreaterThanOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    GreaterThanOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).greaterthan(this.rhs.evaluate(c));\r\n    };\r\n\r\n    GreaterThanOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" > \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // LessThanOrEqualOperation //////////////////////////////////////////////////\r\n\r\n    LessThanOrEqualOperation.prototype = new BinaryOperation();\r\n    LessThanOrEqualOperation.prototype.constructor = LessThanOrEqualOperation;\r\n    LessThanOrEqualOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function LessThanOrEqualOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    LessThanOrEqualOperation.prototype.init = function (lhs, rhs) {\r\n        LessThanOrEqualOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    LessThanOrEqualOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).lessthanorequal(this.rhs.evaluate(c));\r\n    };\r\n\r\n    LessThanOrEqualOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" <= \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // GreaterThanOrEqualOperation ///////////////////////////////////////////////\r\n\r\n    GreaterThanOrEqualOperation.prototype = new BinaryOperation();\r\n    GreaterThanOrEqualOperation.prototype.constructor = GreaterThanOrEqualOperation;\r\n    GreaterThanOrEqualOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function GreaterThanOrEqualOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    GreaterThanOrEqualOperation.prototype.init = function (lhs, rhs) {\r\n        GreaterThanOrEqualOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    GreaterThanOrEqualOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).greaterthanorequal(this.rhs.evaluate(c));\r\n    };\r\n\r\n    GreaterThanOrEqualOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" >= \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // PlusOperation /////////////////////////////////////////////////////////////\r\n\r\n    PlusOperation.prototype = new BinaryOperation();\r\n    PlusOperation.prototype.constructor = PlusOperation;\r\n    PlusOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function PlusOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    PlusOperation.prototype.init = function (lhs, rhs) {\r\n        PlusOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    PlusOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().plus(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    PlusOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" + \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // MinusOperation ////////////////////////////////////////////////////////////\r\n\r\n    MinusOperation.prototype = new BinaryOperation();\r\n    MinusOperation.prototype.constructor = MinusOperation;\r\n    MinusOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function MinusOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    MinusOperation.prototype.init = function (lhs, rhs) {\r\n        MinusOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    MinusOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().minus(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    MinusOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" - \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // MultiplyOperation /////////////////////////////////////////////////////////\r\n\r\n    MultiplyOperation.prototype = new BinaryOperation();\r\n    MultiplyOperation.prototype.constructor = MultiplyOperation;\r\n    MultiplyOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function MultiplyOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    MultiplyOperation.prototype.init = function (lhs, rhs) {\r\n        MultiplyOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    MultiplyOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().multiply(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    MultiplyOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" * \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // DivOperation //////////////////////////////////////////////////////////////\r\n\r\n    DivOperation.prototype = new BinaryOperation();\r\n    DivOperation.prototype.constructor = DivOperation;\r\n    DivOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function DivOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    DivOperation.prototype.init = function (lhs, rhs) {\r\n        DivOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    DivOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().div(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    DivOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" div \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // ModOperation //////////////////////////////////////////////////////////////\r\n\r\n    ModOperation.prototype = new BinaryOperation();\r\n    ModOperation.prototype.constructor = ModOperation;\r\n    ModOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function ModOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    ModOperation.prototype.init = function (lhs, rhs) {\r\n        ModOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    ModOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().mod(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    ModOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" mod \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // BarOperation //////////////////////////////////////////////////////////////\r\n\r\n    BarOperation.prototype = new BinaryOperation();\r\n    BarOperation.prototype.constructor = BarOperation;\r\n    BarOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function BarOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    BarOperation.prototype.init = function (lhs, rhs) {\r\n        BarOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    BarOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).nodeset().union(this.rhs.evaluate(c).nodeset());\r\n    };\r\n\r\n    BarOperation.prototype.toString = function () {\r\n        return map(toString, [this.lhs, this.rhs]).join(' | ');\r\n    };\r\n\r\n    // PathExpr //////////////////////////////////////////////////////////////////\r\n\r\n    PathExpr.prototype = new Expression();\r\n    PathExpr.prototype.constructor = PathExpr;\r\n    PathExpr.superclass = Expression.prototype;\r\n\r\n    function PathExpr(filter, filterPreds, locpath) {\r\n        if (arguments.length > 0) {\r\n            this.init(filter, filterPreds, locpath);\r\n        }\r\n    }\r\n\r\n    PathExpr.prototype.init = function (filter, filterPreds, locpath) {\r\n        PathExpr.superclass.init.call(this);\r\n        this.filter = filter;\r\n        this.filterPredicates = filterPreds;\r\n        this.locationPath = locpath;\r\n    };\r\n\r\n    /**\r\n     * Returns the topmost node of the tree containing node\r\n     */\r\n    function findRoot(node) {\r\n        while (node && node.parentNode) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    PathExpr.applyPredicates = function (predicates, c, nodes) {\r\n        if (predicates.length === 0) {\r\n            return nodes;\r\n        }\r\n\r\n        var ctx = c.extend({});\r\n\r\n        return reduce(\r\n            function (inNodes, pred) {\r\n                ctx.contextSize = inNodes.length;\r\n\r\n                return filter(\r\n                    function (node, i) {\r\n                        ctx.contextNode = node;\r\n                        ctx.contextPosition = i + 1;\r\n\r\n                        return PathExpr.predicateMatches(pred, ctx);\r\n                    },\r\n                    inNodes\r\n                );\r\n            },\r\n            nodes,\r\n            predicates\r\n        );\r\n    };\r\n\r\n    PathExpr.getRoot = function (xpc, nodes) {\r\n        var firstNode = nodes[0];\r\n\r\n        if (firstNode.nodeType === 9 /*Node.DOCUMENT_NODE*/) {\r\n            return firstNode;\r\n        }\r\n\r\n        if (xpc.virtualRoot) {\r\n            return xpc.virtualRoot;\r\n        }\r\n\r\n        var ownerDoc = firstNode.ownerDocument;\r\n\r\n        if (ownerDoc) {\r\n            return ownerDoc;\r\n        }\r\n\r\n        // IE 5.5 doesn't have ownerDocument?\r\n        var n = firstNode;\r\n        while (n.parentNode != null) {\r\n            n = n.parentNode;\r\n        }\r\n        return n;\r\n    }\r\n\r\n    PathExpr.applyStep = function (step, xpc, node) {\r\n        var self = this;\r\n        var newNodes = [];\r\n        xpc.contextNode = node;\r\n\r\n        switch (step.axis) {\r\n            case Step.ANCESTOR:\r\n                // look at all the ancestor nodes\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                var m;\r\n                if (xpc.contextNode.nodeType == 2 /*Node.ATTRIBUTE_NODE*/) {\r\n                    m = PathExpr.getOwnerElement(xpc.contextNode);\r\n                } else {\r\n                    m = xpc.contextNode.parentNode;\r\n                }\r\n                while (m != null) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                    if (m === xpc.virtualRoot) {\r\n                        break;\r\n                    }\r\n                    m = m.parentNode;\r\n                }\r\n                break;\r\n\r\n            case Step.ANCESTORORSELF:\r\n                // look at all the ancestor nodes and the current node\r\n                for (var m = xpc.contextNode; m != null; m = m.nodeType == 2 /*Node.ATTRIBUTE_NODE*/ ? PathExpr.getOwnerElement(m) : m.parentNode) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                    if (m === xpc.virtualRoot) {\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.ATTRIBUTE:\r\n                // look at the attributes\r\n                var nnm = xpc.contextNode.attributes;\r\n                if (nnm != null) {\r\n                    for (var k = 0; k < nnm.length; k++) {\r\n                        var m = nnm.item(k);\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.CHILD:\r\n                // look at all child elements\r\n                for (var m = xpc.contextNode.firstChild; m != null; m = m.nextSibling) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.DESCENDANT:\r\n                // look at all descendant nodes\r\n                var st = [xpc.contextNode.firstChild];\r\n                while (st.length > 0) {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.DESCENDANTORSELF:\r\n                // look at self\r\n                if (step.nodeTest.matches(xpc.contextNode, xpc)) {\r\n                    newNodes.push(xpc.contextNode);\r\n                }\r\n                // look at all descendant nodes\r\n                var st = [xpc.contextNode.firstChild];\r\n                while (st.length > 0) {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.FOLLOWING:\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                var st = [];\r\n                if (xpc.contextNode.firstChild != null) {\r\n                    st.unshift(xpc.contextNode.firstChild);\r\n                } else {\r\n                    st.unshift(xpc.contextNode.nextSibling);\r\n                }\r\n                for (var m = xpc.contextNode.parentNode; m != null && m.nodeType != 9 /*Node.DOCUMENT_NODE*/ && m !== xpc.virtualRoot; m = m.parentNode) {\r\n                    st.unshift(m.nextSibling);\r\n                }\r\n                do {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                } while (st.length > 0);\r\n                break;\r\n\r\n            case Step.FOLLOWINGSIBLING:\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                for (var m = xpc.contextNode.nextSibling; m != null; m = m.nextSibling) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.NAMESPACE:\r\n                var n = {};\r\n                if (xpc.contextNode.nodeType == 1 /*Node.ELEMENT_NODE*/) {\r\n                    n[\"xml\"] = XPath.XML_NAMESPACE_URI;\r\n                    n[\"xmlns\"] = XPath.XMLNS_NAMESPACE_URI;\r\n                    for (var m = xpc.contextNode; m != null && m.nodeType == 1 /*Node.ELEMENT_NODE*/; m = m.parentNode) {\r\n                        for (var k = 0; k < m.attributes.length; k++) {\r\n                            var attr = m.attributes.item(k);\r\n                            var nm = String(attr.name);\r\n                            if (nm == \"xmlns\") {\r\n                                if (n[\"\"] == undefined) {\r\n                                    n[\"\"] = attr.value;\r\n                                }\r\n                            } else if (nm.length > 6 && nm.substring(0, 6) == \"xmlns:\") {\r\n                                var pre = nm.substring(6, nm.length);\r\n                                if (n[pre] == undefined) {\r\n                                    n[pre] = attr.value;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    for (var pre in n) {\r\n                        var nsn = new XPathNamespace(pre, n[pre], xpc.contextNode);\r\n                        if (step.nodeTest.matches(nsn, xpc)) {\r\n                            newNodes.push(nsn);\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.PARENT:\r\n                m = null;\r\n                if (xpc.contextNode !== xpc.virtualRoot) {\r\n                    if (xpc.contextNode.nodeType == 2 /*Node.ATTRIBUTE_NODE*/) {\r\n                        m = PathExpr.getOwnerElement(xpc.contextNode);\r\n                    } else {\r\n                        m = xpc.contextNode.parentNode;\r\n                    }\r\n                }\r\n                if (m != null && step.nodeTest.matches(m, xpc)) {\r\n                    newNodes.push(m);\r\n                }\r\n                break;\r\n\r\n            case Step.PRECEDING:\r\n                var st;\r\n                if (xpc.virtualRoot != null) {\r\n                    st = [xpc.virtualRoot];\r\n                } else {\r\n                    // cannot rely on .ownerDocument because the node may be in a document fragment\r\n                    st = [findRoot(xpc.contextNode)];\r\n                }\r\n                outer: while (st.length > 0) {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (m == xpc.contextNode) {\r\n                            break outer;\r\n                        }\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.unshift(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.PRECEDINGSIBLING:\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                for (var m = xpc.contextNode.previousSibling; m != null; m = m.previousSibling) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.SELF:\r\n                if (step.nodeTest.matches(xpc.contextNode, xpc)) {\r\n                    newNodes.push(xpc.contextNode);\r\n                }\r\n                break;\r\n\r\n            default:\r\n        }\r\n\r\n        return newNodes;\r\n    };\r\n\r\n    function applyStepWithPredicates(step, xpc, node) {\r\n        return PathExpr.applyPredicates(\r\n            step.predicates,\r\n            xpc,\r\n            PathExpr.applyStep(step, xpc, node)\r\n        );\r\n    }\r\n\r\n    function applyStepToNodes(context, nodes, step) {\r\n        return flatten(\r\n            map(\r\n                applyStepWithPredicates.bind(null, step, context),\r\n                nodes\r\n            )\r\n        );\r\n    }\r\n\r\n    PathExpr.applySteps = function (steps, xpc, nodes) {\r\n        return reduce(\r\n            applyStepToNodes.bind(null, xpc),\r\n            nodes,\r\n            steps\r\n        );\r\n    }\r\n\r\n    PathExpr.prototype.applyFilter = function (c, xpc) {\r\n        if (!this.filter) {\r\n            return { nodes: [c.contextNode] };\r\n        }\r\n\r\n        var ns = this.filter.evaluate(c);\r\n\r\n        if (!Utilities.instance_of(ns, XNodeSet)) {\r\n            if (this.filterPredicates != null && this.filterPredicates.length > 0 || this.locationPath != null) {\r\n                throw new Error(\"Path expression filter must evaluate to a nodeset if predicates or location path are used\");\r\n            }\r\n\r\n            return { nonNodes: ns };\r\n        }\r\n\r\n        return {\r\n            nodes: PathExpr.applyPredicates(this.filterPredicates || [], xpc, ns.toUnsortedArray())\r\n        };\r\n    };\r\n\r\n    PathExpr.applyLocationPath = function (locationPath, xpc, nodes) {\r\n        if (!locationPath) {\r\n            return nodes;\r\n        }\r\n\r\n        var startNodes = locationPath.absolute ? [PathExpr.getRoot(xpc, nodes)] : nodes;\r\n\r\n        return PathExpr.applySteps(locationPath.steps, xpc, startNodes);\r\n    };\r\n\r\n    PathExpr.prototype.evaluate = function (c) {\r\n        var xpc = assign(new XPathContext(), c);\r\n\r\n        var filterResult = this.applyFilter(c, xpc);\r\n\r\n        if ('nonNodes' in filterResult) {\r\n            return filterResult.nonNodes;\r\n        }\r\n\r\n        var ns = new XNodeSet();\r\n        ns.addArray(PathExpr.applyLocationPath(this.locationPath, xpc, filterResult.nodes));\r\n        return ns;\r\n    };\r\n\r\n    PathExpr.predicateMatches = function (pred, c) {\r\n        var res = pred.evaluate(c);\r\n\r\n        return Utilities.instance_of(res, XNumber)\r\n            ? c.contextPosition === res.numberValue()\r\n            : res.booleanValue();\r\n    };\r\n\r\n    PathExpr.predicateString = function (predicate) {\r\n        return wrap('[', ']', predicate.toString());\r\n    }\r\n\r\n    PathExpr.predicatesString = function (predicates) {\r\n        return join(\r\n            '',\r\n            map(PathExpr.predicateString, predicates)\r\n        );\r\n    }\r\n\r\n    PathExpr.prototype.toString = function () {\r\n        if (this.filter != undefined) {\r\n            var filterStr = toString(this.filter);\r\n\r\n            if (Utilities.instance_of(this.filter, XString)) {\r\n                return wrap(\"'\", \"'\", filterStr);\r\n            }\r\n            if (this.filterPredicates != undefined && this.filterPredicates.length) {\r\n                return wrap('(', ')', filterStr) +\r\n                    PathExpr.predicatesString(this.filterPredicates);\r\n            }\r\n            if (this.locationPath != undefined) {\r\n                return filterStr +\r\n                    (this.locationPath.absolute ? '' : '/') +\r\n                    toString(this.locationPath);\r\n            }\r\n\r\n            return filterStr;\r\n        }\r\n\r\n        return toString(this.locationPath);\r\n    };\r\n\r\n    PathExpr.getOwnerElement = function (n) {\r\n        // DOM 2 has ownerElement\r\n        if (n.ownerElement) {\r\n            return n.ownerElement;\r\n        }\r\n        // DOM 1 Internet Explorer can use selectSingleNode (ironically)\r\n        try {\r\n            if (n.selectSingleNode) {\r\n                return n.selectSingleNode(\"..\");\r\n            }\r\n        } catch (e) {\r\n        }\r\n        // Other DOM 1 implementations must use this egregious search\r\n        var doc = n.nodeType == 9 /*Node.DOCUMENT_NODE*/\r\n            ? n\r\n            : n.ownerDocument;\r\n        var elts = doc.getElementsByTagName(\"*\");\r\n        for (var i = 0; i < elts.length; i++) {\r\n            var elt = elts.item(i);\r\n            var nnm = elt.attributes;\r\n            for (var j = 0; j < nnm.length; j++) {\r\n                var an = nnm.item(j);\r\n                if (an === n) {\r\n                    return elt;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    // LocationPath //////////////////////////////////////////////////////////////\r\n\r\n    LocationPath.prototype = new Object();\r\n    LocationPath.prototype.constructor = LocationPath;\r\n    LocationPath.superclass = Object.prototype;\r\n\r\n    function LocationPath(abs, steps) {\r\n        if (arguments.length > 0) {\r\n            this.init(abs, steps);\r\n        }\r\n    }\r\n\r\n    LocationPath.prototype.init = function (abs, steps) {\r\n        this.absolute = abs;\r\n        this.steps = steps;\r\n    };\r\n\r\n    LocationPath.prototype.toString = function () {\r\n        return (\r\n            (this.absolute ? '/' : '') +\r\n            map(toString, this.steps).join('/')\r\n        );\r\n    };\r\n\r\n    // Step //////////////////////////////////////////////////////////////////////\r\n\r\n    Step.prototype = new Object();\r\n    Step.prototype.constructor = Step;\r\n    Step.superclass = Object.prototype;\r\n\r\n    function Step(axis, nodetest, preds) {\r\n        if (arguments.length > 0) {\r\n            this.init(axis, nodetest, preds);\r\n        }\r\n    }\r\n\r\n    Step.prototype.init = function (axis, nodetest, preds) {\r\n        this.axis = axis;\r\n        this.nodeTest = nodetest;\r\n        this.predicates = preds;\r\n    };\r\n\r\n    Step.prototype.toString = function () {\r\n        return Step.STEPNAMES[this.axis] +\r\n            \"::\" +\r\n            this.nodeTest.toString() +\r\n            PathExpr.predicatesString(this.predicates);\r\n    };\r\n\r\n\r\n    Step.ANCESTOR = 0;\r\n    Step.ANCESTORORSELF = 1;\r\n    Step.ATTRIBUTE = 2;\r\n    Step.CHILD = 3;\r\n    Step.DESCENDANT = 4;\r\n    Step.DESCENDANTORSELF = 5;\r\n    Step.FOLLOWING = 6;\r\n    Step.FOLLOWINGSIBLING = 7;\r\n    Step.NAMESPACE = 8;\r\n    Step.PARENT = 9;\r\n    Step.PRECEDING = 10;\r\n    Step.PRECEDINGSIBLING = 11;\r\n    Step.SELF = 12;\r\n\r\n    Step.STEPNAMES = reduce(function (acc, x) { return acc[x[0]] = x[1], acc; }, {}, [\r\n        [Step.ANCESTOR, 'ancestor'],\r\n        [Step.ANCESTORORSELF, 'ancestor-or-self'],\r\n        [Step.ATTRIBUTE, 'attribute'],\r\n        [Step.CHILD, 'child'],\r\n        [Step.DESCENDANT, 'descendant'],\r\n        [Step.DESCENDANTORSELF, 'descendant-or-self'],\r\n        [Step.FOLLOWING, 'following'],\r\n        [Step.FOLLOWINGSIBLING, 'following-sibling'],\r\n        [Step.NAMESPACE, 'namespace'],\r\n        [Step.PARENT, 'parent'],\r\n        [Step.PRECEDING, 'preceding'],\r\n        [Step.PRECEDINGSIBLING, 'preceding-sibling'],\r\n        [Step.SELF, 'self']\r\n    ]);\r\n\r\n    // NodeTest //////////////////////////////////////////////////////////////////\r\n\r\n    NodeTest.prototype = new Object();\r\n    NodeTest.prototype.constructor = NodeTest;\r\n    NodeTest.superclass = Object.prototype;\r\n\r\n    function NodeTest(type, value) {\r\n        if (arguments.length > 0) {\r\n            this.init(type, value);\r\n        }\r\n    }\r\n\r\n    NodeTest.prototype.init = function (type, value) {\r\n        this.type = type;\r\n        this.value = value;\r\n    };\r\n\r\n    NodeTest.prototype.toString = function () {\r\n        return \"<unknown nodetest type>\";\r\n    };\r\n\r\n    NodeTest.prototype.matches = function (n, xpc) {\r\n        console.warn('unknown node test type');\r\n    };\r\n\r\n    NodeTest.NAMETESTANY = 0;\r\n    NodeTest.NAMETESTPREFIXANY = 1;\r\n    NodeTest.NAMETESTQNAME = 2;\r\n    NodeTest.COMMENT = 3;\r\n    NodeTest.TEXT = 4;\r\n    NodeTest.PI = 5;\r\n    NodeTest.NODE = 6;\r\n\r\n    NodeTest.isNodeType = function (types) {\r\n        return function (node) {\r\n            return includes(types, node.nodeType);\r\n        };\r\n    };\r\n\r\n    NodeTest.makeNodeTestType = function (type, members, ctor) {\r\n        var newType = ctor || function () { };\r\n\r\n        newType.prototype = new NodeTest(type);\r\n        newType.prototype.constructor = newType;\r\n\r\n        assign(newType.prototype, members);\r\n\r\n        return newType;\r\n    };\r\n    // create invariant node test for certain node types\r\n    NodeTest.makeNodeTypeTest = function (type, nodeTypes, stringVal) {\r\n        return new (NodeTest.makeNodeTestType(type, {\r\n            matches: NodeTest.isNodeType(nodeTypes),\r\n            toString: always(stringVal)\r\n        }))();\r\n    };\r\n\r\n    NodeTest.hasPrefix = function (node) {\r\n        return node.prefix || (node.nodeName || node.tagName).indexOf(':') !== -1;\r\n    };\r\n\r\n    NodeTest.isElementOrAttribute = NodeTest.isNodeType([1, 2]);\r\n    NodeTest.nameSpaceMatches = function (prefix, xpc, n) {\r\n        var nNamespace = (n.namespaceURI || '');\r\n\r\n        if (!prefix) {\r\n            return !nNamespace || (xpc.allowAnyNamespaceForNoPrefix && !NodeTest.hasPrefix(n));\r\n        }\r\n\r\n        var ns = xpc.namespaceResolver.getNamespace(prefix, xpc.expressionContextNode);\r\n\r\n        if (ns == null) {\r\n            throw new Error(\"Cannot resolve QName \" + prefix);\r\n        }\r\n\r\n        return ns === nNamespace;\r\n    };\r\n    NodeTest.localNameMatches = function (localName, xpc, n) {\r\n        var nLocalName = (n.localName || n.nodeName);\r\n\r\n        return xpc.caseInsensitive\r\n            ? localName.toLowerCase() === nLocalName.toLowerCase()\r\n            : localName === nLocalName;\r\n    };\r\n\r\n    NodeTest.NameTestPrefixAny = NodeTest.makeNodeTestType(\r\n        NodeTest.NAMETESTPREFIXANY,\r\n        {\r\n            matches: function (n, xpc) {\r\n                return NodeTest.isElementOrAttribute(n) &&\r\n                    NodeTest.nameSpaceMatches(this.prefix, xpc, n);\r\n            },\r\n            toString: function () {\r\n                return this.prefix + \":*\";\r\n            }\r\n        },\r\n        function NameTestPrefixAny(prefix) { this.prefix = prefix; }\r\n    );\r\n\r\n    NodeTest.NameTestQName = NodeTest.makeNodeTestType(\r\n        NodeTest.NAMETESTQNAME,\r\n        {\r\n            matches: function (n, xpc) {\r\n                return NodeTest.isNodeType([1, 2, XPathNamespace.XPATH_NAMESPACE_NODE])(n) &&\r\n                    NodeTest.nameSpaceMatches(this.prefix, xpc, n) &&\r\n                    NodeTest.localNameMatches(this.localName, xpc, n);\r\n            },\r\n            toString: function () {\r\n                return this.name;\r\n            }\r\n        },\r\n        function NameTestQName(name) {\r\n            var nameParts = name.split(':');\r\n\r\n            this.name = name;\r\n            this.prefix = nameParts.length > 1 ? nameParts[0] : null;\r\n            this.localName = nameParts[nameParts.length > 1 ? 1 : 0];\r\n        }\r\n    );\r\n\r\n    NodeTest.PITest = NodeTest.makeNodeTestType(NodeTest.PI, {\r\n        matches: function (n, xpc) {\r\n            return NodeTest.isNodeType([7])(n) && (n.target || n.nodeName) === this.name;\r\n        },\r\n        toString: function () {\r\n            return wrap('processing-instruction(\"', '\")', this.name);\r\n        }\r\n    }, function (name) { this.name = name; })\r\n\r\n    // singletons\r\n\r\n    // elements, attributes, namespaces\r\n    NodeTest.nameTestAny = NodeTest.makeNodeTypeTest(NodeTest.NAMETESTANY, [1, 2, XPathNamespace.XPATH_NAMESPACE_NODE], '*');\r\n    // text, cdata\r\n    NodeTest.textTest = NodeTest.makeNodeTypeTest(NodeTest.TEXT, [3, 4], 'text()');\r\n    NodeTest.commentTest = NodeTest.makeNodeTypeTest(NodeTest.COMMENT, [8], 'comment()');\r\n    // elements, attributes, text, cdata, PIs, comments, document nodes\r\n    NodeTest.nodeTest = NodeTest.makeNodeTypeTest(NodeTest.NODE, [1, 2, 3, 4, 7, 8, 9], 'node()');\r\n    NodeTest.anyPiTest = NodeTest.makeNodeTypeTest(NodeTest.PI, [7], 'processing-instruction()');\r\n\r\n    // VariableReference /////////////////////////////////////////////////////////\r\n\r\n    VariableReference.prototype = new Expression();\r\n    VariableReference.prototype.constructor = VariableReference;\r\n    VariableReference.superclass = Expression.prototype;\r\n\r\n    function VariableReference(v) {\r\n        if (arguments.length > 0) {\r\n            this.init(v);\r\n        }\r\n    }\r\n\r\n    VariableReference.prototype.init = function (v) {\r\n        this.variable = v;\r\n    };\r\n\r\n    VariableReference.prototype.toString = function () {\r\n        return \"$\" + this.variable;\r\n    };\r\n\r\n    VariableReference.prototype.evaluate = function (c) {\r\n        var parts = Utilities.resolveQName(this.variable, c.namespaceResolver, c.contextNode, false);\r\n\r\n        if (parts[0] == null) {\r\n            throw new Error(\"Cannot resolve QName \" + fn);\r\n        }\r\n        var result = c.variableResolver.getVariable(parts[1], parts[0]);\r\n        if (!result) {\r\n            throw XPathException.fromMessage(\"Undeclared variable: \" + this.toString());\r\n        }\r\n        return result;\r\n    };\r\n\r\n    // FunctionCall //////////////////////////////////////////////////////////////\r\n\r\n    FunctionCall.prototype = new Expression();\r\n    FunctionCall.prototype.constructor = FunctionCall;\r\n    FunctionCall.superclass = Expression.prototype;\r\n\r\n    function FunctionCall(fn, args) {\r\n        if (arguments.length > 0) {\r\n            this.init(fn, args);\r\n        }\r\n    }\r\n\r\n    FunctionCall.prototype.init = function (fn, args) {\r\n        this.functionName = fn;\r\n        this.arguments = args;\r\n    };\r\n\r\n    FunctionCall.prototype.toString = function () {\r\n        var s = this.functionName + \"(\";\r\n        for (var i = 0; i < this.arguments.length; i++) {\r\n            if (i > 0) {\r\n                s += \", \";\r\n            }\r\n            s += this.arguments[i].toString();\r\n        }\r\n        return s + \")\";\r\n    };\r\n\r\n    FunctionCall.prototype.evaluate = function (c) {\r\n        var f = FunctionResolver.getFunctionFromContext(this.functionName, c);\r\n\r\n        if (!f) {\r\n            throw new Error(\"Unknown function \" + this.functionName);\r\n        }\r\n\r\n        var a = [c].concat(this.arguments);\r\n        return f.apply(c.functionResolver.thisArg, a);\r\n    };\r\n\r\n    // Operators /////////////////////////////////////////////////////////////////\r\n\r\n    var Operators = new Object();\r\n\r\n    Operators.equals = function (l, r) {\r\n        return l.equals(r);\r\n    };\r\n\r\n    Operators.notequal = function (l, r) {\r\n        return l.notequal(r);\r\n    };\r\n\r\n    Operators.lessthan = function (l, r) {\r\n        return l.lessthan(r);\r\n    };\r\n\r\n    Operators.greaterthan = function (l, r) {\r\n        return l.greaterthan(r);\r\n    };\r\n\r\n    Operators.lessthanorequal = function (l, r) {\r\n        return l.lessthanorequal(r);\r\n    };\r\n\r\n    Operators.greaterthanorequal = function (l, r) {\r\n        return l.greaterthanorequal(r);\r\n    };\r\n\r\n    // XString ///////////////////////////////////////////////////////////////////\r\n\r\n    XString.prototype = new Expression();\r\n    XString.prototype.constructor = XString;\r\n    XString.superclass = Expression.prototype;\r\n\r\n    function XString(s) {\r\n        if (arguments.length > 0) {\r\n            this.init(s);\r\n        }\r\n    }\r\n\r\n    XString.prototype.init = function (s) {\r\n        this.str = String(s);\r\n    };\r\n\r\n    XString.prototype.toString = function () {\r\n        return this.str;\r\n    };\r\n\r\n    XString.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XString.prototype.string = function () {\r\n        return this;\r\n    };\r\n\r\n    XString.prototype.number = function () {\r\n        return new XNumber(this.str);\r\n    };\r\n\r\n    XString.prototype.bool = function () {\r\n        return new XBoolean(this.str);\r\n    };\r\n\r\n    XString.prototype.nodeset = function () {\r\n        throw new Error(\"Cannot convert string to nodeset\");\r\n    };\r\n\r\n    XString.prototype.stringValue = function () {\r\n        return this.str;\r\n    };\r\n\r\n    XString.prototype.numberValue = function () {\r\n        return this.number().numberValue();\r\n    };\r\n\r\n    XString.prototype.booleanValue = function () {\r\n        return this.bool().booleanValue();\r\n    };\r\n\r\n    XString.prototype.equals = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().equals(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNumber)) {\r\n            return this.number().equals(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithString(this, Operators.equals);\r\n        }\r\n        return new XBoolean(this.str == r.str);\r\n    };\r\n\r\n    XString.prototype.notequal = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().notequal(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNumber)) {\r\n            return this.number().notequal(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithString(this, Operators.notequal);\r\n        }\r\n        return new XBoolean(this.str != r.str);\r\n    };\r\n\r\n    XString.prototype.lessthan = function (r) {\r\n        return this.number().lessthan(r);\r\n    };\r\n\r\n    XString.prototype.greaterthan = function (r) {\r\n        return this.number().greaterthan(r);\r\n    };\r\n\r\n    XString.prototype.lessthanorequal = function (r) {\r\n        return this.number().lessthanorequal(r);\r\n    };\r\n\r\n    XString.prototype.greaterthanorequal = function (r) {\r\n        return this.number().greaterthanorequal(r);\r\n    };\r\n\r\n    // XNumber ///////////////////////////////////////////////////////////////////\r\n\r\n    XNumber.prototype = new Expression();\r\n    XNumber.prototype.constructor = XNumber;\r\n    XNumber.superclass = Expression.prototype;\r\n\r\n    function XNumber(n) {\r\n        if (arguments.length > 0) {\r\n            this.init(n);\r\n        }\r\n    }\r\n\r\n    XNumber.prototype.init = function (n) {\r\n        this.num = typeof n === \"string\" ? this.parse(n) : Number(n);\r\n    };\r\n\r\n    XNumber.prototype.numberFormat = /^\\s*-?[0-9]*\\.?[0-9]+\\s*$/;\r\n\r\n    XNumber.prototype.parse = function (s) {\r\n        // XPath representation of numbers is more restrictive than what Number() or parseFloat() allow\r\n        return this.numberFormat.test(s) ? parseFloat(s) : Number.NaN;\r\n    };\r\n\r\n    function padSmallNumber(numberStr) {\r\n        var parts = numberStr.split('e-');\r\n        var base = parts[0].replace('.', '');\r\n        var exponent = Number(parts[1]);\r\n\r\n        for (var i = 0; i < exponent - 1; i += 1) {\r\n            base = '0' + base;\r\n        }\r\n\r\n        return '0.' + base;\r\n    }\r\n\r\n    function padLargeNumber(numberStr) {\r\n        var parts = numberStr.split('e');\r\n        var base = parts[0].replace('.', '');\r\n        var exponent = Number(parts[1]);\r\n        var zerosToAppend = exponent + 1 - base.length;\r\n\r\n        for (var i = 0; i < zerosToAppend; i += 1) {\r\n            base += '0';\r\n        }\r\n\r\n        return base;\r\n    }\r\n\r\n    XNumber.prototype.toString = function () {\r\n        var strValue = this.num.toString();\r\n\r\n        if (strValue.indexOf('e-') !== -1) {\r\n            return padSmallNumber(strValue);\r\n        }\r\n\r\n        if (strValue.indexOf('e') !== -1) {\r\n            return padLargeNumber(strValue);\r\n        }\r\n\r\n        return strValue;\r\n    };\r\n\r\n    XNumber.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XNumber.prototype.string = function () {\r\n\r\n\r\n        return new XString(this.toString());\r\n    };\r\n\r\n    XNumber.prototype.number = function () {\r\n        return this;\r\n    };\r\n\r\n    XNumber.prototype.bool = function () {\r\n        return new XBoolean(this.num);\r\n    };\r\n\r\n    XNumber.prototype.nodeset = function () {\r\n        throw new Error(\"Cannot convert number to nodeset\");\r\n    };\r\n\r\n    XNumber.prototype.stringValue = function () {\r\n        return this.string().stringValue();\r\n    };\r\n\r\n    XNumber.prototype.numberValue = function () {\r\n        return this.num;\r\n    };\r\n\r\n    XNumber.prototype.booleanValue = function () {\r\n        return this.bool().booleanValue();\r\n    };\r\n\r\n    XNumber.prototype.negate = function () {\r\n        return new XNumber(-this.num);\r\n    };\r\n\r\n    XNumber.prototype.equals = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().equals(r);\r\n        }\r\n        if (Utilities.instance_of(r, XString)) {\r\n            return this.equals(r.number());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.equals);\r\n        }\r\n        return new XBoolean(this.num == r.num);\r\n    };\r\n\r\n    XNumber.prototype.notequal = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().notequal(r);\r\n        }\r\n        if (Utilities.instance_of(r, XString)) {\r\n            return this.notequal(r.number());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.notequal);\r\n        }\r\n        return new XBoolean(this.num != r.num);\r\n    };\r\n\r\n    XNumber.prototype.lessthan = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.greaterthan);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.lessthan(r.number());\r\n        }\r\n        return new XBoolean(this.num < r.num);\r\n    };\r\n\r\n    XNumber.prototype.greaterthan = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.lessthan);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.greaterthan(r.number());\r\n        }\r\n        return new XBoolean(this.num > r.num);\r\n    };\r\n\r\n    XNumber.prototype.lessthanorequal = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.greaterthanorequal);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.lessthanorequal(r.number());\r\n        }\r\n        return new XBoolean(this.num <= r.num);\r\n    };\r\n\r\n    XNumber.prototype.greaterthanorequal = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.lessthanorequal);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.greaterthanorequal(r.number());\r\n        }\r\n        return new XBoolean(this.num >= r.num);\r\n    };\r\n\r\n    XNumber.prototype.plus = function (r) {\r\n        return new XNumber(this.num + r.num);\r\n    };\r\n\r\n    XNumber.prototype.minus = function (r) {\r\n        return new XNumber(this.num - r.num);\r\n    };\r\n\r\n    XNumber.prototype.multiply = function (r) {\r\n        return new XNumber(this.num * r.num);\r\n    };\r\n\r\n    XNumber.prototype.div = function (r) {\r\n        return new XNumber(this.num / r.num);\r\n    };\r\n\r\n    XNumber.prototype.mod = function (r) {\r\n        return new XNumber(this.num % r.num);\r\n    };\r\n\r\n    // XBoolean //////////////////////////////////////////////////////////////////\r\n\r\n    XBoolean.prototype = new Expression();\r\n    XBoolean.prototype.constructor = XBoolean;\r\n    XBoolean.superclass = Expression.prototype;\r\n\r\n    function XBoolean(b) {\r\n        if (arguments.length > 0) {\r\n            this.init(b);\r\n        }\r\n    }\r\n\r\n    XBoolean.prototype.init = function (b) {\r\n        this.b = Boolean(b);\r\n    };\r\n\r\n    XBoolean.prototype.toString = function () {\r\n        return this.b.toString();\r\n    };\r\n\r\n    XBoolean.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XBoolean.prototype.string = function () {\r\n        return new XString(this.b);\r\n    };\r\n\r\n    XBoolean.prototype.number = function () {\r\n        return new XNumber(this.b);\r\n    };\r\n\r\n    XBoolean.prototype.bool = function () {\r\n        return this;\r\n    };\r\n\r\n    XBoolean.prototype.nodeset = function () {\r\n        throw new Error(\"Cannot convert boolean to nodeset\");\r\n    };\r\n\r\n    XBoolean.prototype.stringValue = function () {\r\n        return this.string().stringValue();\r\n    };\r\n\r\n    XBoolean.prototype.numberValue = function () {\r\n        return this.number().numberValue();\r\n    };\r\n\r\n    XBoolean.prototype.booleanValue = function () {\r\n        return this.b;\r\n    };\r\n\r\n    XBoolean.prototype.not = function () {\r\n        return new XBoolean(!this.b);\r\n    };\r\n\r\n    XBoolean.prototype.equals = function (r) {\r\n        if (Utilities.instance_of(r, XString) || Utilities.instance_of(r, XNumber)) {\r\n            return this.equals(r.bool());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithBoolean(this, Operators.equals);\r\n        }\r\n        return new XBoolean(this.b == r.b);\r\n    };\r\n\r\n    XBoolean.prototype.notequal = function (r) {\r\n        if (Utilities.instance_of(r, XString) || Utilities.instance_of(r, XNumber)) {\r\n            return this.notequal(r.bool());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithBoolean(this, Operators.notequal);\r\n        }\r\n        return new XBoolean(this.b != r.b);\r\n    };\r\n\r\n    XBoolean.prototype.lessthan = function (r) {\r\n        return this.number().lessthan(r);\r\n    };\r\n\r\n    XBoolean.prototype.greaterthan = function (r) {\r\n        return this.number().greaterthan(r);\r\n    };\r\n\r\n    XBoolean.prototype.lessthanorequal = function (r) {\r\n        return this.number().lessthanorequal(r);\r\n    };\r\n\r\n    XBoolean.prototype.greaterthanorequal = function (r) {\r\n        return this.number().greaterthanorequal(r);\r\n    };\r\n\r\n    XBoolean.true_ = new XBoolean(true);\r\n    XBoolean.false_ = new XBoolean(false);\r\n\r\n    // AVLTree ///////////////////////////////////////////////////////////////////\r\n\r\n    AVLTree.prototype = new Object();\r\n    AVLTree.prototype.constructor = AVLTree;\r\n    AVLTree.superclass = Object.prototype;\r\n\r\n    function AVLTree(n) {\r\n        this.init(n);\r\n    }\r\n\r\n    AVLTree.prototype.init = function (n) {\r\n        this.left = null;\r\n        this.right = null;\r\n        this.node = n;\r\n        this.depth = 1;\r\n    };\r\n\r\n    AVLTree.prototype.balance = function () {\r\n        var ldepth = this.left == null ? 0 : this.left.depth;\r\n        var rdepth = this.right == null ? 0 : this.right.depth;\r\n\r\n        if (ldepth > rdepth + 1) {\r\n            // LR or LL rotation\r\n            var lldepth = this.left.left == null ? 0 : this.left.left.depth;\r\n            var lrdepth = this.left.right == null ? 0 : this.left.right.depth;\r\n\r\n            if (lldepth < lrdepth) {\r\n                // LR rotation consists of a RR rotation of the left child\r\n                this.left.rotateRR();\r\n                // plus a LL rotation of this node, which happens anyway\r\n            }\r\n            this.rotateLL();\r\n        } else if (ldepth + 1 < rdepth) {\r\n            // RR or RL rorarion\r\n            var rrdepth = this.right.right == null ? 0 : this.right.right.depth;\r\n            var rldepth = this.right.left == null ? 0 : this.right.left.depth;\r\n\r\n            if (rldepth > rrdepth) {\r\n                // RR rotation consists of a LL rotation of the right child\r\n                this.right.rotateLL();\r\n                // plus a RR rotation of this node, which happens anyway\r\n            }\r\n            this.rotateRR();\r\n        }\r\n    };\r\n\r\n    AVLTree.prototype.rotateLL = function () {\r\n        // the left side is too long => rotate from the left (_not_ leftwards)\r\n        var nodeBefore = this.node;\r\n        var rightBefore = this.right;\r\n        this.node = this.left.node;\r\n        this.right = this.left;\r\n        this.left = this.left.left;\r\n        this.right.left = this.right.right;\r\n        this.right.right = rightBefore;\r\n        this.right.node = nodeBefore;\r\n        this.right.updateInNewLocation();\r\n        this.updateInNewLocation();\r\n    };\r\n\r\n    AVLTree.prototype.rotateRR = function () {\r\n        // the right side is too long => rotate from the right (_not_ rightwards)\r\n        var nodeBefore = this.node;\r\n        var leftBefore = this.left;\r\n        this.node = this.right.node;\r\n        this.left = this.right;\r\n        this.right = this.right.right;\r\n        this.left.right = this.left.left;\r\n        this.left.left = leftBefore;\r\n        this.left.node = nodeBefore;\r\n        this.left.updateInNewLocation();\r\n        this.updateInNewLocation();\r\n    };\r\n\r\n    AVLTree.prototype.updateInNewLocation = function () {\r\n        this.getDepthFromChildren();\r\n    };\r\n\r\n    AVLTree.prototype.getDepthFromChildren = function () {\r\n        this.depth = this.node == null ? 0 : 1;\r\n        if (this.left != null) {\r\n            this.depth = this.left.depth + 1;\r\n        }\r\n        if (this.right != null && this.depth <= this.right.depth) {\r\n            this.depth = this.right.depth + 1;\r\n        }\r\n    };\r\n\r\n    function nodeOrder(n1, n2) {\r\n        if (n1 === n2) {\r\n            return 0;\r\n        }\r\n\r\n        if (n1.compareDocumentPosition) {\r\n            var cpos = n1.compareDocumentPosition(n2);\r\n\r\n            if (cpos & 0x01) {\r\n                // not in the same document; return an arbitrary result (is there a better way to do this)\r\n                return 1;\r\n            }\r\n            if (cpos & 0x0A) {\r\n                // n2 precedes or contains n1\r\n                return 1;\r\n            }\r\n            if (cpos & 0x14) {\r\n                // n2 follows or is contained by n1\r\n                return -1;\r\n            }\r\n\r\n            return 0;\r\n        }\r\n\r\n        var d1 = 0,\r\n            d2 = 0;\r\n        for (var m1 = n1; m1 != null; m1 = m1.parentNode || m1.ownerElement) {\r\n            d1++;\r\n        }\r\n        for (var m2 = n2; m2 != null; m2 = m2.parentNode || m2.ownerElement) {\r\n            d2++;\r\n        }\r\n\r\n        // step up to same depth\r\n        if (d1 > d2) {\r\n            while (d1 > d2) {\r\n                n1 = n1.parentNode || n1.ownerElement;\r\n                d1--;\r\n            }\r\n            if (n1 === n2) {\r\n                return 1;\r\n            }\r\n        } else if (d2 > d1) {\r\n            while (d2 > d1) {\r\n                n2 = n2.parentNode || n2.ownerElement;\r\n                d2--;\r\n            }\r\n            if (n1 === n2) {\r\n                return -1;\r\n            }\r\n        }\r\n\r\n        var n1Par = n1.parentNode || n1.ownerElement,\r\n            n2Par = n2.parentNode || n2.ownerElement;\r\n\r\n        // find common parent\r\n        while (n1Par !== n2Par) {\r\n            n1 = n1Par;\r\n            n2 = n2Par;\r\n            n1Par = n1.parentNode || n1.ownerElement;\r\n            n2Par = n2.parentNode || n2.ownerElement;\r\n        }\r\n\r\n        var n1isAttr = Utilities.isAttribute(n1);\r\n        var n2isAttr = Utilities.isAttribute(n2);\r\n\r\n        if (n1isAttr && !n2isAttr) {\r\n            return -1;\r\n        }\r\n        if (!n1isAttr && n2isAttr) {\r\n            return 1;\r\n        }\r\n\r\n        if (n1Par) {\r\n            var cn = n1isAttr ? n1Par.attributes : n1Par.childNodes,\r\n                len = cn.length;\r\n            for (var i = 0; i < len; i += 1) {\r\n                var n = cn[i];\r\n                if (n === n1) {\r\n                    return -1;\r\n                }\r\n                if (n === n2) {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        throw new Error('Unexpected: could not determine node order');\r\n    }\r\n\r\n    AVLTree.prototype.add = function (n) {\r\n        if (n === this.node) {\r\n            return false;\r\n        }\r\n\r\n        var o = nodeOrder(n, this.node);\r\n\r\n        var ret = false;\r\n        if (o == -1) {\r\n            if (this.left == null) {\r\n                this.left = new AVLTree(n);\r\n                ret = true;\r\n            } else {\r\n                ret = this.left.add(n);\r\n                if (ret) {\r\n                    this.balance();\r\n                }\r\n            }\r\n        } else if (o == 1) {\r\n            if (this.right == null) {\r\n                this.right = new AVLTree(n);\r\n                ret = true;\r\n            } else {\r\n                ret = this.right.add(n);\r\n                if (ret) {\r\n                    this.balance();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (ret) {\r\n            this.getDepthFromChildren();\r\n        }\r\n        return ret;\r\n    };\r\n\r\n    // XNodeSet //////////////////////////////////////////////////////////////////\r\n\r\n    XNodeSet.prototype = new Expression();\r\n    XNodeSet.prototype.constructor = XNodeSet;\r\n    XNodeSet.superclass = Expression.prototype;\r\n\r\n    function XNodeSet() {\r\n        this.init();\r\n    }\r\n\r\n    XNodeSet.prototype.init = function () {\r\n        this.tree = null;\r\n        this.nodes = [];\r\n        this.size = 0;\r\n    };\r\n\r\n    XNodeSet.prototype.toString = function () {\r\n        var p = this.first();\r\n        if (p == null) {\r\n            return \"\";\r\n        }\r\n        return this.stringForNode(p);\r\n    };\r\n\r\n    XNodeSet.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XNodeSet.prototype.string = function () {\r\n        return new XString(this.toString());\r\n    };\r\n\r\n    XNodeSet.prototype.stringValue = function () {\r\n        return this.toString();\r\n    };\r\n\r\n    XNodeSet.prototype.number = function () {\r\n        return new XNumber(this.string());\r\n    };\r\n\r\n    XNodeSet.prototype.numberValue = function () {\r\n        return Number(this.string());\r\n    };\r\n\r\n    XNodeSet.prototype.bool = function () {\r\n        return new XBoolean(this.booleanValue());\r\n    };\r\n\r\n    XNodeSet.prototype.booleanValue = function () {\r\n        return !!this.size;\r\n    };\r\n\r\n    XNodeSet.prototype.nodeset = function () {\r\n        return this;\r\n    };\r\n\r\n    XNodeSet.prototype.stringForNode = function (n) {\r\n        if (n.nodeType == 9   /*Node.DOCUMENT_NODE*/ ||\r\n            n.nodeType == 1   /*Node.ELEMENT_NODE */ ||\r\n            n.nodeType === 11 /*Node.DOCUMENT_FRAGMENT*/) {\r\n            return this.stringForContainerNode(n);\r\n        }\r\n        if (n.nodeType === 2 /* Node.ATTRIBUTE_NODE */) {\r\n            return n.value || n.nodeValue;\r\n        }\r\n        if (n.isNamespaceNode) {\r\n            return n.namespace;\r\n        }\r\n        return n.nodeValue;\r\n    };\r\n\r\n    XNodeSet.prototype.stringForContainerNode = function (n) {\r\n        var s = \"\";\r\n        for (var n2 = n.firstChild; n2 != null; n2 = n2.nextSibling) {\r\n            var nt = n2.nodeType;\r\n            //  Element,    Text,       CDATA,      Document,   Document Fragment\r\n            if (nt === 1 || nt === 3 || nt === 4 || nt === 9 || nt === 11) {\r\n                s += this.stringForNode(n2);\r\n            }\r\n        }\r\n        return s;\r\n    };\r\n\r\n    XNodeSet.prototype.buildTree = function () {\r\n        if (!this.tree && this.nodes.length) {\r\n            this.tree = new AVLTree(this.nodes[0]);\r\n            for (var i = 1; i < this.nodes.length; i += 1) {\r\n                this.tree.add(this.nodes[i]);\r\n            }\r\n        }\r\n\r\n        return this.tree;\r\n    };\r\n\r\n    XNodeSet.prototype.first = function () {\r\n        var p = this.buildTree();\r\n        if (p == null) {\r\n            return null;\r\n        }\r\n        while (p.left != null) {\r\n            p = p.left;\r\n        }\r\n        return p.node;\r\n    };\r\n\r\n    XNodeSet.prototype.add = function (n) {\r\n        for (var i = 0; i < this.nodes.length; i += 1) {\r\n            if (n === this.nodes[i]) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.tree = null;\r\n        this.nodes.push(n);\r\n        this.size += 1;\r\n    };\r\n\r\n    XNodeSet.prototype.addArray = function (ns) {\r\n        var self = this;\r\n\r\n        forEach(function (x) { self.add(x); }, ns);\r\n    };\r\n\r\n    /**\r\n     * Returns an array of the node set's contents in document order\r\n     */\r\n    XNodeSet.prototype.toArray = function () {\r\n        var a = [];\r\n        this.toArrayRec(this.buildTree(), a);\r\n        return a;\r\n    };\r\n\r\n    XNodeSet.prototype.toArrayRec = function (t, a) {\r\n        if (t != null) {\r\n            this.toArrayRec(t.left, a);\r\n            a.push(t.node);\r\n            this.toArrayRec(t.right, a);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns an array of the node set's contents in arbitrary order\r\n     */\r\n    XNodeSet.prototype.toUnsortedArray = function () {\r\n        return this.nodes.slice();\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithString = function (r, o) {\r\n        var a = this.toUnsortedArray();\r\n        for (var i = 0; i < a.length; i++) {\r\n            var n = a[i];\r\n            var l = new XString(this.stringForNode(n));\r\n            var res = o(l, r);\r\n            if (res.booleanValue()) {\r\n                return res;\r\n            }\r\n        }\r\n        return new XBoolean(false);\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithNumber = function (r, o) {\r\n        var a = this.toUnsortedArray();\r\n        for (var i = 0; i < a.length; i++) {\r\n            var n = a[i];\r\n            var l = new XNumber(this.stringForNode(n));\r\n            var res = o(l, r);\r\n            if (res.booleanValue()) {\r\n                return res;\r\n            }\r\n        }\r\n        return new XBoolean(false);\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithBoolean = function (r, o) {\r\n        return o(this.bool(), r);\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithNodeSet = function (r, o) {\r\n        var arr = this.toUnsortedArray();\r\n        var oInvert = function (lop, rop) { return o(rop, lop); };\r\n\r\n        for (var i = 0; i < arr.length; i++) {\r\n            var l = new XString(this.stringForNode(arr[i]));\r\n\r\n            var res = r.compareWithString(l, oInvert);\r\n            if (res.booleanValue()) {\r\n                return res;\r\n            }\r\n        }\r\n\r\n        return new XBoolean(false);\r\n    };\r\n\r\n    XNodeSet.compareWith = curry(function (o, r) {\r\n        if (Utilities.instance_of(r, XString)) {\r\n            return this.compareWithString(r, o);\r\n        }\r\n        if (Utilities.instance_of(r, XNumber)) {\r\n            return this.compareWithNumber(r, o);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.compareWithBoolean(r, o);\r\n        }\r\n        return this.compareWithNodeSet(r, o);\r\n    });\r\n\r\n    XNodeSet.prototype.equals = XNodeSet.compareWith(Operators.equals);\r\n    XNodeSet.prototype.notequal = XNodeSet.compareWith(Operators.notequal);\r\n    XNodeSet.prototype.lessthan = XNodeSet.compareWith(Operators.lessthan);\r\n    XNodeSet.prototype.greaterthan = XNodeSet.compareWith(Operators.greaterthan);\r\n    XNodeSet.prototype.lessthanorequal = XNodeSet.compareWith(Operators.lessthanorequal);\r\n    XNodeSet.prototype.greaterthanorequal = XNodeSet.compareWith(Operators.greaterthanorequal);\r\n\r\n    XNodeSet.prototype.union = function (r) {\r\n        var ns = new XNodeSet();\r\n        ns.addArray(this.toUnsortedArray());\r\n        ns.addArray(r.toUnsortedArray());\r\n        return ns;\r\n    };\r\n\r\n    // XPathNamespace ////////////////////////////////////////////////////////////\r\n\r\n    XPathNamespace.prototype = new Object();\r\n    XPathNamespace.prototype.constructor = XPathNamespace;\r\n    XPathNamespace.superclass = Object.prototype;\r\n\r\n    function XPathNamespace(pre, ns, p) {\r\n        this.isXPathNamespace = true;\r\n        this.ownerDocument = p.ownerDocument;\r\n        this.nodeName = \"#namespace\";\r\n        this.prefix = pre;\r\n        this.localName = pre;\r\n        this.namespaceURI = ns;\r\n        this.nodeValue = ns;\r\n        this.ownerElement = p;\r\n        this.nodeType = XPathNamespace.XPATH_NAMESPACE_NODE;\r\n    }\r\n\r\n    XPathNamespace.prototype.toString = function () {\r\n        return \"{ \\\"\" + this.prefix + \"\\\", \\\"\" + this.namespaceURI + \"\\\" }\";\r\n    };\r\n\r\n    // XPathContext //////////////////////////////////////////////////////////////\r\n\r\n    XPathContext.prototype = new Object();\r\n    XPathContext.prototype.constructor = XPathContext;\r\n    XPathContext.superclass = Object.prototype;\r\n\r\n    function XPathContext(vr, nr, fr) {\r\n        this.variableResolver = vr != null ? vr : new VariableResolver();\r\n        this.namespaceResolver = nr != null ? nr : new NamespaceResolver();\r\n        this.functionResolver = fr != null ? fr : new FunctionResolver();\r\n    }\r\n\r\n    XPathContext.prototype.extend = function (newProps) {\r\n        return assign(new XPathContext(), this, newProps);\r\n    };\r\n\r\n    // VariableResolver //////////////////////////////////////////////////////////\r\n\r\n    VariableResolver.prototype = new Object();\r\n    VariableResolver.prototype.constructor = VariableResolver;\r\n    VariableResolver.superclass = Object.prototype;\r\n\r\n    function VariableResolver() {\r\n    }\r\n\r\n    VariableResolver.prototype.getVariable = function (ln, ns) {\r\n        return null;\r\n    };\r\n\r\n    // FunctionResolver //////////////////////////////////////////////////////////\r\n\r\n    FunctionResolver.prototype = new Object();\r\n    FunctionResolver.prototype.constructor = FunctionResolver;\r\n    FunctionResolver.superclass = Object.prototype;\r\n\r\n    function FunctionResolver(thisArg) {\r\n        this.thisArg = thisArg != null ? thisArg : Functions;\r\n        this.functions = new Object();\r\n        this.addStandardFunctions();\r\n    }\r\n\r\n    FunctionResolver.prototype.addStandardFunctions = function () {\r\n        this.functions[\"{}last\"] = Functions.last;\r\n        this.functions[\"{}position\"] = Functions.position;\r\n        this.functions[\"{}count\"] = Functions.count;\r\n        this.functions[\"{}id\"] = Functions.id;\r\n        this.functions[\"{}local-name\"] = Functions.localName;\r\n        this.functions[\"{}namespace-uri\"] = Functions.namespaceURI;\r\n        this.functions[\"{}name\"] = Functions.name;\r\n        this.functions[\"{}string\"] = Functions.string;\r\n        this.functions[\"{}concat\"] = Functions.concat;\r\n        this.functions[\"{}starts-with\"] = Functions.startsWith;\r\n        this.functions[\"{}contains\"] = Functions.contains;\r\n        this.functions[\"{}substring-before\"] = Functions.substringBefore;\r\n        this.functions[\"{}substring-after\"] = Functions.substringAfter;\r\n        this.functions[\"{}substring\"] = Functions.substring;\r\n        this.functions[\"{}string-length\"] = Functions.stringLength;\r\n        this.functions[\"{}normalize-space\"] = Functions.normalizeSpace;\r\n        this.functions[\"{}translate\"] = Functions.translate;\r\n        this.functions[\"{}boolean\"] = Functions.boolean_;\r\n        this.functions[\"{}not\"] = Functions.not;\r\n        this.functions[\"{}true\"] = Functions.true_;\r\n        this.functions[\"{}false\"] = Functions.false_;\r\n        this.functions[\"{}lang\"] = Functions.lang;\r\n        this.functions[\"{}number\"] = Functions.number;\r\n        this.functions[\"{}sum\"] = Functions.sum;\r\n        this.functions[\"{}floor\"] = Functions.floor;\r\n        this.functions[\"{}ceiling\"] = Functions.ceiling;\r\n        this.functions[\"{}round\"] = Functions.round;\r\n    };\r\n\r\n    FunctionResolver.prototype.addFunction = function (ns, ln, f) {\r\n        this.functions[\"{\" + ns + \"}\" + ln] = f;\r\n    };\r\n\r\n    FunctionResolver.getFunctionFromContext = function (qName, context) {\r\n        var parts = Utilities.resolveQName(qName, context.namespaceResolver, context.contextNode, false);\r\n\r\n        if (parts[0] === null) {\r\n            throw new Error(\"Cannot resolve QName \" + name);\r\n        }\r\n\r\n        return context.functionResolver.getFunction(parts[1], parts[0]);\r\n    };\r\n\r\n    FunctionResolver.prototype.getFunction = function (localName, namespace) {\r\n        return this.functions[\"{\" + namespace + \"}\" + localName];\r\n    };\r\n\r\n    // NamespaceResolver /////////////////////////////////////////////////////////\r\n\r\n    NamespaceResolver.prototype = new Object();\r\n    NamespaceResolver.prototype.constructor = NamespaceResolver;\r\n    NamespaceResolver.superclass = Object.prototype;\r\n\r\n    function NamespaceResolver() {\r\n    }\r\n\r\n    NamespaceResolver.prototype.getNamespace = function (prefix, n) {\r\n        if (prefix == \"xml\") {\r\n            return XPath.XML_NAMESPACE_URI;\r\n        } else if (prefix == \"xmlns\") {\r\n            return XPath.XMLNS_NAMESPACE_URI;\r\n        }\r\n        if (n.nodeType == 9 /*Node.DOCUMENT_NODE*/) {\r\n            n = n.documentElement;\r\n        } else if (n.nodeType == 2 /*Node.ATTRIBUTE_NODE*/) {\r\n            n = PathExpr.getOwnerElement(n);\r\n        } else if (n.nodeType != 1 /*Node.ELEMENT_NODE*/) {\r\n            n = n.parentNode;\r\n        }\r\n        while (n != null && n.nodeType == 1 /*Node.ELEMENT_NODE*/) {\r\n            var nnm = n.attributes;\r\n            for (var i = 0; i < nnm.length; i++) {\r\n                var a = nnm.item(i);\r\n                var aname = a.name || a.nodeName;\r\n                if ((aname === \"xmlns\" && prefix === \"\")\r\n                    || aname === \"xmlns:\" + prefix) {\r\n                    return String(a.value || a.nodeValue);\r\n                }\r\n            }\r\n            n = n.parentNode;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    // Functions /////////////////////////////////////////////////////////////////\r\n\r\n    var Functions = new Object();\r\n\r\n    Functions.last = function (c) {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function last expects ()\");\r\n        }\r\n\r\n        return new XNumber(c.contextSize);\r\n    };\r\n\r\n    Functions.position = function (c) {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function position expects ()\");\r\n        }\r\n\r\n        return new XNumber(c.contextPosition);\r\n    };\r\n\r\n    Functions.count = function () {\r\n        var c = arguments[0];\r\n        var ns;\r\n        if (arguments.length != 2 || !Utilities.instance_of(ns = arguments[1].evaluate(c), XNodeSet)) {\r\n            throw new Error(\"Function count expects (node-set)\");\r\n        }\r\n        return new XNumber(ns.size);\r\n    };\r\n\r\n    Functions.id = function () {\r\n        var c = arguments[0];\r\n        var id;\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function id expects (object)\");\r\n        }\r\n        id = arguments[1].evaluate(c);\r\n        if (Utilities.instance_of(id, XNodeSet)) {\r\n            id = id.toArray().join(\" \");\r\n        } else {\r\n            id = id.stringValue();\r\n        }\r\n        var ids = id.split(/[\\x0d\\x0a\\x09\\x20]+/);\r\n        var count = 0;\r\n        var ns = new XNodeSet();\r\n        var doc = c.contextNode.nodeType == 9 /*Node.DOCUMENT_NODE*/\r\n            ? c.contextNode\r\n            : c.contextNode.ownerDocument;\r\n        for (var i = 0; i < ids.length; i++) {\r\n            var n;\r\n            if (doc.getElementById) {\r\n                n = doc.getElementById(ids[i]);\r\n            } else {\r\n                n = Utilities.getElementById(doc, ids[i]);\r\n            }\r\n            if (n != null) {\r\n                ns.add(n);\r\n                count++;\r\n            }\r\n        }\r\n        return ns;\r\n    };\r\n\r\n    Functions.localName = function (c, eNode) {\r\n        var n;\r\n\r\n        if (arguments.length == 1) {\r\n            n = c.contextNode;\r\n        } else if (arguments.length == 2) {\r\n            n = eNode.evaluate(c).first();\r\n        } else {\r\n            throw new Error(\"Function local-name expects (node-set?)\");\r\n        }\r\n\r\n        if (n == null) {\r\n            return new XString(\"\");\r\n        }\r\n\r\n        return new XString(\r\n            n.localName ||     //  standard elements and attributes\r\n            n.baseName ||     //  IE\r\n            n.target ||     //  processing instructions\r\n            n.nodeName ||     //  DOM1 elements\r\n            \"\"                 //  fallback\r\n        );\r\n    };\r\n\r\n    Functions.namespaceURI = function () {\r\n        var c = arguments[0];\r\n        var n;\r\n        if (arguments.length == 1) {\r\n            n = c.contextNode;\r\n        } else if (arguments.length == 2) {\r\n            n = arguments[1].evaluate(c).first();\r\n        } else {\r\n            throw new Error(\"Function namespace-uri expects (node-set?)\");\r\n        }\r\n        if (n == null) {\r\n            return new XString(\"\");\r\n        }\r\n        return new XString(n.namespaceURI);\r\n    };\r\n\r\n    Functions.name = function () {\r\n        var c = arguments[0];\r\n        var n;\r\n        if (arguments.length == 1) {\r\n            n = c.contextNode;\r\n        } else if (arguments.length == 2) {\r\n            n = arguments[1].evaluate(c).first();\r\n        } else {\r\n            throw new Error(\"Function name expects (node-set?)\");\r\n        }\r\n        if (n == null) {\r\n            return new XString(\"\");\r\n        }\r\n        if (n.nodeType == 1 /*Node.ELEMENT_NODE*/) {\r\n            return new XString(n.nodeName);\r\n        } else if (n.nodeType == 2 /*Node.ATTRIBUTE_NODE*/) {\r\n            return new XString(n.name || n.nodeName);\r\n        } else if (n.nodeType === 7 /*Node.PROCESSING_INSTRUCTION_NODE*/) {\r\n            return new XString(n.target || n.nodeName);\r\n        } else if (n.localName == null) {\r\n            return new XString(\"\");\r\n        } else {\r\n            return new XString(n.localName);\r\n        }\r\n    };\r\n\r\n    Functions.string = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length == 1) {\r\n            return new XString(XNodeSet.prototype.stringForNode(c.contextNode));\r\n        } else if (arguments.length == 2) {\r\n            return arguments[1].evaluate(c).string();\r\n        }\r\n        throw new Error(\"Function string expects (object?)\");\r\n    };\r\n\r\n    Functions.concat = function (c) {\r\n        if (arguments.length < 3) {\r\n            throw new Error(\"Function concat expects (string, string[, string]*)\");\r\n        }\r\n        var s = \"\";\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            s += arguments[i].evaluate(c).stringValue();\r\n        }\r\n        return new XString(s);\r\n    };\r\n\r\n    Functions.startsWith = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function startsWith expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        return new XBoolean(s1.substring(0, s2.length) == s2);\r\n    };\r\n\r\n    Functions.contains = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function contains expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        return new XBoolean(s1.indexOf(s2) !== -1);\r\n    };\r\n\r\n    Functions.substringBefore = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function substring-before expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        return new XString(s1.substring(0, s1.indexOf(s2)));\r\n    };\r\n\r\n    Functions.substringAfter = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function substring-after expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        if (s2.length == 0) {\r\n            return new XString(s1);\r\n        }\r\n        var i = s1.indexOf(s2);\r\n        if (i == -1) {\r\n            return new XString(\"\");\r\n        }\r\n        return new XString(s1.substring(i + s2.length));\r\n    };\r\n\r\n    Functions.substring = function () {\r\n        var c = arguments[0];\r\n        if (!(arguments.length == 3 || arguments.length == 4)) {\r\n            throw new Error(\"Function substring expects (string, number, number?)\");\r\n        }\r\n        var s = arguments[1].evaluate(c).stringValue();\r\n        var n1 = Math.round(arguments[2].evaluate(c).numberValue()) - 1;\r\n        var n2 = arguments.length == 4 ? n1 + Math.round(arguments[3].evaluate(c).numberValue()) : undefined;\r\n        return new XString(s.substring(n1, n2));\r\n    };\r\n\r\n    Functions.stringLength = function () {\r\n        var c = arguments[0];\r\n        var s;\r\n        if (arguments.length == 1) {\r\n            s = XNodeSet.prototype.stringForNode(c.contextNode);\r\n        } else if (arguments.length == 2) {\r\n            s = arguments[1].evaluate(c).stringValue();\r\n        } else {\r\n            throw new Error(\"Function string-length expects (string?)\");\r\n        }\r\n        return new XNumber(s.length);\r\n    };\r\n\r\n    Functions.normalizeSpace = function () {\r\n        var c = arguments[0];\r\n        var s;\r\n        if (arguments.length == 1) {\r\n            s = XNodeSet.prototype.stringForNode(c.contextNode);\r\n        } else if (arguments.length == 2) {\r\n            s = arguments[1].evaluate(c).stringValue();\r\n        } else {\r\n            throw new Error(\"Function normalize-space expects (string?)\");\r\n        }\r\n        var i = 0;\r\n        var j = s.length - 1;\r\n        while (Utilities.isSpace(s.charCodeAt(j))) {\r\n            j--;\r\n        }\r\n        var t = \"\";\r\n        while (i <= j && Utilities.isSpace(s.charCodeAt(i))) {\r\n            i++;\r\n        }\r\n        while (i <= j) {\r\n            if (Utilities.isSpace(s.charCodeAt(i))) {\r\n                t += \" \";\r\n                while (i <= j && Utilities.isSpace(s.charCodeAt(i))) {\r\n                    i++;\r\n                }\r\n            } else {\r\n                t += s.charAt(i);\r\n                i++;\r\n            }\r\n        }\r\n        return new XString(t);\r\n    };\r\n\r\n    Functions.translate = function (c, eValue, eFrom, eTo) {\r\n        if (arguments.length != 4) {\r\n            throw new Error(\"Function translate expects (string, string, string)\");\r\n        }\r\n\r\n        var value = eValue.evaluate(c).stringValue();\r\n        var from = eFrom.evaluate(c).stringValue();\r\n        var to = eTo.evaluate(c).stringValue();\r\n\r\n        var cMap = reduce(function (acc, ch, i) {\r\n            if (!(ch in acc)) {\r\n                acc[ch] = i > to.length ? '' : to[i];\r\n            }\r\n            return acc;\r\n        }, {}, from);\r\n\r\n        var t = join(\r\n            '',\r\n            map(function (ch) {\r\n                return ch in cMap ? cMap[ch] : ch;\r\n            }, value)\r\n        );\r\n\r\n        return new XString(t);\r\n    };\r\n\r\n    Functions.boolean_ = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function boolean expects (object)\");\r\n        }\r\n        return arguments[1].evaluate(c).bool();\r\n    };\r\n\r\n    Functions.not = function (c, eValue) {\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function not expects (object)\");\r\n        }\r\n        return eValue.evaluate(c).bool().not();\r\n    };\r\n\r\n    Functions.true_ = function () {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function true expects ()\");\r\n        }\r\n        return XBoolean.true_;\r\n    };\r\n\r\n    Functions.false_ = function () {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function false expects ()\");\r\n        }\r\n        return XBoolean.false_;\r\n    };\r\n\r\n    Functions.lang = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function lang expects (string)\");\r\n        }\r\n        var lang;\r\n        for (var n = c.contextNode; n != null && n.nodeType != 9 /*Node.DOCUMENT_NODE*/; n = n.parentNode) {\r\n            var a = n.getAttributeNS(XPath.XML_NAMESPACE_URI, \"lang\");\r\n            if (a != null) {\r\n                lang = String(a);\r\n                break;\r\n            }\r\n        }\r\n        if (lang == null) {\r\n            return XBoolean.false_;\r\n        }\r\n        var s = arguments[1].evaluate(c).stringValue();\r\n        return new XBoolean(lang.substring(0, s.length) == s\r\n            && (lang.length == s.length || lang.charAt(s.length) == '-'));\r\n    };\r\n\r\n    Functions.number = function () {\r\n        var c = arguments[0];\r\n        if (!(arguments.length == 1 || arguments.length == 2)) {\r\n            throw new Error(\"Function number expects (object?)\");\r\n        }\r\n        if (arguments.length == 1) {\r\n            return new XNumber(XNodeSet.prototype.stringForNode(c.contextNode));\r\n        }\r\n        return arguments[1].evaluate(c).number();\r\n    };\r\n\r\n    Functions.sum = function () {\r\n        var c = arguments[0];\r\n        var ns;\r\n        if (arguments.length != 2 || !Utilities.instance_of((ns = arguments[1].evaluate(c)), XNodeSet)) {\r\n            throw new Error(\"Function sum expects (node-set)\");\r\n        }\r\n        ns = ns.toUnsortedArray();\r\n        var n = 0;\r\n        for (var i = 0; i < ns.length; i++) {\r\n            n += new XNumber(XNodeSet.prototype.stringForNode(ns[i])).numberValue();\r\n        }\r\n        return new XNumber(n);\r\n    };\r\n\r\n    Functions.floor = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function floor expects (number)\");\r\n        }\r\n        return new XNumber(Math.floor(arguments[1].evaluate(c).numberValue()));\r\n    };\r\n\r\n    Functions.ceiling = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function ceiling expects (number)\");\r\n        }\r\n        return new XNumber(Math.ceil(arguments[1].evaluate(c).numberValue()));\r\n    };\r\n\r\n    Functions.round = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function round expects (number)\");\r\n        }\r\n        return new XNumber(Math.round(arguments[1].evaluate(c).numberValue()));\r\n    };\r\n\r\n    // Utilities /////////////////////////////////////////////////////////////////\r\n\r\n    var Utilities = new Object();\r\n\r\n    Utilities.isAttribute = function (val) {\r\n        return val && (val.nodeType === 2 || val.ownerElement);\r\n    }\r\n\r\n    Utilities.splitQName = function (qn) {\r\n        var i = qn.indexOf(\":\");\r\n        if (i == -1) {\r\n            return [null, qn];\r\n        }\r\n        return [qn.substring(0, i), qn.substring(i + 1)];\r\n    };\r\n\r\n    Utilities.resolveQName = function (qn, nr, n, useDefault) {\r\n        var parts = Utilities.splitQName(qn);\r\n        if (parts[0] != null) {\r\n            parts[0] = nr.getNamespace(parts[0], n);\r\n        } else {\r\n            if (useDefault) {\r\n                parts[0] = nr.getNamespace(\"\", n);\r\n                if (parts[0] == null) {\r\n                    parts[0] = \"\";\r\n                }\r\n            } else {\r\n                parts[0] = \"\";\r\n            }\r\n        }\r\n        return parts;\r\n    };\r\n\r\n    Utilities.isSpace = function (c) {\r\n        return c == 0x9 || c == 0xd || c == 0xa || c == 0x20;\r\n    };\r\n\r\n    Utilities.isLetter = function (c) {\r\n        return c >= 0x0041 && c <= 0x005A ||\r\n            c >= 0x0061 && c <= 0x007A ||\r\n            c >= 0x00C0 && c <= 0x00D6 ||\r\n            c >= 0x00D8 && c <= 0x00F6 ||\r\n            c >= 0x00F8 && c <= 0x00FF ||\r\n            c >= 0x0100 && c <= 0x0131 ||\r\n            c >= 0x0134 && c <= 0x013E ||\r\n            c >= 0x0141 && c <= 0x0148 ||\r\n            c >= 0x014A && c <= 0x017E ||\r\n            c >= 0x0180 && c <= 0x01C3 ||\r\n            c >= 0x01CD && c <= 0x01F0 ||\r\n            c >= 0x01F4 && c <= 0x01F5 ||\r\n            c >= 0x01FA && c <= 0x0217 ||\r\n            c >= 0x0250 && c <= 0x02A8 ||\r\n            c >= 0x02BB && c <= 0x02C1 ||\r\n            c == 0x0386 ||\r\n            c >= 0x0388 && c <= 0x038A ||\r\n            c == 0x038C ||\r\n            c >= 0x038E && c <= 0x03A1 ||\r\n            c >= 0x03A3 && c <= 0x03CE ||\r\n            c >= 0x03D0 && c <= 0x03D6 ||\r\n            c == 0x03DA ||\r\n            c == 0x03DC ||\r\n            c == 0x03DE ||\r\n            c == 0x03E0 ||\r\n            c >= 0x03E2 && c <= 0x03F3 ||\r\n            c >= 0x0401 && c <= 0x040C ||\r\n            c >= 0x040E && c <= 0x044F ||\r\n            c >= 0x0451 && c <= 0x045C ||\r\n            c >= 0x045E && c <= 0x0481 ||\r\n            c >= 0x0490 && c <= 0x04C4 ||\r\n            c >= 0x04C7 && c <= 0x04C8 ||\r\n            c >= 0x04CB && c <= 0x04CC ||\r\n            c >= 0x04D0 && c <= 0x04EB ||\r\n            c >= 0x04EE && c <= 0x04F5 ||\r\n            c >= 0x04F8 && c <= 0x04F9 ||\r\n            c >= 0x0531 && c <= 0x0556 ||\r\n            c == 0x0559 ||\r\n            c >= 0x0561 && c <= 0x0586 ||\r\n            c >= 0x05D0 && c <= 0x05EA ||\r\n            c >= 0x05F0 && c <= 0x05F2 ||\r\n            c >= 0x0621 && c <= 0x063A ||\r\n            c >= 0x0641 && c <= 0x064A ||\r\n            c >= 0x0671 && c <= 0x06B7 ||\r\n            c >= 0x06BA && c <= 0x06BE ||\r\n            c >= 0x06C0 && c <= 0x06CE ||\r\n            c >= 0x06D0 && c <= 0x06D3 ||\r\n            c == 0x06D5 ||\r\n            c >= 0x06E5 && c <= 0x06E6 ||\r\n            c >= 0x0905 && c <= 0x0939 ||\r\n            c == 0x093D ||\r\n            c >= 0x0958 && c <= 0x0961 ||\r\n            c >= 0x0985 && c <= 0x098C ||\r\n            c >= 0x098F && c <= 0x0990 ||\r\n            c >= 0x0993 && c <= 0x09A8 ||\r\n            c >= 0x09AA && c <= 0x09B0 ||\r\n            c == 0x09B2 ||\r\n            c >= 0x09B6 && c <= 0x09B9 ||\r\n            c >= 0x09DC && c <= 0x09DD ||\r\n            c >= 0x09DF && c <= 0x09E1 ||\r\n            c >= 0x09F0 && c <= 0x09F1 ||\r\n            c >= 0x0A05 && c <= 0x0A0A ||\r\n            c >= 0x0A0F && c <= 0x0A10 ||\r\n            c >= 0x0A13 && c <= 0x0A28 ||\r\n            c >= 0x0A2A && c <= 0x0A30 ||\r\n            c >= 0x0A32 && c <= 0x0A33 ||\r\n            c >= 0x0A35 && c <= 0x0A36 ||\r\n            c >= 0x0A38 && c <= 0x0A39 ||\r\n            c >= 0x0A59 && c <= 0x0A5C ||\r\n            c == 0x0A5E ||\r\n            c >= 0x0A72 && c <= 0x0A74 ||\r\n            c >= 0x0A85 && c <= 0x0A8B ||\r\n            c == 0x0A8D ||\r\n            c >= 0x0A8F && c <= 0x0A91 ||\r\n            c >= 0x0A93 && c <= 0x0AA8 ||\r\n            c >= 0x0AAA && c <= 0x0AB0 ||\r\n            c >= 0x0AB2 && c <= 0x0AB3 ||\r\n            c >= 0x0AB5 && c <= 0x0AB9 ||\r\n            c == 0x0ABD ||\r\n            c == 0x0AE0 ||\r\n            c >= 0x0B05 && c <= 0x0B0C ||\r\n            c >= 0x0B0F && c <= 0x0B10 ||\r\n            c >= 0x0B13 && c <= 0x0B28 ||\r\n            c >= 0x0B2A && c <= 0x0B30 ||\r\n            c >= 0x0B32 && c <= 0x0B33 ||\r\n            c >= 0x0B36 && c <= 0x0B39 ||\r\n            c == 0x0B3D ||\r\n            c >= 0x0B5C && c <= 0x0B5D ||\r\n            c >= 0x0B5F && c <= 0x0B61 ||\r\n            c >= 0x0B85 && c <= 0x0B8A ||\r\n            c >= 0x0B8E && c <= 0x0B90 ||\r\n            c >= 0x0B92 && c <= 0x0B95 ||\r\n            c >= 0x0B99 && c <= 0x0B9A ||\r\n            c == 0x0B9C ||\r\n            c >= 0x0B9E && c <= 0x0B9F ||\r\n            c >= 0x0BA3 && c <= 0x0BA4 ||\r\n            c >= 0x0BA8 && c <= 0x0BAA ||\r\n            c >= 0x0BAE && c <= 0x0BB5 ||\r\n            c >= 0x0BB7 && c <= 0x0BB9 ||\r\n            c >= 0x0C05 && c <= 0x0C0C ||\r\n            c >= 0x0C0E && c <= 0x0C10 ||\r\n            c >= 0x0C12 && c <= 0x0C28 ||\r\n            c >= 0x0C2A && c <= 0x0C33 ||\r\n            c >= 0x0C35 && c <= 0x0C39 ||\r\n            c >= 0x0C60 && c <= 0x0C61 ||\r\n            c >= 0x0C85 && c <= 0x0C8C ||\r\n            c >= 0x0C8E && c <= 0x0C90 ||\r\n            c >= 0x0C92 && c <= 0x0CA8 ||\r\n            c >= 0x0CAA && c <= 0x0CB3 ||\r\n            c >= 0x0CB5 && c <= 0x0CB9 ||\r\n            c == 0x0CDE ||\r\n            c >= 0x0CE0 && c <= 0x0CE1 ||\r\n            c >= 0x0D05 && c <= 0x0D0C ||\r\n            c >= 0x0D0E && c <= 0x0D10 ||\r\n            c >= 0x0D12 && c <= 0x0D28 ||\r\n            c >= 0x0D2A && c <= 0x0D39 ||\r\n            c >= 0x0D60 && c <= 0x0D61 ||\r\n            c >= 0x0E01 && c <= 0x0E2E ||\r\n            c == 0x0E30 ||\r\n            c >= 0x0E32 && c <= 0x0E33 ||\r\n            c >= 0x0E40 && c <= 0x0E45 ||\r\n            c >= 0x0E81 && c <= 0x0E82 ||\r\n            c == 0x0E84 ||\r\n            c >= 0x0E87 && c <= 0x0E88 ||\r\n            c == 0x0E8A ||\r\n            c == 0x0E8D ||\r\n            c >= 0x0E94 && c <= 0x0E97 ||\r\n            c >= 0x0E99 && c <= 0x0E9F ||\r\n            c >= 0x0EA1 && c <= 0x0EA3 ||\r\n            c == 0x0EA5 ||\r\n            c == 0x0EA7 ||\r\n            c >= 0x0EAA && c <= 0x0EAB ||\r\n            c >= 0x0EAD && c <= 0x0EAE ||\r\n            c == 0x0EB0 ||\r\n            c >= 0x0EB2 && c <= 0x0EB3 ||\r\n            c == 0x0EBD ||\r\n            c >= 0x0EC0 && c <= 0x0EC4 ||\r\n            c >= 0x0F40 && c <= 0x0F47 ||\r\n            c >= 0x0F49 && c <= 0x0F69 ||\r\n            c >= 0x10A0 && c <= 0x10C5 ||\r\n            c >= 0x10D0 && c <= 0x10F6 ||\r\n            c == 0x1100 ||\r\n            c >= 0x1102 && c <= 0x1103 ||\r\n            c >= 0x1105 && c <= 0x1107 ||\r\n            c == 0x1109 ||\r\n            c >= 0x110B && c <= 0x110C ||\r\n            c >= 0x110E && c <= 0x1112 ||\r\n            c == 0x113C ||\r\n            c == 0x113E ||\r\n            c == 0x1140 ||\r\n            c == 0x114C ||\r\n            c == 0x114E ||\r\n            c == 0x1150 ||\r\n            c >= 0x1154 && c <= 0x1155 ||\r\n            c == 0x1159 ||\r\n            c >= 0x115F && c <= 0x1161 ||\r\n            c == 0x1163 ||\r\n            c == 0x1165 ||\r\n            c == 0x1167 ||\r\n            c == 0x1169 ||\r\n            c >= 0x116D && c <= 0x116E ||\r\n            c >= 0x1172 && c <= 0x1173 ||\r\n            c == 0x1175 ||\r\n            c == 0x119E ||\r\n            c == 0x11A8 ||\r\n            c == 0x11AB ||\r\n            c >= 0x11AE && c <= 0x11AF ||\r\n            c >= 0x11B7 && c <= 0x11B8 ||\r\n            c == 0x11BA ||\r\n            c >= 0x11BC && c <= 0x11C2 ||\r\n            c == 0x11EB ||\r\n            c == 0x11F0 ||\r\n            c == 0x11F9 ||\r\n            c >= 0x1E00 && c <= 0x1E9B ||\r\n            c >= 0x1EA0 && c <= 0x1EF9 ||\r\n            c >= 0x1F00 && c <= 0x1F15 ||\r\n            c >= 0x1F18 && c <= 0x1F1D ||\r\n            c >= 0x1F20 && c <= 0x1F45 ||\r\n            c >= 0x1F48 && c <= 0x1F4D ||\r\n            c >= 0x1F50 && c <= 0x1F57 ||\r\n            c == 0x1F59 ||\r\n            c == 0x1F5B ||\r\n            c == 0x1F5D ||\r\n            c >= 0x1F5F && c <= 0x1F7D ||\r\n            c >= 0x1F80 && c <= 0x1FB4 ||\r\n            c >= 0x1FB6 && c <= 0x1FBC ||\r\n            c == 0x1FBE ||\r\n            c >= 0x1FC2 && c <= 0x1FC4 ||\r\n            c >= 0x1FC6 && c <= 0x1FCC ||\r\n            c >= 0x1FD0 && c <= 0x1FD3 ||\r\n            c >= 0x1FD6 && c <= 0x1FDB ||\r\n            c >= 0x1FE0 && c <= 0x1FEC ||\r\n            c >= 0x1FF2 && c <= 0x1FF4 ||\r\n            c >= 0x1FF6 && c <= 0x1FFC ||\r\n            c == 0x2126 ||\r\n            c >= 0x212A && c <= 0x212B ||\r\n            c == 0x212E ||\r\n            c >= 0x2180 && c <= 0x2182 ||\r\n            c >= 0x3041 && c <= 0x3094 ||\r\n            c >= 0x30A1 && c <= 0x30FA ||\r\n            c >= 0x3105 && c <= 0x312C ||\r\n            c >= 0xAC00 && c <= 0xD7A3 ||\r\n            c >= 0x4E00 && c <= 0x9FA5 ||\r\n            c == 0x3007 ||\r\n            c >= 0x3021 && c <= 0x3029;\r\n    };\r\n\r\n    Utilities.isNCNameChar = function (c) {\r\n        return c >= 0x0030 && c <= 0x0039\r\n            || c >= 0x0660 && c <= 0x0669\r\n            || c >= 0x06F0 && c <= 0x06F9\r\n            || c >= 0x0966 && c <= 0x096F\r\n            || c >= 0x09E6 && c <= 0x09EF\r\n            || c >= 0x0A66 && c <= 0x0A6F\r\n            || c >= 0x0AE6 && c <= 0x0AEF\r\n            || c >= 0x0B66 && c <= 0x0B6F\r\n            || c >= 0x0BE7 && c <= 0x0BEF\r\n            || c >= 0x0C66 && c <= 0x0C6F\r\n            || c >= 0x0CE6 && c <= 0x0CEF\r\n            || c >= 0x0D66 && c <= 0x0D6F\r\n            || c >= 0x0E50 && c <= 0x0E59\r\n            || c >= 0x0ED0 && c <= 0x0ED9\r\n            || c >= 0x0F20 && c <= 0x0F29\r\n            || c == 0x002E\r\n            || c == 0x002D\r\n            || c == 0x005F\r\n            || Utilities.isLetter(c)\r\n            || c >= 0x0300 && c <= 0x0345\r\n            || c >= 0x0360 && c <= 0x0361\r\n            || c >= 0x0483 && c <= 0x0486\r\n            || c >= 0x0591 && c <= 0x05A1\r\n            || c >= 0x05A3 && c <= 0x05B9\r\n            || c >= 0x05BB && c <= 0x05BD\r\n            || c == 0x05BF\r\n            || c >= 0x05C1 && c <= 0x05C2\r\n            || c == 0x05C4\r\n            || c >= 0x064B && c <= 0x0652\r\n            || c == 0x0670\r\n            || c >= 0x06D6 && c <= 0x06DC\r\n            || c >= 0x06DD && c <= 0x06DF\r\n            || c >= 0x06E0 && c <= 0x06E4\r\n            || c >= 0x06E7 && c <= 0x06E8\r\n            || c >= 0x06EA && c <= 0x06ED\r\n            || c >= 0x0901 && c <= 0x0903\r\n            || c == 0x093C\r\n            || c >= 0x093E && c <= 0x094C\r\n            || c == 0x094D\r\n            || c >= 0x0951 && c <= 0x0954\r\n            || c >= 0x0962 && c <= 0x0963\r\n            || c >= 0x0981 && c <= 0x0983\r\n            || c == 0x09BC\r\n            || c == 0x09BE\r\n            || c == 0x09BF\r\n            || c >= 0x09C0 && c <= 0x09C4\r\n            || c >= 0x09C7 && c <= 0x09C8\r\n            || c >= 0x09CB && c <= 0x09CD\r\n            || c == 0x09D7\r\n            || c >= 0x09E2 && c <= 0x09E3\r\n            || c == 0x0A02\r\n            || c == 0x0A3C\r\n            || c == 0x0A3E\r\n            || c == 0x0A3F\r\n            || c >= 0x0A40 && c <= 0x0A42\r\n            || c >= 0x0A47 && c <= 0x0A48\r\n            || c >= 0x0A4B && c <= 0x0A4D\r\n            || c >= 0x0A70 && c <= 0x0A71\r\n            || c >= 0x0A81 && c <= 0x0A83\r\n            || c == 0x0ABC\r\n            || c >= 0x0ABE && c <= 0x0AC5\r\n            || c >= 0x0AC7 && c <= 0x0AC9\r\n            || c >= 0x0ACB && c <= 0x0ACD\r\n            || c >= 0x0B01 && c <= 0x0B03\r\n            || c == 0x0B3C\r\n            || c >= 0x0B3E && c <= 0x0B43\r\n            || c >= 0x0B47 && c <= 0x0B48\r\n            || c >= 0x0B4B && c <= 0x0B4D\r\n            || c >= 0x0B56 && c <= 0x0B57\r\n            || c >= 0x0B82 && c <= 0x0B83\r\n            || c >= 0x0BBE && c <= 0x0BC2\r\n            || c >= 0x0BC6 && c <= 0x0BC8\r\n            || c >= 0x0BCA && c <= 0x0BCD\r\n            || c == 0x0BD7\r\n            || c >= 0x0C01 && c <= 0x0C03\r\n            || c >= 0x0C3E && c <= 0x0C44\r\n            || c >= 0x0C46 && c <= 0x0C48\r\n            || c >= 0x0C4A && c <= 0x0C4D\r\n            || c >= 0x0C55 && c <= 0x0C56\r\n            || c >= 0x0C82 && c <= 0x0C83\r\n            || c >= 0x0CBE && c <= 0x0CC4\r\n            || c >= 0x0CC6 && c <= 0x0CC8\r\n            || c >= 0x0CCA && c <= 0x0CCD\r\n            || c >= 0x0CD5 && c <= 0x0CD6\r\n            || c >= 0x0D02 && c <= 0x0D03\r\n            || c >= 0x0D3E && c <= 0x0D43\r\n            || c >= 0x0D46 && c <= 0x0D48\r\n            || c >= 0x0D4A && c <= 0x0D4D\r\n            || c == 0x0D57\r\n            || c == 0x0E31\r\n            || c >= 0x0E34 && c <= 0x0E3A\r\n            || c >= 0x0E47 && c <= 0x0E4E\r\n            || c == 0x0EB1\r\n            || c >= 0x0EB4 && c <= 0x0EB9\r\n            || c >= 0x0EBB && c <= 0x0EBC\r\n            || c >= 0x0EC8 && c <= 0x0ECD\r\n            || c >= 0x0F18 && c <= 0x0F19\r\n            || c == 0x0F35\r\n            || c == 0x0F37\r\n            || c == 0x0F39\r\n            || c == 0x0F3E\r\n            || c == 0x0F3F\r\n            || c >= 0x0F71 && c <= 0x0F84\r\n            || c >= 0x0F86 && c <= 0x0F8B\r\n            || c >= 0x0F90 && c <= 0x0F95\r\n            || c == 0x0F97\r\n            || c >= 0x0F99 && c <= 0x0FAD\r\n            || c >= 0x0FB1 && c <= 0x0FB7\r\n            || c == 0x0FB9\r\n            || c >= 0x20D0 && c <= 0x20DC\r\n            || c == 0x20E1\r\n            || c >= 0x302A && c <= 0x302F\r\n            || c == 0x3099\r\n            || c == 0x309A\r\n            || c == 0x00B7\r\n            || c == 0x02D0\r\n            || c == 0x02D1\r\n            || c == 0x0387\r\n            || c == 0x0640\r\n            || c == 0x0E46\r\n            || c == 0x0EC6\r\n            || c == 0x3005\r\n            || c >= 0x3031 && c <= 0x3035\r\n            || c >= 0x309D && c <= 0x309E\r\n            || c >= 0x30FC && c <= 0x30FE;\r\n    };\r\n\r\n    Utilities.coalesceText = function (n) {\r\n        for (var m = n.firstChild; m != null; m = m.nextSibling) {\r\n            if (m.nodeType == 3 /*Node.TEXT_NODE*/ || m.nodeType == 4 /*Node.CDATA_SECTION_NODE*/) {\r\n                var s = m.nodeValue;\r\n                var first = m;\r\n                m = m.nextSibling;\r\n                while (m != null && (m.nodeType == 3 /*Node.TEXT_NODE*/ || m.nodeType == 4 /*Node.CDATA_SECTION_NODE*/)) {\r\n                    s += m.nodeValue;\r\n                    var del = m;\r\n                    m = m.nextSibling;\r\n                    del.parentNode.removeChild(del);\r\n                }\r\n                if (first.nodeType == 4 /*Node.CDATA_SECTION_NODE*/) {\r\n                    var p = first.parentNode;\r\n                    if (first.nextSibling == null) {\r\n                        p.removeChild(first);\r\n                        p.appendChild(p.ownerDocument.createTextNode(s));\r\n                    } else {\r\n                        var next = first.nextSibling;\r\n                        p.removeChild(first);\r\n                        p.insertBefore(p.ownerDocument.createTextNode(s), next);\r\n                    }\r\n                } else {\r\n                    first.nodeValue = s;\r\n                }\r\n                if (m == null) {\r\n                    break;\r\n                }\r\n            } else if (m.nodeType == 1 /*Node.ELEMENT_NODE*/) {\r\n                Utilities.coalesceText(m);\r\n            }\r\n        }\r\n    };\r\n\r\n    Utilities.instance_of = function (o, c) {\r\n        while (o != null) {\r\n            if (o.constructor === c) {\r\n                return true;\r\n            }\r\n            if (o === Object) {\r\n                return false;\r\n            }\r\n            o = o.constructor.superclass;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    Utilities.getElementById = function (n, id) {\r\n        // Note that this does not check the DTD to check for actual\r\n        // attributes of type ID, so this may be a bit wrong.\r\n        if (n.nodeType == 1 /*Node.ELEMENT_NODE*/) {\r\n            if (n.getAttribute(\"id\") == id\r\n                || n.getAttributeNS(null, \"id\") == id) {\r\n                return n;\r\n            }\r\n        }\r\n        for (var m = n.firstChild; m != null; m = m.nextSibling) {\r\n            var res = Utilities.getElementById(m, id);\r\n            if (res != null) {\r\n                return res;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    // XPathException ////////////////////////////////////////////////////////////\r\n\r\n    var XPathException = (function () {\r\n        function getMessage(code, exception) {\r\n            var msg = exception ? \": \" + exception.toString() : \"\";\r\n            switch (code) {\r\n                case XPathException.INVALID_EXPRESSION_ERR:\r\n                    return \"Invalid expression\" + msg;\r\n                case XPathException.TYPE_ERR:\r\n                    return \"Type error\" + msg;\r\n            }\r\n            return null;\r\n        }\r\n\r\n        function XPathException(code, error, message) {\r\n            var err = Error.call(this, getMessage(code, error) || message);\r\n\r\n            err.code = code;\r\n            err.exception = error;\r\n\r\n            return err;\r\n        }\r\n\r\n        XPathException.prototype = Object.create(Error.prototype);\r\n        XPathException.prototype.constructor = XPathException;\r\n        XPathException.superclass = Error;\r\n\r\n        XPathException.prototype.toString = function () {\r\n            return this.message;\r\n        };\r\n\r\n        XPathException.fromMessage = function (message, error) {\r\n            return new XPathException(null, error, message);\r\n        };\r\n\r\n        XPathException.INVALID_EXPRESSION_ERR = 51;\r\n        XPathException.TYPE_ERR = 52;\r\n\r\n        return XPathException;\r\n    })();\r\n\r\n    // XPathExpression ///////////////////////////////////////////////////////////\r\n\r\n    XPathExpression.prototype = {};\r\n    XPathExpression.prototype.constructor = XPathExpression;\r\n    XPathExpression.superclass = Object.prototype;\r\n\r\n    function XPathExpression(e, r, p) {\r\n        this.xpath = p.parse(e);\r\n        this.context = new XPathContext();\r\n        this.context.namespaceResolver = new XPathNSResolverWrapper(r);\r\n    }\r\n\r\n    XPathExpression.getOwnerDocument = function (n) {\r\n        return n.nodeType === 9 /*Node.DOCUMENT_NODE*/ ? n : n.ownerDocument;\r\n    }\r\n\r\n    XPathExpression.detectHtmlDom = function (n) {\r\n        if (!n) { return false; }\r\n\r\n        var doc = XPathExpression.getOwnerDocument(n);\r\n\r\n        try {\r\n            return doc.implementation.hasFeature(\"HTML\", \"2.0\");\r\n        } catch (e) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    XPathExpression.prototype.evaluate = function (n, t, res) {\r\n        this.context.expressionContextNode = n;\r\n        // backward compatibility - no reliable way to detect whether the DOM is HTML, but\r\n        // this library has been using this method up until now, so we will continue to use it\r\n        // ONLY when using an XPathExpression\r\n        this.context.caseInsensitive = XPathExpression.detectHtmlDom(n);\r\n\r\n        var result = this.xpath.evaluate(this.context);\r\n        return new XPathResult(result, t);\r\n    }\r\n\r\n    // XPathNSResolverWrapper ////////////////////////////////////////////////////\r\n\r\n    XPathNSResolverWrapper.prototype = {};\r\n    XPathNSResolverWrapper.prototype.constructor = XPathNSResolverWrapper;\r\n    XPathNSResolverWrapper.superclass = Object.prototype;\r\n\r\n    function XPathNSResolverWrapper(r) {\r\n        this.xpathNSResolver = r;\r\n    }\r\n\r\n    XPathNSResolverWrapper.prototype.getNamespace = function (prefix, n) {\r\n        if (this.xpathNSResolver == null) {\r\n            return null;\r\n        }\r\n        return this.xpathNSResolver.lookupNamespaceURI(prefix);\r\n    };\r\n\r\n    // NodeXPathNSResolver ///////////////////////////////////////////////////////\r\n\r\n    NodeXPathNSResolver.prototype = {};\r\n    NodeXPathNSResolver.prototype.constructor = NodeXPathNSResolver;\r\n    NodeXPathNSResolver.superclass = Object.prototype;\r\n\r\n    function NodeXPathNSResolver(n) {\r\n        this.node = n;\r\n        this.namespaceResolver = new NamespaceResolver();\r\n    }\r\n\r\n    NodeXPathNSResolver.prototype.lookupNamespaceURI = function (prefix) {\r\n        return this.namespaceResolver.getNamespace(prefix, this.node);\r\n    };\r\n\r\n    // XPathResult ///////////////////////////////////////////////////////////////\r\n\r\n    XPathResult.prototype = {};\r\n    XPathResult.prototype.constructor = XPathResult;\r\n    XPathResult.superclass = Object.prototype;\r\n\r\n    function XPathResult(v, t) {\r\n        if (t == XPathResult.ANY_TYPE) {\r\n            if (v.constructor === XString) {\r\n                t = XPathResult.STRING_TYPE;\r\n            } else if (v.constructor === XNumber) {\r\n                t = XPathResult.NUMBER_TYPE;\r\n            } else if (v.constructor === XBoolean) {\r\n                t = XPathResult.BOOLEAN_TYPE;\r\n            } else if (v.constructor === XNodeSet) {\r\n                t = XPathResult.UNORDERED_NODE_ITERATOR_TYPE;\r\n            }\r\n        }\r\n        this.resultType = t;\r\n        switch (t) {\r\n            case XPathResult.NUMBER_TYPE:\r\n                this.numberValue = v.numberValue();\r\n                return;\r\n            case XPathResult.STRING_TYPE:\r\n                this.stringValue = v.stringValue();\r\n                return;\r\n            case XPathResult.BOOLEAN_TYPE:\r\n                this.booleanValue = v.booleanValue();\r\n                return;\r\n            case XPathResult.ANY_UNORDERED_NODE_TYPE:\r\n            case XPathResult.FIRST_ORDERED_NODE_TYPE:\r\n                if (v.constructor === XNodeSet) {\r\n                    this.singleNodeValue = v.first();\r\n                    return;\r\n                }\r\n                break;\r\n            case XPathResult.UNORDERED_NODE_ITERATOR_TYPE:\r\n            case XPathResult.ORDERED_NODE_ITERATOR_TYPE:\r\n                if (v.constructor === XNodeSet) {\r\n                    this.invalidIteratorState = false;\r\n                    this.nodes = v.toArray();\r\n                    this.iteratorIndex = 0;\r\n                    return;\r\n                }\r\n                break;\r\n            case XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE:\r\n            case XPathResult.ORDERED_NODE_SNAPSHOT_TYPE:\r\n                if (v.constructor === XNodeSet) {\r\n                    this.nodes = v.toArray();\r\n                    this.snapshotLength = this.nodes.length;\r\n                    return;\r\n                }\r\n                break;\r\n        }\r\n        throw new XPathException(XPathException.TYPE_ERR);\r\n    };\r\n\r\n    XPathResult.prototype.iterateNext = function () {\r\n        if (this.resultType != XPathResult.UNORDERED_NODE_ITERATOR_TYPE\r\n            && this.resultType != XPathResult.ORDERED_NODE_ITERATOR_TYPE) {\r\n            throw new XPathException(XPathException.TYPE_ERR);\r\n        }\r\n        return this.nodes[this.iteratorIndex++];\r\n    };\r\n\r\n    XPathResult.prototype.snapshotItem = function (i) {\r\n        if (this.resultType != XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE\r\n            && this.resultType != XPathResult.ORDERED_NODE_SNAPSHOT_TYPE) {\r\n            throw new XPathException(XPathException.TYPE_ERR);\r\n        }\r\n        return this.nodes[i];\r\n    };\r\n\r\n    XPathResult.ANY_TYPE = 0;\r\n    XPathResult.NUMBER_TYPE = 1;\r\n    XPathResult.STRING_TYPE = 2;\r\n    XPathResult.BOOLEAN_TYPE = 3;\r\n    XPathResult.UNORDERED_NODE_ITERATOR_TYPE = 4;\r\n    XPathResult.ORDERED_NODE_ITERATOR_TYPE = 5;\r\n    XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE = 6;\r\n    XPathResult.ORDERED_NODE_SNAPSHOT_TYPE = 7;\r\n    XPathResult.ANY_UNORDERED_NODE_TYPE = 8;\r\n    XPathResult.FIRST_ORDERED_NODE_TYPE = 9;\r\n\r\n    // DOM 3 XPath support ///////////////////////////////////////////////////////\r\n\r\n    function installDOM3XPathSupport(doc, p) {\r\n        doc.createExpression = function (e, r) {\r\n            try {\r\n                return new XPathExpression(e, r, p);\r\n            } catch (e) {\r\n                throw new XPathException(XPathException.INVALID_EXPRESSION_ERR, e);\r\n            }\r\n        };\r\n        doc.createNSResolver = function (n) {\r\n            return new NodeXPathNSResolver(n);\r\n        };\r\n        doc.evaluate = function (e, cn, r, t, res) {\r\n            if (t < 0 || t > 9) {\r\n                throw { code: 0, toString: function () { return \"Request type not supported\"; } };\r\n            }\r\n            return doc.createExpression(e, r, p).evaluate(cn, t, res);\r\n        };\r\n    };\r\n\r\n    // ---------------------------------------------------------------------------\r\n\r\n    // Install DOM 3 XPath support for the current document.\r\n    try {\r\n        var shouldInstall = true;\r\n        try {\r\n            if (document.implementation\r\n                && document.implementation.hasFeature\r\n                && document.implementation.hasFeature(\"XPath\", null)) {\r\n                shouldInstall = false;\r\n            }\r\n        } catch (e) {\r\n        }\r\n        if (shouldInstall) {\r\n            installDOM3XPathSupport(document, new XPathParser());\r\n        }\r\n    } catch (e) {\r\n    }\r\n\r\n    // ---------------------------------------------------------------------------\r\n    // exports for node.js\r\n\r\n    installDOM3XPathSupport(exports, new XPathParser());\r\n\r\n    (function () {\r\n        var parser = new XPathParser();\r\n\r\n        var defaultNSResolver = new NamespaceResolver();\r\n        var defaultFunctionResolver = new FunctionResolver();\r\n        var defaultVariableResolver = new VariableResolver();\r\n\r\n        function makeNSResolverFromFunction(func) {\r\n            return {\r\n                getNamespace: function (prefix, node) {\r\n                    var ns = func(prefix, node);\r\n\r\n                    return ns || defaultNSResolver.getNamespace(prefix, node);\r\n                }\r\n            };\r\n        }\r\n\r\n        function makeNSResolverFromObject(obj) {\r\n            return makeNSResolverFromFunction(obj.getNamespace.bind(obj));\r\n        }\r\n\r\n        function makeNSResolverFromMap(map) {\r\n            return makeNSResolverFromFunction(function (prefix) {\r\n                return map[prefix];\r\n            });\r\n        }\r\n\r\n        function makeNSResolver(resolver) {\r\n            if (resolver && typeof resolver.getNamespace === \"function\") {\r\n                return makeNSResolverFromObject(resolver);\r\n            }\r\n\r\n            if (typeof resolver === \"function\") {\r\n                return makeNSResolverFromFunction(resolver);\r\n            }\r\n\r\n            // assume prefix -> uri mapping\r\n            if (typeof resolver === \"object\") {\r\n                return makeNSResolverFromMap(resolver);\r\n            }\r\n\r\n            return defaultNSResolver;\r\n        }\r\n\r\n        /** Converts native JavaScript types to their XPath library equivalent */\r\n        function convertValue(value) {\r\n            if (value === null ||\r\n                typeof value === \"undefined\" ||\r\n                value instanceof XString ||\r\n                value instanceof XBoolean ||\r\n                value instanceof XNumber ||\r\n                value instanceof XNodeSet) {\r\n                return value;\r\n            }\r\n\r\n            switch (typeof value) {\r\n                case \"string\": return new XString(value);\r\n                case \"boolean\": return new XBoolean(value);\r\n                case \"number\": return new XNumber(value);\r\n            }\r\n\r\n            // assume node(s)\r\n            var ns = new XNodeSet();\r\n            ns.addArray([].concat(value));\r\n            return ns;\r\n        }\r\n\r\n        function makeEvaluator(func) {\r\n            return function (context) {\r\n                var args = Array.prototype.slice.call(arguments, 1).map(function (arg) {\r\n                    return arg.evaluate(context);\r\n                });\r\n                var result = func.apply(this, [].concat(context, args));\r\n                return convertValue(result);\r\n            };\r\n        }\r\n\r\n        function makeFunctionResolverFromFunction(func) {\r\n            return {\r\n                getFunction: function (name, namespace) {\r\n                    var found = func(name, namespace);\r\n                    if (found) {\r\n                        return makeEvaluator(found);\r\n                    }\r\n                    return defaultFunctionResolver.getFunction(name, namespace);\r\n                }\r\n            };\r\n        }\r\n\r\n        function makeFunctionResolverFromObject(obj) {\r\n            return makeFunctionResolverFromFunction(obj.getFunction.bind(obj));\r\n        }\r\n\r\n        function makeFunctionResolverFromMap(map) {\r\n            return makeFunctionResolverFromFunction(function (name) {\r\n                return map[name];\r\n            });\r\n        }\r\n\r\n        function makeFunctionResolver(resolver) {\r\n            if (resolver && typeof resolver.getFunction === \"function\") {\r\n                return makeFunctionResolverFromObject(resolver);\r\n            }\r\n\r\n            if (typeof resolver === \"function\") {\r\n                return makeFunctionResolverFromFunction(resolver);\r\n            }\r\n\r\n            // assume map\r\n            if (typeof resolver === \"object\") {\r\n                return makeFunctionResolverFromMap(resolver);\r\n            }\r\n\r\n            return defaultFunctionResolver;\r\n        }\r\n\r\n        function makeVariableResolverFromFunction(func) {\r\n            return {\r\n                getVariable: function (name, namespace) {\r\n                    var value = func(name, namespace);\r\n                    return convertValue(value);\r\n                }\r\n            };\r\n        }\r\n\r\n        function makeVariableResolver(resolver) {\r\n            if (resolver) {\r\n                if (typeof resolver.getVariable === \"function\") {\r\n                    return makeVariableResolverFromFunction(resolver.getVariable.bind(resolver));\r\n                }\r\n\r\n                if (typeof resolver === \"function\") {\r\n                    return makeVariableResolverFromFunction(resolver);\r\n                }\r\n\r\n                // assume map\r\n                if (typeof resolver === \"object\") {\r\n                    return makeVariableResolverFromFunction(function (name) {\r\n                        return resolver[name];\r\n                    });\r\n                }\r\n            }\r\n\r\n            return defaultVariableResolver;\r\n        }\r\n\r\n        function copyIfPresent(prop, dest, source) {\r\n            if (prop in source) { dest[prop] = source[prop]; }\r\n        }\r\n\r\n        function makeContext(options) {\r\n            var context = new XPathContext();\r\n\r\n            if (options) {\r\n                context.namespaceResolver = makeNSResolver(options.namespaces);\r\n                context.functionResolver = makeFunctionResolver(options.functions);\r\n                context.variableResolver = makeVariableResolver(options.variables);\r\n                context.expressionContextNode = options.node;\r\n                copyIfPresent('allowAnyNamespaceForNoPrefix', context, options);\r\n                copyIfPresent('isHtml', context, options);\r\n            } else {\r\n                context.namespaceResolver = defaultNSResolver;\r\n            }\r\n\r\n            return context;\r\n        }\r\n\r\n        function evaluate(parsedExpression, options) {\r\n            var context = makeContext(options);\r\n\r\n            return parsedExpression.evaluate(context);\r\n        }\r\n\r\n        var evaluatorPrototype = {\r\n            evaluate: function (options) {\r\n                return evaluate(this.expression, options);\r\n            }\r\n\r\n            , evaluateNumber: function (options) {\r\n                return this.evaluate(options).numberValue();\r\n            }\r\n\r\n            , evaluateString: function (options) {\r\n                return this.evaluate(options).stringValue();\r\n            }\r\n\r\n            , evaluateBoolean: function (options) {\r\n                return this.evaluate(options).booleanValue();\r\n            }\r\n\r\n            , evaluateNodeSet: function (options) {\r\n                return this.evaluate(options).nodeset();\r\n            }\r\n\r\n            , select: function (options) {\r\n                return this.evaluateNodeSet(options).toArray()\r\n            }\r\n\r\n            , select1: function (options) {\r\n                return this.select(options)[0];\r\n            }\r\n        };\r\n\r\n        function parse(xpath) {\r\n            var parsed = parser.parse(xpath);\r\n\r\n            return Object.create(evaluatorPrototype, {\r\n                expression: {\r\n                    value: parsed\r\n                }\r\n            });\r\n        }\r\n\r\n        exports.parse = parse;\r\n    })();\r\n\r\n    assign(\r\n        exports,\r\n        {\r\n            XPath,\r\n            XPathParser,\r\n            XPathResult,\r\n\r\n            Step,\r\n            PathExpr,\r\n            NodeTest,\r\n            LocationPath,\r\n\r\n            OrOperation,\r\n            AndOperation,\r\n\r\n            BarOperation,\r\n\r\n            EqualsOperation,\r\n            NotEqualOperation,\r\n            LessThanOperation,\r\n            GreaterThanOperation,\r\n            LessThanOrEqualOperation,\r\n            GreaterThanOrEqualOperation,\r\n\r\n            PlusOperation,\r\n            MinusOperation,\r\n            MultiplyOperation,\r\n            DivOperation,\r\n            ModOperation,\r\n            UnaryMinusOperation,\r\n\r\n            FunctionCall,\r\n            VariableReference,\r\n\r\n            XPathContext,\r\n\r\n            XNodeSet,\r\n            XBoolean,\r\n            XString,\r\n            XNumber,\r\n\r\n            NamespaceResolver,\r\n            FunctionResolver,\r\n            VariableResolver,\r\n\r\n            Utilities,\r\n        }\r\n    );\r\n\r\n    // helper\r\n    exports.select = function (e, doc, single) {\r\n        return exports.selectWithResolver(e, doc, null, single);\r\n    };\r\n\r\n    exports.useNamespaces = function (mappings) {\r\n        var resolver = {\r\n            mappings: mappings || {},\r\n            lookupNamespaceURI: function (prefix) {\r\n                return this.mappings[prefix];\r\n            }\r\n        };\r\n\r\n        return function (e, doc, single) {\r\n            return exports.selectWithResolver(e, doc, resolver, single);\r\n        };\r\n    };\r\n\r\n    exports.selectWithResolver = function (e, doc, resolver, single) {\r\n        var expression = new XPathExpression(e, resolver, new XPathParser());\r\n        var type = XPathResult.ANY_TYPE;\r\n\r\n        var result = expression.evaluate(doc, type, null);\r\n\r\n        if (result.resultType == XPathResult.STRING_TYPE) {\r\n            result = result.stringValue;\r\n        }\r\n        else if (result.resultType == XPathResult.NUMBER_TYPE) {\r\n            result = result.numberValue;\r\n        }\r\n        else if (result.resultType == XPathResult.BOOLEAN_TYPE) {\r\n            result = result.booleanValue;\r\n        }\r\n        else {\r\n            result = result.nodes;\r\n            if (single) {\r\n                result = result[0];\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    exports.select1 = function (e, doc) {\r\n        return exports.select(e, doc, true);\r\n    };\r\n\r\n    // end non-node wrapper\r\n})(xpath);\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,IAAIA,KAAK,GAAI,OAAOC,OAAP,KAAmB,WAApB,GAAmC,EAAnC,GAAwCA,OAApD;;AAEA,CAAC,UAAUA,OAAV,EAAmB;EAChB,aADgB,CAGhB;;EACA,SAASC,KAAT,CAAeC,IAAf,EAAqB;IACjB,IAAIC,KAAK,GAAGC,KAAK,CAACC,SAAN,CAAgBF,KAA5B;IAAA,IACIG,SAAS,GAAGJ,IAAI,CAACK,MADrB;IAAA,IAEIC,OAAO,GAAG,UAAUC,IAAV,EAAgBC,EAAhB,EAAoB;MAC1B,OAAO,YAAY;QACf,OAAOA,EAAE,CAACC,KAAH,CAAS,IAAT,EAAeF,IAAI,CAACG,MAAL,CAAYT,KAAK,CAACU,IAAN,CAAWC,SAAX,CAAZ,CAAf,CAAP;MACH,CAFD;IAGH,CANL;IAAA,IAOIJ,EAAE,GAAG,YAAY;MACb,IAAID,IAAI,GAAGN,KAAK,CAACU,IAAN,CAAWC,SAAX,CAAX;MACA,OAAQL,IAAI,CAACF,MAAL,GAAcD,SAAf,GACHE,OAAO,CAACC,IAAD,EAAOC,EAAP,CADJ,GAEHR,IAAI,CAACS,KAAL,CAAW,IAAX,EAAiBR,KAAK,CAACQ,KAAN,CAAYG,SAAZ,EAAuB,CAAC,CAAD,EAAIR,SAAJ,CAAvB,CAAjB,CAFJ;IAGH,CAZL;;IAaA,OAAOI,EAAP;EACH;;EAED,IAAIK,OAAO,GAAG,UAAUC,CAAV,EAAaC,EAAb,EAAiB;IAC3B,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,EAAE,CAACV,MAAvB,EAA+BW,CAAC,IAAI,CAApC,EAAuC;MACnCF,CAAC,CAACC,EAAE,CAACC,CAAD,CAAH,EAAQA,CAAR,EAAWD,EAAX,CAAD;IACH;EACJ,CAJD;;EAMA,IAAIE,MAAM,GAAG,UAAUH,CAAV,EAAaI,IAAb,EAAmBH,EAAnB,EAAuB;IAChC,IAAII,GAAG,GAAGD,IAAV;IAEAL,OAAO,CAAC,UAAUO,CAAV,EAAaJ,CAAb,EAAgB;MAAEG,GAAG,GAAGL,CAAC,CAACK,GAAD,EAAMC,CAAN,EAASJ,CAAT,CAAP;IAAqB,CAAxC,EAA0CD,EAA1C,CAAP;IAEA,OAAOI,GAAP;EACH,CAND;;EAQA,IAAIE,GAAG,GAAG,UAAUP,CAAV,EAAaC,EAAb,EAAiB;IACvB,IAAIO,MAAM,GAAG,IAAIpB,KAAJ,CAAUa,EAAE,CAACV,MAAb,CAAb;IAEAQ,OAAO,CAAC,UAAUO,CAAV,EAAaJ,CAAb,EAAgB;MAAEM,MAAM,CAACN,CAAD,CAAN,GAAYF,CAAC,CAACM,CAAD,CAAb;IAAmB,CAAtC,EAAwCL,EAAxC,CAAP;IAEA,OAAOO,MAAP;EACH,CAND;;EAQA,IAAIC,MAAM,GAAG,UAAUT,CAAV,EAAaC,EAAb,EAAiB;IAC1B,IAAIS,QAAQ,GAAG,EAAf;IAEAX,OAAO,CAAC,UAAUO,CAAV,EAAaJ,CAAb,EAAgB;MAAE,IAAIF,CAAC,CAACM,CAAD,EAAIJ,CAAJ,CAAL,EAAa;QAAEQ,QAAQ,CAACC,IAAT,CAAcL,CAAd;MAAmB;IAAE,CAAvD,EAAyDL,EAAzD,CAAP;IAEA,OAAOS,QAAP;EACH,CAND;;EAQA,IAAIE,QAAQ,GAAG,UAAUC,MAAV,EAAkBC,KAAlB,EAAyB;IACpC,KAAK,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGW,MAAM,CAACtB,MAA3B,EAAmCW,CAAC,IAAI,CAAxC,EAA2C;MACvC,IAAIW,MAAM,CAACX,CAAD,CAAN,KAAcY,KAAlB,EAAyB;QACrB,OAAO,IAAP;MACH;IACJ;;IAED,OAAO,KAAP;EACH,CARD;;EAUA,SAASC,MAAT,CAAgBD,KAAhB,EAAuB;IAAE,OAAO,YAAY;MAAE,OAAOA,KAAP;IAAe,CAApC;EAAsC;;EAE/D,SAASE,QAAT,CAAkBV,CAAlB,EAAqB;IAAE,OAAOA,CAAC,CAACU,QAAF,EAAP;EAAsB;;EAC7C,IAAIC,IAAI,GAAG,UAAUC,CAAV,EAAajB,EAAb,EAAiB;IAAE,OAAOA,EAAE,CAACgB,IAAH,CAAQC,CAAR,CAAP;EAAoB,CAAlD;;EACA,IAAIC,IAAI,GAAG,UAAUC,IAAV,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;IAAE,OAAOF,IAAI,GAAGE,GAAP,GAAaD,GAApB;EAA0B,CAAjE;;EAEA,IAAIE,eAAe,GAAGnC,KAAK,CAACC,SAAN,CAAgBO,MAAtC,CAnEgB,CAqEhB;;EACA,IAAI4B,mBAAmB,GAAG,KAA1B;;EAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;IAClB,IAAIC,MAAM,GAAG,EAAb;;IAEA,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,GAAG,CAACnC,MAAhC,EAAwCqC,KAAK,IAAIJ,mBAAjD,EAAsE;MAClE,IAAIK,KAAK,GAAGH,GAAG,CAACvC,KAAJ,CAAUyC,KAAV,EAAiBA,KAAK,GAAGJ,mBAAzB,CAAZ;MAEAG,MAAM,GAAGJ,eAAe,CAAC5B,KAAhB,CAAsBgC,MAAtB,EAA8BE,KAA9B,CAAT;IACH;;IAED,OAAOF,MAAP;EACH;;EAED,SAASG,MAAT,CAAgBC,MAAhB,EAAwBC,OAAxB,EAAiC;IAAE;IAC/B,IAAIC,EAAE,GAAGC,MAAM,CAACH,MAAD,CAAf;;IAEA,KAAK,IAAII,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGrC,SAAS,CAACP,MAAtC,EAA8C4C,KAAK,EAAnD,EAAuD;MACnD,IAAIC,UAAU,GAAGtC,SAAS,CAACqC,KAAD,CAA1B;;MAEA,IAAIC,UAAU,IAAI,IAAlB,EAAwB;QAAE;QACtB,KAAK,IAAIC,OAAT,IAAoBD,UAApB,EAAgC;UAC5B;UACA,IAAIF,MAAM,CAAC7C,SAAP,CAAiBiD,cAAjB,CAAgCzC,IAAhC,CAAqCuC,UAArC,EAAiDC,OAAjD,CAAJ,EAA+D;YAC3DJ,EAAE,CAACI,OAAD,CAAF,GAAcD,UAAU,CAACC,OAAD,CAAxB;UACH;QACJ;MACJ;IACJ;;IAED,OAAOJ,EAAP;EACH,CArGe,CAuGhB;;;EAEAM,WAAW,CAAClD,SAAZ,GAAwB,IAAI6C,MAAJ,EAAxB;EACAK,WAAW,CAAClD,SAAZ,CAAsBmD,WAAtB,GAAoCD,WAApC;EACAA,WAAW,CAACE,UAAZ,GAAyBP,MAAM,CAAC7C,SAAhC;;EAEA,SAASkD,WAAT,GAAuB;IACnB,KAAKG,IAAL;EACH;;EAEDH,WAAW,CAAClD,SAAZ,CAAsBqD,IAAtB,GAA6B,YAAY;IACrC,KAAKC,aAAL,GAAqB,EAArB;;IAEA,KAAKA,aAAL,CAAmB,CAAnB,IAAwB,UAAUC,GAAV,EAAe;MACnC,OAAO,IAAIC,WAAJ,CAAgBD,GAAG,CAAC,CAAD,CAAnB,EAAwBA,GAAG,CAAC,CAAD,CAA3B,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,CAAnB,IAAwB,UAAUC,GAAV,EAAe;MACnC,OAAO,IAAIE,YAAJ,CAAiBF,GAAG,CAAC,CAAD,CAApB,EAAyBA,GAAG,CAAC,CAAD,CAA5B,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,CAAnB,IAAwB,UAAUC,GAAV,EAAe;MACnC,OAAO,IAAIG,eAAJ,CAAoBH,GAAG,CAAC,CAAD,CAAvB,EAA4BA,GAAG,CAAC,CAAD,CAA/B,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,CAAnB,IAAwB,UAAUC,GAAV,EAAe;MACnC,OAAO,IAAII,iBAAJ,CAAsBJ,GAAG,CAAC,CAAD,CAAzB,EAA8BA,GAAG,CAAC,CAAD,CAAjC,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAIK,iBAAJ,CAAsBL,GAAG,CAAC,CAAD,CAAzB,EAA8BA,GAAG,CAAC,CAAD,CAAjC,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAIM,oBAAJ,CAAyBN,GAAG,CAAC,CAAD,CAA5B,EAAiCA,GAAG,CAAC,CAAD,CAApC,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAIO,wBAAJ,CAA6BP,GAAG,CAAC,CAAD,CAAhC,EAAqCA,GAAG,CAAC,CAAD,CAAxC,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAIQ,2BAAJ,CAAgCR,GAAG,CAAC,CAAD,CAAnC,EAAwCA,GAAG,CAAC,CAAD,CAA3C,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAIS,aAAJ,CAAkBT,GAAG,CAAC,CAAD,CAArB,EAA0BA,GAAG,CAAC,CAAD,CAA7B,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAIU,cAAJ,CAAmBV,GAAG,CAAC,CAAD,CAAtB,EAA2BA,GAAG,CAAC,CAAD,CAA9B,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAIW,iBAAJ,CAAsBX,GAAG,CAAC,CAAD,CAAzB,EAA8BA,GAAG,CAAC,CAAD,CAAjC,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAIY,YAAJ,CAAiBZ,GAAG,CAAC,CAAD,CAApB,EAAyBA,GAAG,CAAC,CAAD,CAA5B,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAIa,YAAJ,CAAiBb,GAAG,CAAC,CAAD,CAApB,EAAyBA,GAAG,CAAC,CAAD,CAA5B,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAIc,mBAAJ,CAAwBd,GAAG,CAAC,CAAD,CAA3B,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAIe,YAAJ,CAAiBf,GAAG,CAAC,CAAD,CAApB,EAAyBA,GAAG,CAAC,CAAD,CAA5B,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAIgB,QAAJ,CAAaC,SAAb,EAAwBA,SAAxB,EAAmCjB,GAAG,CAAC,CAAD,CAAtC,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpCA,GAAG,CAAC,CAAD,CAAH,CAAOkB,YAAP,GAAsBlB,GAAG,CAAC,CAAD,CAAzB;MACA,OAAOA,GAAG,CAAC,CAAD,CAAV;IACH,CAHD;;IAIA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpCA,GAAG,CAAC,CAAD,CAAH,CAAOkB,YAAP,GAAsBlB,GAAG,CAAC,CAAD,CAAzB;MACAA,GAAG,CAAC,CAAD,CAAH,CAAOkB,YAAP,CAAoBC,KAApB,CAA0BC,OAA1B,CAAkC,IAAIC,IAAJ,CAASA,IAAI,CAACC,gBAAd,EAAgCC,QAAQ,CAACC,QAAzC,EAAmD,EAAnD,CAAlC;MACA,OAAOxB,GAAG,CAAC,CAAD,CAAV;IACH,CAJD;;IAKA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAIgB,QAAJ,CAAahB,GAAG,CAAC,CAAD,CAAhB,EAAqB,EAArB,EAAyBiB,SAAzB,CAAP;IACH,CAFD;;IAGA,KAAKlB,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,IAAIyB,SAAS,CAACC,WAAV,CAAsB1B,GAAG,CAAC,CAAD,CAAzB,EAA8BgB,QAA9B,CAAJ,EAA6C;QACzC,IAAIhB,GAAG,CAAC,CAAD,CAAH,CAAO2B,gBAAP,IAA2BV,SAA/B,EAA0C;UACtCjB,GAAG,CAAC,CAAD,CAAH,CAAO2B,gBAAP,GAA0B,EAA1B;QACH;;QACD3B,GAAG,CAAC,CAAD,CAAH,CAAO2B,gBAAP,CAAwB5D,IAAxB,CAA6BiC,GAAG,CAAC,CAAD,CAAhC;QACA,OAAOA,GAAG,CAAC,CAAD,CAAV;MACH,CAND,MAMO;QACH,OAAO,IAAIgB,QAAJ,CAAahB,GAAG,CAAC,CAAD,CAAhB,EAAqB,CAACA,GAAG,CAAC,CAAD,CAAJ,CAArB,EAA+BiB,SAA/B,CAAP;MACH;IACJ,CAVD;;IAWA,KAAKlB,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAOA,GAAG,CAAC,CAAD,CAAV;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAI4B,OAAJ,CAAY5B,GAAG,CAAC,CAAD,CAAf,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAI6B,OAAJ,CAAY7B,GAAG,CAAC,CAAD,CAAf,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAI8B,YAAJ,CAAiB9B,GAAG,CAAC,CAAD,CAApB,EAAyB,EAAzB,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAI8B,YAAJ,CAAiB9B,GAAG,CAAC,CAAD,CAApB,EAAyBA,GAAG,CAAC,CAAD,CAA5B,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,CAACA,GAAG,CAAC,CAAD,CAAJ,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpCA,GAAG,CAAC,CAAD,CAAH,CAAOoB,OAAP,CAAepB,GAAG,CAAC,CAAD,CAAlB;MACA,OAAOA,GAAG,CAAC,CAAD,CAAV;IACH,CAHD;;IAIA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAI+B,YAAJ,CAAiB,IAAjB,EAAuB,EAAvB,CAAP;IACH,CAFD;;IAGA,KAAKhC,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpCA,GAAG,CAAC,CAAD,CAAH,CAAOgC,QAAP,GAAkB,IAAlB;MACA,OAAOhC,GAAG,CAAC,CAAD,CAAV;IACH,CAHD;;IAIA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAI+B,YAAJ,CAAiB,KAAjB,EAAwB,CAAC/B,GAAG,CAAC,CAAD,CAAJ,CAAxB,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpCA,GAAG,CAAC,CAAD,CAAH,CAAOmB,KAAP,CAAapD,IAAb,CAAkBiC,GAAG,CAAC,CAAD,CAArB;MACA,OAAOA,GAAG,CAAC,CAAD,CAAV;IACH,CAHD;;IAIA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAIqB,IAAJ,CAASrB,GAAG,CAAC,CAAD,CAAZ,EAAiBA,GAAG,CAAC,CAAD,CAApB,EAAyB,EAAzB,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAIqB,IAAJ,CAASA,IAAI,CAACY,KAAd,EAAqBjC,GAAG,CAAC,CAAD,CAAxB,EAA6B,EAA7B,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAIqB,IAAJ,CAASrB,GAAG,CAAC,CAAD,CAAZ,EAAiBA,GAAG,CAAC,CAAD,CAApB,EAAyBA,GAAG,CAAC,CAAD,CAA5B,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAIqB,IAAJ,CAASA,IAAI,CAACY,KAAd,EAAqBjC,GAAG,CAAC,CAAD,CAAxB,EAA6BA,GAAG,CAAC,CAAD,CAAhC,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,CAACA,GAAG,CAAC,CAAD,CAAJ,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpCA,GAAG,CAAC,CAAD,CAAH,CAAOoB,OAAP,CAAepB,GAAG,CAAC,CAAD,CAAlB;MACA,OAAOA,GAAG,CAAC,CAAD,CAAV;IACH,CAHD;;IAIA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,IAAIA,GAAG,CAAC,CAAD,CAAH,IAAU,UAAd,EAA0B;QACtB,OAAOqB,IAAI,CAACa,QAAZ;MACH,CAFD,MAEO,IAAIlC,GAAG,CAAC,CAAD,CAAH,IAAU,kBAAd,EAAkC;QACrC,OAAOqB,IAAI,CAACc,cAAZ;MACH,CAFM,MAEA,IAAInC,GAAG,CAAC,CAAD,CAAH,IAAU,WAAd,EAA2B;QAC9B,OAAOqB,IAAI,CAACe,SAAZ;MACH,CAFM,MAEA,IAAIpC,GAAG,CAAC,CAAD,CAAH,IAAU,OAAd,EAAuB;QAC1B,OAAOqB,IAAI,CAACY,KAAZ;MACH,CAFM,MAEA,IAAIjC,GAAG,CAAC,CAAD,CAAH,IAAU,YAAd,EAA4B;QAC/B,OAAOqB,IAAI,CAACgB,UAAZ;MACH,CAFM,MAEA,IAAIrC,GAAG,CAAC,CAAD,CAAH,IAAU,oBAAd,EAAoC;QACvC,OAAOqB,IAAI,CAACC,gBAAZ;MACH,CAFM,MAEA,IAAItB,GAAG,CAAC,CAAD,CAAH,IAAU,WAAd,EAA2B;QAC9B,OAAOqB,IAAI,CAACiB,SAAZ;MACH,CAFM,MAEA,IAAItC,GAAG,CAAC,CAAD,CAAH,IAAU,mBAAd,EAAmC;QACtC,OAAOqB,IAAI,CAACkB,gBAAZ;MACH,CAFM,MAEA,IAAIvC,GAAG,CAAC,CAAD,CAAH,IAAU,WAAd,EAA2B;QAC9B,OAAOqB,IAAI,CAACmB,SAAZ;MACH,CAFM,MAEA,IAAIxC,GAAG,CAAC,CAAD,CAAH,IAAU,QAAd,EAAwB;QAC3B,OAAOqB,IAAI,CAACoB,MAAZ;MACH,CAFM,MAEA,IAAIzC,GAAG,CAAC,CAAD,CAAH,IAAU,WAAd,EAA2B;QAC9B,OAAOqB,IAAI,CAACqB,SAAZ;MACH,CAFM,MAEA,IAAI1C,GAAG,CAAC,CAAD,CAAH,IAAU,mBAAd,EAAmC;QACtC,OAAOqB,IAAI,CAACsB,gBAAZ;MACH,CAFM,MAEA,IAAI3C,GAAG,CAAC,CAAD,CAAH,IAAU,MAAd,EAAsB;QACzB,OAAOqB,IAAI,CAACuB,IAAZ;MACH;;MACD,OAAO,CAAC,CAAR;IACH,CA7BD;;IA8BA,KAAK7C,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAOqB,IAAI,CAACe,SAAZ;IACH,CAFD;;IAGA,KAAKrC,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,IAAIA,GAAG,CAAC,CAAD,CAAH,IAAU,SAAd,EAAyB;QACrB,OAAOuB,QAAQ,CAACsB,WAAhB;MACH,CAFD,MAEO,IAAI7C,GAAG,CAAC,CAAD,CAAH,IAAU,MAAd,EAAsB;QACzB,OAAOuB,QAAQ,CAACuB,QAAhB;MACH,CAFM,MAEA,IAAI9C,GAAG,CAAC,CAAD,CAAH,IAAU,wBAAd,EAAwC;QAC3C,OAAOuB,QAAQ,CAACwB,SAAhB;MACH,CAFM,MAEA,IAAI/C,GAAG,CAAC,CAAD,CAAH,IAAU,MAAd,EAAsB;QACzB,OAAOuB,QAAQ,CAACC,QAAhB;MACH;;MACD,OAAO,IAAID,QAAJ,CAAa,CAAC,CAAd,EAAiBN,SAAjB,CAAP;IACH,CAXD;;IAYA,KAAKlB,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAIuB,QAAQ,CAACyB,MAAb,CAAoBhD,GAAG,CAAC,CAAD,CAAvB,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAOA,GAAG,CAAC,CAAD,CAAV;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpCA,GAAG,CAAC,CAAD,CAAH,CAAOgC,QAAP,GAAkB,IAAlB;MACAhC,GAAG,CAAC,CAAD,CAAH,CAAOmB,KAAP,CAAaC,OAAb,CAAqB,IAAIC,IAAJ,CAASA,IAAI,CAACC,gBAAd,EAAgCC,QAAQ,CAACC,QAAzC,EAAmD,EAAnD,CAArB;MACA,OAAOxB,GAAG,CAAC,CAAD,CAAV;IACH,CAJD;;IAKA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpCA,GAAG,CAAC,CAAD,CAAH,CAAOmB,KAAP,CAAapD,IAAb,CAAkB,IAAIsD,IAAJ,CAASA,IAAI,CAACC,gBAAd,EAAgCC,QAAQ,CAACC,QAAzC,EAAmD,EAAnD,CAAlB;MACAxB,GAAG,CAAC,CAAD,CAAH,CAAOmB,KAAP,CAAapD,IAAb,CAAkBiC,GAAG,CAAC,CAAD,CAArB;MACA,OAAOA,GAAG,CAAC,CAAD,CAAV;IACH,CAJD;;IAKA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAIqB,IAAJ,CAASA,IAAI,CAACuB,IAAd,EAAoBrB,QAAQ,CAACC,QAA7B,EAAuC,EAAvC,CAAP;IACH,CAFD;;IAGA,KAAKzB,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAIqB,IAAJ,CAASA,IAAI,CAACoB,MAAd,EAAsBlB,QAAQ,CAACC,QAA/B,EAAyC,EAAzC,CAAP;IACH,CAFD;;IAGA,KAAKzB,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAIiD,iBAAJ,CAAsBjD,GAAG,CAAC,CAAD,CAAzB,CAAP;IACH,CAFD;;IAGA,KAAKD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAOuB,QAAQ,CAAC2B,WAAhB;IACH,CAFD;;IAGA,KAAKnD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAIuB,QAAQ,CAAC4B,iBAAb,CAA+BnD,GAAG,CAAC,CAAD,CAAH,CAAOoD,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAA/B,CAAP;IACH,CAFD;;IAGA,KAAKrD,aAAL,CAAmB,EAAnB,IAAyB,UAAUC,GAAV,EAAe;MACpC,OAAO,IAAIuB,QAAQ,CAAC8B,aAAb,CAA2BrD,GAAG,CAAC,CAAD,CAA9B,CAAP;IACH,CAFD;EAGH,CAhND;;EAkNAL,WAAW,CAAC2D,WAAZ,GAA0B,CACtB,sCADsB,EAEtB,sCAFsB,EAGtB,sCAHsB,EAItB,sCAJsB,EAKtB,sCALsB,EAMtB,sCANsB,EAOtB,sCAPsB,EAQtB,sCARsB,EAStB,sCATsB,EAUtB,sCAVsB,EAWtB,sCAXsB,EAYtB,sCAZsB,EAatB,sCAbsB,EActB,sCAdsB,EAetB,sCAfsB,EAgBtB,sCAhBsB,EAiBtB,sCAjBsB,EAkBtB,sCAlBsB,EAmBtB,sCAnBsB,EAoBtB,sCApBsB,EAqBtB,sCArBsB,EAsBtB,sCAtBsB,EAuBtB,sCAvBsB,EAwBtB,sCAxBsB,EAyBtB,sCAzBsB,EA0BtB,sCA1BsB,EA2BtB,sCA3BsB,EA4BtB,sCA5BsB,EA6BtB,sCA7BsB,EA8BtB,sCA9BsB,EA+BtB,sCA/BsB,EAgCtB,sCAhCsB,EAiCtB,sCAjCsB,EAkCtB,sCAlCsB,EAmCtB,sCAnCsB,EAoCtB,sCApCsB,EAqCtB,sCArCsB,EAsCtB,sCAtCsB,EAuCtB,sCAvCsB,EAwCtB,sCAxCsB,EAyCtB,sCAzCsB,EA0CtB,sCA1CsB,EA2CtB,sCA3CsB,EA4CtB,sCA5CsB,EA6CtB,sCA7CsB,EA8CtB,sCA9CsB,EA+CtB,sCA/CsB,EAgDtB,sCAhDsB,EAiDtB,sCAjDsB,EAkDtB,sCAlDsB,EAmDtB,sCAnDsB,EAoDtB,sCApDsB,EAqDtB,sCArDsB,EAsDtB,sCAtDsB,EAuDtB,sCAvDsB,EAwDtB,sCAxDsB,EAyDtB,sCAzDsB,EA0DtB,sCA1DsB,EA2DtB,sCA3DsB,EA4DtB,sCA5DsB,EA6DtB,sCA7DsB,EA8DtB,sCA9DsB,EA+DtB,sCA/DsB,EAgEtB,sCAhEsB,EAiEtB,sCAjEsB,EAkEtB,sCAlEsB,EAmEtB,sCAnEsB,EAoEtB,sCApEsB,EAqEtB,sCArEsB,EAsEtB,sCAtEsB,EAuEtB,sCAvEsB,EAwEtB,sCAxEsB,EAyEtB,sCAzEsB,EA0EtB,sCA1EsB,EA2EtB,sCA3EsB,EA4EtB,sCA5EsB,EA6EtB,sCA7EsB,EA8EtB,sCA9EsB,EA+EtB,sCA/EsB,EAgFtB,sCAhFsB,EAiFtB,sCAjFsB,EAkFtB,sCAlFsB,EAmFtB,sCAnFsB,EAoFtB,sCApFsB,EAqFtB,sCArFsB,EAsFtB,sCAtFsB,EAuFtB,sCAvFsB,EAwFtB,sCAxFsB,EAyFtB,sCAzFsB,EA0FtB,sCA1FsB,EA2FtB,sCA3FsB,EA4FtB,sCA5FsB,EA6FtB,sCA7FsB,EA8FtB,sCA9FsB,EA+FtB,sCA/FsB,EAgGtB,sCAhGsB,EAiGtB,sCAjGsB,EAkGtB,sCAlGsB,EAmGtB,sCAnGsB,EAoGtB,sCApGsB,EAqGtB,sCArGsB,EAsGtB,sCAtGsB,EAuGtB,sCAvGsB,EAwGtB,sCAxGsB,EAyGtB,sCAzGsB,EA0GtB,sCA1GsB,EA2GtB,sCA3GsB,EA4GtB,sCA5GsB,CAA1B;EA+GA3D,WAAW,CAAC4D,iBAAZ,GAAgC,CAC5B,uCAD4B,EAE5B,sCAF4B,EAG5B,sCAH4B,EAI5B,sCAJ4B,EAK5B,uCAL4B,EAM5B,uCAN4B,EAO5B,uCAP4B,EAQ5B,sCAR4B,EAS5B,sCAT4B,EAU5B,sCAV4B,EAW5B,sCAX4B,EAY5B,sCAZ4B,EAa5B,sCAb4B,EAc5B,sCAd4B,EAe5B,sCAf4B,EAgB5B,sCAhB4B,EAiB5B,uCAjB4B,EAkB5B,sCAlB4B,EAmB5B,sCAnB4B,EAoB5B,sCApB4B,EAqB5B,2CArB4B,EAsB5B,sCAtB4B,EAuB5B,sCAvB4B,EAwB5B,uCAxB4B,EAyB5B,sCAzB4B,EA0B5B,sCA1B4B,EA2B5B,sCA3B4B,EA4B5B,sCA5B4B,EA6B5B,sCA7B4B,EA8B5B,sCA9B4B,EA+B5B,sCA/B4B,EAgC5B,sCAhC4B,EAiC5B,sCAjC4B,EAkC5B,sCAlC4B,EAmC5B,sCAnC4B,EAoC5B,sCApC4B,EAqC5B,sCArC4B,EAsC5B,sCAtC4B,EAuC5B,sCAvC4B,EAwC5B,sCAxC4B,EAyC5B,sCAzC4B,EA0C5B,sCA1C4B,EA2C5B,sCA3C4B,EA4C5B,sCA5C4B,EA6C5B,sCA7C4B,EA8C5B,sCA9C4B,EA+C5B,sCA/C4B,EAgD5B,sCAhD4B,EAiD5B,sCAjD4B,EAkD5B,uCAlD4B,EAmD5B,sCAnD4B,EAoD5B,uCApD4B,EAqD5B,uCArD4B,EAsD5B,uCAtD4B,EAuD5B,uCAvD4B,EAwD5B,uCAxD4B,EAyD5B,uCAzD4B,EA0D5B,uCA1D4B,EA2D5B,uCA3D4B,EA4D5B,uCA5D4B,EA6D5B,uCA7D4B,EA8D5B,uCA9D4B,EA+D5B,uCA/D4B,EAgE5B,uCAhE4B,EAiE5B,uCAjE4B,EAkE5B,uCAlE4B,EAmE5B,uCAnE4B,EAoE5B,uCApE4B,EAqE5B,sCArE4B,EAsE5B,uCAtE4B,EAuE5B,uCAvE4B,EAwE5B,sCAxE4B,EAyE5B,sCAzE4B,EA0E5B,sCA1E4B,EA2E5B,sCA3E4B,EA4E5B,yCA5E4B,EA6E5B,sCA7E4B,EA8E5B,sCA9E4B,EA+E5B,sCA/E4B,EAgF5B,yCAhF4B,EAiF5B,yCAjF4B,EAkF5B,sCAlF4B,EAmF5B,sCAnF4B,EAoF5B,sCApF4B,EAqF5B,sCArF4B,EAsF5B,uCAtF4B,EAuF5B,uCAvF4B,EAwF5B,uCAxF4B,EAyF5B,uCAzF4B,EA0F5B,sCA1F4B,EA2F5B,sCA3F4B,EA4F5B,sCA5F4B,EA6F5B,sCA7F4B,EA8F5B,sCA9F4B,EA+F5B,sCA/F4B,EAgG5B,sCAhG4B,EAiG5B,yCAjG4B,EAkG5B,sCAlG4B,EAmG5B,sCAnG4B,EAoG5B,sCApG4B,EAqG5B,sCArG4B,EAsG5B,sCAtG4B,EAuG5B,sCAvG4B,EAwG5B,2DAxG4B,EAyG5B,sCAzG4B,EA0G5B,uCA1G4B,EA2G5B,sCA3G4B,EA4G5B,sCA5G4B,CAAhC;EA+GA5D,WAAW,CAAC6D,SAAZ,GAAwB,CACpB,+BADoB,EAEpB,+BAFoB,EAGpB,+BAHoB,EAIpB,+BAJoB,EAKpB,+BALoB,EAMpB,+BANoB,EAOpB,+BAPoB,EAQpB,+BARoB,EASpB,+BAToB,EAUpB,+BAVoB,EAWpB,+BAXoB,EAYpB,+BAZoB,EAapB,+BAboB,EAcpB,+BAdoB,EAepB,+BAfoB,EAgBpB,+BAhBoB,EAiBpB,+BAjBoB,EAkBpB,+BAlBoB,EAmBpB,+BAnBoB,EAoBpB,+BApBoB,EAqBpB,+BArBoB,EAsBpB,+BAtBoB,EAuBpB,+BAvBoB,EAwBpB,+BAxBoB,EAyBpB,+BAzBoB,EA0BpB,+BA1BoB,EA2BpB,+BA3BoB,EA4BpB,+BA5BoB,EA6BpB,+BA7BoB,EA8BpB,+BA9BoB,EA+BpB,+BA/BoB,EAgCpB,+BAhCoB,EAiCpB,+BAjCoB,EAkCpB,+BAlCoB,EAmCpB,+BAnCoB,EAoCpB,+BApCoB,EAqCpB,+BArCoB,EAsCpB,+BAtCoB,EAuCpB,+BAvCoB,EAwCpB,+BAxCoB,EAyCpB,+BAzCoB,EA0CpB,+BA1CoB,EA2CpB,+BA3CoB,EA4CpB,+BA5CoB,EA6CpB,+BA7CoB,EA8CpB,+BA9CoB,EA+CpB,+BA/CoB,EAgDpB,+BAhDoB,EAiDpB,+BAjDoB,EAkDpB,+BAlDoB,EAmDpB,+BAnDoB,EAoDpB,+BApDoB,EAqDpB,+BArDoB,EAsDpB,+BAtDoB,EAuDpB,+BAvDoB,EAwDpB,+BAxDoB,EAyDpB,+BAzDoB,EA0DpB,+BA1DoB,EA2DpB,+BA3DoB,EA4DpB,+BA5DoB,EA6DpB,+BA7DoB,EA8DpB,+BA9DoB,EA+DpB,+BA/DoB,EAgEpB,+BAhEoB,EAiEpB,kCAjEoB,EAkEpB,qCAlEoB,EAmEpB,kCAnEoB,EAoEpB,kCApEoB,EAqEpB,+BArEoB,EAsEpB,kCAtEoB,EAuEpB,kCAvEoB,EAwEpB,kCAxEoB,EAyEpB,kCAzEoB,EA0EpB,+BA1EoB,EA2EpB,+BA3EoB,EA4EpB,+BA5EoB,EA6EpB,+BA7EoB,EA8EpB,+BA9EoB,EA+EpB,+BA/EoB,EAgFpB,+BAhFoB,EAiFpB,+BAjFoB,EAkFpB,+BAlFoB,EAmFpB,+BAnFoB,EAoFpB,+BApFoB,EAqFpB,+BArFoB,EAsFpB,+BAtFoB,EAuFpB,+BAvFoB,EAwFpB,+BAxFoB,EAyFpB,+BAzFoB,EA0FpB,+BA1FoB,EA2FpB,+BA3FoB,EA4FpB,+BA5FoB,EA6FpB,+BA7FoB,EA8FpB,+BA9FoB,EA+FpB,+BA/FoB,EAgGpB,+BAhGoB,EAiGpB,+BAjGoB,EAkGpB,+BAlGoB,EAmGpB,+BAnGoB,EAoGpB,+BApGoB,EAqGpB,+BArGoB,EAsGpB,+BAtGoB,EAuGpB,+BAvGoB,EAwGpB,+BAxGoB,EAyGpB,+BAzGoB,EA0GpB,kCA1GoB,EA2GpB,+BA3GoB,EA4GpB,+BA5GoB,CAAxB;EA+GA7D,WAAW,CAAC8D,WAAZ,GAA0B,CACtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADsB,EAEtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFsB,EAGtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHsB,EAItB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAC,CAAX,EAAc,CAAd,CAJsB,EAKtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALsB,EAMtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAC,CAAX,EAAc,CAAd,CANsB,EAOtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPsB,EAQtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAC,EAAX,EAAe,CAAf,CARsB,EAStB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAC,CAAX,EAAc,CAAd,CATsB,EAUtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAVsB,EAWtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAC,EAAX,EAAe,CAAf,CAXsB,EAYtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAC,EAAX,EAAe,CAAf,CAZsB,EAatB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAC,CAAX,EAAc,CAAd,CAbsB,EActB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAC,CAAX,EAAc,CAAd,CAdsB,EAetB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAfsB,EAgBtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAC,EAAX,EAAe,CAAf,CAhBsB,EAiBtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAC,EAAX,EAAe,CAAf,CAjBsB,EAkBtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAlBsB,EAmBtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAC,EAAX,EAAe,CAAf,CAnBsB,EAoBtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAC,EAAX,EAAe,CAAf,CApBsB,EAqBtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAC,EAAX,EAAe,CAAf,CArBsB,EAsBtB,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CAtBsB,EAuBtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,EAAR,EAAY,CAAZ,CAvBsB,EAwBtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,CAxBsB,EAyBtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,EAAY,CAAC,EAAb,EAAiB,EAAjB,CAzBsB,EA0BtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,CA1BsB,EA2BtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,CA3BsB,EA4BtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,EAAY,CAAC,EAAb,EAAiB,EAAjB,CA5BsB,EA6BtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,EAAY,CAAC,CAAb,EAAgB,EAAhB,CA7BsB,EA8BtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,CA9BsB,EA+BtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,EAAY,EAAZ,CA/BsB,EAgCtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,CAhCsB,EAiCtB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAC,EAAT,EAAa,CAAb,EAAgB,CAAC,EAAjB,CAjCsB,EAkCtB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAC,EAAT,CAlCsB,EAmCtB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAC,EAAT,CAnCsB,EAoCtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,CApCsB,EAqCtB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAC,EAAT,EAAa,CAAC,EAAd,EAAkB,CAAC,EAAnB,CArCsB,EAsCtB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAC,EAAT,EAAa,CAAC,EAAd,EAAkB,EAAlB,EAAsB,CAAC,EAAvB,CAtCsB,EAuCtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,CAvCsB,EAwCtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,EAAY,CAAC,EAAb,EAAiB,EAAjB,CAxCsB,EAyCtB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,CAzCsB,EA0CtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,CA1CsB,EA2CtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,CA3CsB,EA4CtB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAC,EAAT,CA5CsB,EA6CtB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAC,EAAT,EAAa,EAAb,CA7CsB,EA8CtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,CA9CsB,EA+CtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,CA/CsB,EAgDtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,EAAY,CAAC,EAAb,EAAiB,EAAjB,CAhDsB,EAiDtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,CAjDsB,EAkDtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,EAAY,EAAZ,CAlDsB,EAmDtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,CAnDsB,EAoDtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,CApDsB,EAqDtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,EAAY,EAAZ,CArDsB,EAsDtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,CAtDsB,EAuDtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,CAvDsB,EAwDtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,EAAY,EAAZ,CAxDsB,EAyDtB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAC,EAAT,EAAa,CAAC,CAAd,CAzDsB,EA0DtB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAC,EAAT,CA1DsB,EA2DtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,CA3DsB,EA4DtB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAC,EAAT,EAAa,CAAC,EAAd,EAAkB,CAAC,EAAnB,CA5DsB,EA6DtB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAC,EAAT,EAAa,CAAC,EAAd,EAAkB,CAAC,EAAnB,EAAuB,CAAC,EAAxB,CA7DsB,EA8DtB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAC,EAAT,EAAa,EAAb,EAAiB,CAAC,EAAlB,CA9DsB,EA+DtB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,CA/DsB,EAgEtB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAC,CAAT,EAAY,EAAZ,CAhEsB,EAiEtB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,EAAY,CAAC,CAAb,EAAgB,EAAhB,CAjEsB,EAkEtB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAC,EAAT,CAlEsB,EAmEtB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAC,CAAT,CAnEsB,EAoEtB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAC,EAAT,EAAa,CAAC,EAAd,CApEsB,EAqEtB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAC,EAAT,CArEsB,EAsEtB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAC,EAAT,CAtEsB,EAuEtB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAC,EAAT,CAvEsB,CAA1B;EA0EA9D,WAAW,CAAC+D,SAAZ,GAAwB,CAAxB;EACA/D,WAAW,CAACgE,WAAZ,GAA0B,CAA1B;EACAhE,WAAW,CAACiE,WAAZ,GAA0B,CAA1B;EACAjE,WAAW,CAACkE,QAAZ,GAAuB,CAAvB;EACAlE,WAAW,CAACmE,eAAZ,GAA8B,CAA9B;EACAnE,WAAW,CAACoE,kBAAZ,GAAiC,CAAjC;EACApE,WAAW,CAACqE,GAAZ,GAAkB,CAAlB;EACArE,WAAW,CAACsE,EAAZ,GAAiB,CAAjB;EACAtE,WAAW,CAACuE,GAAZ,GAAkB,EAAlB;EACAvE,WAAW,CAACwE,GAAZ,GAAkB,EAAlB;EACAxE,WAAW,CAACyE,gBAAZ,GAA+B,EAA/B;EACAzE,WAAW,CAAC0E,YAAZ,GAA2B,EAA3B;EACA1E,WAAW,CAAC2E,QAAZ,GAAuB,EAAvB;EACA3E,WAAW,CAAC4E,OAAZ,GAAsB,EAAtB;EACA5E,WAAW,CAAC6E,MAAZ,GAAqB,EAArB;EACA7E,WAAW,CAAC8E,gBAAZ,GAA+B,EAA/B;EACA9E,WAAW,CAAC+E,KAAZ,GAAoB,EAApB;EACA/E,WAAW,CAACgF,mBAAZ,GAAkC,EAAlC;EACAhF,WAAW,CAACiF,QAAZ,GAAuB,EAAvB;EACAjF,WAAW,CAACkF,gCAAZ,GAA+C,EAA/C;EACAlF,WAAW,CAACmF,MAAZ,GAAqB,EAArB;EACAnF,WAAW,CAACoF,QAAZ,GAAuB,EAAvB;EACApF,WAAW,CAACqF,WAAZ,GAA0B,EAA1B;EACArF,WAAW,CAACsF,IAAZ,GAAmB,EAAnB;EACAtF,WAAW,CAACuF,KAAZ,GAAoB,EAApB;EACAvF,WAAW,CAACwF,GAAZ,GAAkB,EAAlB;EACAxF,WAAW,CAACyF,KAAZ,GAAoB,EAApB;EACAzF,WAAW,CAAC0F,eAAZ,GAA8B,EAA9B;EACA1F,WAAW,CAAC2F,gBAAZ,GAA+B,EAA/B;EACA3F,WAAW,CAAC4F,KAAZ,GAAoB,EAApB;EACA5F,WAAW,CAAC6F,EAAZ,GAAiB,EAAjB;EACA7F,WAAW,CAAC8F,WAAZ,GAA0B,EAA1B;EACA9F,WAAW,CAAC+F,YAAZ,GAA2B,EAA3B;EACA/F,WAAW,CAACgG,GAAZ,GAAkB,EAAlB;EACAhG,WAAW,CAACiG,MAAZ,GAAqB,EAArB;;EAEAjG,WAAW,CAAClD,SAAZ,CAAsBoJ,QAAtB,GAAiC,UAAUC,EAAV,EAAc;IAC3C,IAAIC,KAAK,GAAG,EAAZ;IACA,IAAI9H,MAAM,GAAG,EAAb;IACA,IAAIK,CAAC,GAAGwH,EAAE,GAAG,IAAb;IAEA,IAAIE,GAAG,GAAG,CAAV;IACA,IAAIC,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAR;;IACA,OAAO,CAAP,EAAU;MACN,OAAOC,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,IAAjB,IAAyBA,CAAC,IAAI,IAA9B,IAAsCA,CAAC,IAAI,IAAlD,EAAwD;QACpDA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;MACH;;MACD,IAAIC,CAAC,IAAI,IAAL,IAAaD,GAAG,IAAI1H,CAAC,CAAC3B,MAA1B,EAAkC;QAC9B;MACH;;MAED,IAAIsJ,CAAC,IAAI,GAAT,EAAc;QACVF,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAAC0F,eAAvB;QACApH,MAAM,CAACF,IAAP,CAAYkI,CAAZ;QACAA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;QACA;MACH;;MACD,IAAIC,CAAC,IAAI,GAAT,EAAc;QACVF,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAAC2F,gBAAvB;QACArH,MAAM,CAACF,IAAP,CAAYkI,CAAZ;QACAA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;QACA;MACH;;MACD,IAAIC,CAAC,IAAI,GAAT,EAAc;QACVF,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAAC8F,WAAvB;QACAxH,MAAM,CAACF,IAAP,CAAYkI,CAAZ;QACAA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;QACA;MACH;;MACD,IAAIC,CAAC,IAAI,GAAT,EAAc;QACVF,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAAC+F,YAAvB;QACAzH,MAAM,CAACF,IAAP,CAAYkI,CAAZ;QACAA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;QACA;MACH;;MACD,IAAIC,CAAC,IAAI,GAAT,EAAc;QACVF,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAAC6F,EAAvB;QACAvH,MAAM,CAACF,IAAP,CAAYkI,CAAZ;QACAA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;QACA;MACH;;MACD,IAAIC,CAAC,IAAI,GAAT,EAAc;QACVF,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAAC4F,KAAvB;QACAtH,MAAM,CAACF,IAAP,CAAYkI,CAAZ;QACAA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;QACA;MACH;;MACD,IAAIC,CAAC,IAAI,GAAT,EAAc;QACVF,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAACwF,GAAvB;QACAlH,MAAM,CAACF,IAAP,CAAYkI,CAAZ;QACAA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;QACA;MACH;;MACD,IAAIC,CAAC,IAAI,GAAT,EAAc;QACVF,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAACsF,IAAvB;QACAhH,MAAM,CAACF,IAAP,CAAYkI,CAAZ;QACAA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;QACA;MACH;;MACD,IAAIC,CAAC,IAAI,GAAT,EAAc;QACVF,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAACuF,KAAvB;QACAjH,MAAM,CAACF,IAAP,CAAYkI,CAAZ;QACAA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;QACA;MACH;;MACD,IAAIC,CAAC,IAAI,GAAT,EAAc;QACVF,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAACmF,MAAvB;QACA7G,MAAM,CAACF,IAAP,CAAYkI,CAAZ;QACAA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;QACA;MACH;;MACD,IAAIC,CAAC,IAAI,GAAT,EAAc;QACVF,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAACiG,MAAvB;QACA3H,MAAM,CAACF,IAAP,CAAYkI,CAAZ;QACAA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;QACA;MACH;;MAED,IAAIC,CAAC,IAAI,GAAT,EAAc;QACVA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;;QACA,IAAIC,CAAC,IAAI,GAAT,EAAc;UACVF,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAAC+D,SAAvB;UACAzF,MAAM,CAACF,IAAP,CAAY,IAAZ;UACAkI,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;UACA;QACH;;QACD,IAAIC,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAArB,EAA0B;UACtB,IAAIE,MAAM,GAAG,MAAMF,CAAnB;UACAA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;;UACA,OAAOC,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAAxB,EAA6B;YACzBE,MAAM,IAAIF,CAAV;YACAA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;UACH;;UACDD,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAAC6E,MAAvB;UACAvG,MAAM,CAACF,IAAP,CAAYoI,MAAZ;UACA;QACH;;QACDJ,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAACgG,GAAvB;QACA1H,MAAM,CAACF,IAAP,CAAY,GAAZ;QACA;MACH;;MAED,IAAIkI,CAAC,IAAI,IAAL,IAAaA,CAAC,IAAI,GAAtB,EAA2B;QACvB,IAAIG,SAAS,GAAGH,CAAhB;QACA,IAAII,OAAO,GAAG,EAAd;;QACA,OAAOL,GAAG,GAAG1H,CAAC,CAAC3B,MAAR,IAAkB,CAACsJ,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAT,CAAL,MAAwBI,SAAjD,EAA4D;UACxDC,OAAO,IAAIJ,CAAX;UACAD,GAAG,IAAI,CAAP;QACH;;QACD,IAAIC,CAAC,KAAKG,SAAV,EAAqB;UACjB,MAAME,cAAc,CAACC,WAAf,CAA2B,kCAAkCH,SAAlC,GAA8CC,OAAzE,CAAN;QACH;;QACDL,GAAG,IAAI,CAAP;QACAD,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAAC4E,OAAvB;QACAtG,MAAM,CAACF,IAAP,CAAYsI,OAAZ;QACAJ,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;QACA;MACH;;MAED,IAAIC,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAArB,EAA0B;QACtB,IAAIE,MAAM,GAAGF,CAAb;QACAA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;;QACA,OAAOC,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAAxB,EAA6B;UACzBE,MAAM,IAAIF,CAAV;UACAA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;QACH;;QACD,IAAIC,CAAC,IAAI,GAAT,EAAc;UACV,IAAI3H,CAAC,CAAC4H,MAAF,CAASF,GAAT,KAAiB,GAAjB,IAAwB1H,CAAC,CAAC4H,MAAF,CAASF,GAAT,KAAiB,GAA7C,EAAkD;YAC9CG,MAAM,IAAIF,CAAV;YACAE,MAAM,IAAI7H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAV;YACAC,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;;YACA,OAAOC,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAAxB,EAA6B;cACzBE,MAAM,IAAIF,CAAV;cACAA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;YACH;UACJ;QACJ;;QACDD,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAAC6E,MAAvB;QACAvG,MAAM,CAACF,IAAP,CAAYoI,MAAZ;QACA;MACH;;MAED,IAAIF,CAAC,IAAI,GAAT,EAAc;QACV,IAAIF,KAAK,CAACpJ,MAAN,GAAe,CAAnB,EAAsB;UAClB,IAAI6J,IAAI,GAAGT,KAAK,CAACA,KAAK,CAACpJ,MAAN,GAAe,CAAhB,CAAhB;;UACA,IAAI6J,IAAI,IAAI7G,WAAW,CAAC6F,EAApB,IACGgB,IAAI,IAAI7G,WAAW,CAACgE,WADvB,IAEG6C,IAAI,IAAI7G,WAAW,CAAC0F,eAFvB,IAGGmB,IAAI,IAAI7G,WAAW,CAAC8F,WAHvB,IAIGe,IAAI,IAAI7G,WAAW,CAACqE,GAJvB,IAKGwC,IAAI,IAAI7G,WAAW,CAACsE,EALvB,IAMGuC,IAAI,IAAI7G,WAAW,CAACuE,GANvB,IAOGsC,IAAI,IAAI7G,WAAW,CAACwE,GAPvB,IAQGqC,IAAI,IAAI7G,WAAW,CAACyE,gBARvB,IASGoC,IAAI,IAAI7G,WAAW,CAACyF,KATvB,IAUGoB,IAAI,IAAI7G,WAAW,CAACiE,WAVvB,IAWG4C,IAAI,IAAI7G,WAAW,CAACwF,GAXvB,IAYGqB,IAAI,IAAI7G,WAAW,CAACsF,IAZvB,IAaGuB,IAAI,IAAI7G,WAAW,CAACuF,KAbvB,IAcGsB,IAAI,IAAI7G,WAAW,CAACmF,MAdvB,IAeG0B,IAAI,IAAI7G,WAAW,CAACkE,QAfvB,IAgBG2C,IAAI,IAAI7G,WAAW,CAACoF,QAhBvB,IAiBGyB,IAAI,IAAI7G,WAAW,CAACmE,eAjBvB,IAkBG0C,IAAI,IAAI7G,WAAW,CAACqF,WAlBvB,IAmBGwB,IAAI,IAAI7G,WAAW,CAACoE,kBAnB3B,EAmB+C;YAC3CgC,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAACyE,gBAAvB;YACAnG,MAAM,CAACF,IAAP,CAAYkI,CAAZ;YACAA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;YACA;UACH;QACJ;;QACDD,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAAC8E,gBAAvB;QACAxG,MAAM,CAACF,IAAP,CAAYkI,CAAZ;QACAA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;QACA;MACH;;MAED,IAAIC,CAAC,IAAI,GAAT,EAAc;QACV,IAAI3H,CAAC,CAAC4H,MAAF,CAASF,GAAT,KAAiB,GAArB,EAA0B;UACtBD,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAACgE,WAAvB;UACA1F,MAAM,CAACF,IAAP,CAAY,IAAZ;UACAiI,GAAG;UACHC,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;UACA;QACH;MACJ;;MAED,IAAIC,CAAC,IAAI,GAAT,EAAc;QACVA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;;QACA,IAAIC,CAAC,IAAI,GAAT,EAAc;UACVF,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAACiE,WAAvB;UACA3F,MAAM,CAACF,IAAP,CAAY,IAAZ;UACAkI,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;UACA;QACH;;QACDD,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAACyF,KAAvB;QACAnH,MAAM,CAACF,IAAP,CAAY,GAAZ;QACA;MACH;;MAED,IAAIkI,CAAC,IAAI,GAAT,EAAc;QACV,IAAI3H,CAAC,CAAC4H,MAAF,CAASF,GAAT,KAAiB,GAArB,EAA0B;UACtBD,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAACkE,QAAvB;UACA5F,MAAM,CAACF,IAAP,CAAY,IAAZ;UACAiI,GAAG;UACHC,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;UACA;QACH;MACJ;;MAED,IAAIC,CAAC,IAAI,GAAT,EAAc;QACV,IAAI3H,CAAC,CAAC4H,MAAF,CAASF,GAAT,KAAiB,GAArB,EAA0B;UACtBD,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAACmE,eAAvB;UACA7F,MAAM,CAACF,IAAP,CAAY,IAAZ;UACAiI,GAAG;UACHC,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;UACA;QACH;;QACDD,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAACoF,QAAvB;QACA9G,MAAM,CAACF,IAAP,CAAY,GAAZ;QACAkI,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;QACA;MACH;;MAED,IAAIC,CAAC,IAAI,GAAT,EAAc;QACV,IAAI3H,CAAC,CAAC4H,MAAF,CAASF,GAAT,KAAiB,GAArB,EAA0B;UACtBD,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAACoE,kBAAvB;UACA9F,MAAM,CAACF,IAAP,CAAY,IAAZ;UACAiI,GAAG;UACHC,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;UACA;QACH;;QACDD,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAACqF,WAAvB;QACA/G,MAAM,CAACF,IAAP,CAAY,GAAZ;QACAkI,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;QACA;MACH;;MAED,IAAIC,CAAC,IAAI,GAAL,IAAYxE,SAAS,CAACgF,QAAV,CAAmBR,CAAC,CAACS,UAAF,CAAa,CAAb,CAAnB,CAAhB,EAAqD;QACjD,IAAIC,IAAI,GAAGV,CAAX;QACAA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;;QACA,OAAOvE,SAAS,CAACmF,YAAV,CAAuBX,CAAC,CAACS,UAAF,CAAa,CAAb,CAAvB,CAAP,EAAgD;UAC5CC,IAAI,IAAIV,CAAR;UACAA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;QACH;;QACD,IAAID,KAAK,CAACpJ,MAAN,GAAe,CAAnB,EAAsB;UAClB,IAAI6J,IAAI,GAAGT,KAAK,CAACA,KAAK,CAACpJ,MAAN,GAAe,CAAhB,CAAhB;;UACA,IAAI6J,IAAI,IAAI7G,WAAW,CAAC6F,EAApB,IACGgB,IAAI,IAAI7G,WAAW,CAACgE,WADvB,IAEG6C,IAAI,IAAI7G,WAAW,CAAC0F,eAFvB,IAGGmB,IAAI,IAAI7G,WAAW,CAAC8F,WAHvB,IAIGe,IAAI,IAAI7G,WAAW,CAACqE,GAJvB,IAKGwC,IAAI,IAAI7G,WAAW,CAACsE,EALvB,IAMGuC,IAAI,IAAI7G,WAAW,CAACuE,GANvB,IAOGsC,IAAI,IAAI7G,WAAW,CAACwE,GAPvB,IAQGqC,IAAI,IAAI7G,WAAW,CAACyE,gBARvB,IASGoC,IAAI,IAAI7G,WAAW,CAACyF,KATvB,IAUGoB,IAAI,IAAI7G,WAAW,CAACiE,WAVvB,IAWG4C,IAAI,IAAI7G,WAAW,CAACwF,GAXvB,IAYGqB,IAAI,IAAI7G,WAAW,CAACsF,IAZvB,IAaGuB,IAAI,IAAI7G,WAAW,CAACuF,KAbvB,IAcGsB,IAAI,IAAI7G,WAAW,CAACmF,MAdvB,IAeG0B,IAAI,IAAI7G,WAAW,CAACkE,QAfvB,IAgBG2C,IAAI,IAAI7G,WAAW,CAACoF,QAhBvB,IAiBGyB,IAAI,IAAI7G,WAAW,CAACmE,eAjBvB,IAkBG0C,IAAI,IAAI7G,WAAW,CAACqF,WAlBvB,IAmBGwB,IAAI,IAAI7G,WAAW,CAACoE,kBAnB3B,EAmB+C;YAC3C,IAAI4C,IAAI,IAAI,KAAZ,EAAmB;cACfZ,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAACqE,GAAvB;cACA/F,MAAM,CAACF,IAAP,CAAY4I,IAAZ;cACA;YACH;;YACD,IAAIA,IAAI,IAAI,IAAZ,EAAkB;cACdZ,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAACsE,EAAvB;cACAhG,MAAM,CAACF,IAAP,CAAY4I,IAAZ;cACA;YACH;;YACD,IAAIA,IAAI,IAAI,KAAZ,EAAmB;cACfZ,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAACuE,GAAvB;cACAjG,MAAM,CAACF,IAAP,CAAY4I,IAAZ;cACA;YACH;;YACD,IAAIA,IAAI,IAAI,KAAZ,EAAmB;cACfZ,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAACwE,GAAvB;cACAlG,MAAM,CAACF,IAAP,CAAY4I,IAAZ;cACA;YACH;UACJ;QACJ;;QACD,IAAIV,CAAC,IAAI,GAAT,EAAc;UACV,IAAI3H,CAAC,CAAC4H,MAAF,CAASF,GAAT,KAAiB,GAArB,EAA0B;YACtBD,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAACgF,mBAAvB;YACA1G,MAAM,CAACF,IAAP,CAAY4I,IAAI,GAAG,IAAnB;YACAX,GAAG;YACHC,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;YACA;UACH;;UACD,IAAI1H,CAAC,CAAC4H,MAAF,CAASF,GAAT,KAAiB,GAAjB,IAAwBvE,SAAS,CAACgF,QAAV,CAAmBnI,CAAC,CAACoI,UAAF,CAAaV,GAAb,CAAnB,CAA5B,EAAmE;YAC/DW,IAAI,IAAI,GAAR;YACAV,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;;YACA,OAAOvE,SAAS,CAACmF,YAAV,CAAuBX,CAAC,CAACS,UAAF,CAAa,CAAb,CAAvB,CAAP,EAAgD;cAC5CC,IAAI,IAAIV,CAAR;cACAA,CAAC,GAAG3H,CAAC,CAAC4H,MAAF,CAASF,GAAG,EAAZ,CAAJ;YACH;;YACD,IAAIC,CAAC,IAAI,GAAT,EAAc;cACVF,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAAC0E,YAAvB;cACApG,MAAM,CAACF,IAAP,CAAY4I,IAAZ;cACA;YACH;;YACDZ,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAAC+E,KAAvB;YACAzG,MAAM,CAACF,IAAP,CAAY4I,IAAZ;YACA;UACH;;UACD,IAAIrI,CAAC,CAAC4H,MAAF,CAASF,GAAT,KAAiB,GAArB,EAA0B;YACtBD,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAAC2E,QAAvB;YACArG,MAAM,CAACF,IAAP,CAAY4I,IAAZ;YACA;UACH;QACJ;;QACD,IAAIV,CAAC,IAAI,GAAT,EAAc;UACV,IAAIU,IAAI,IAAI,SAAR,IAAqBA,IAAI,IAAI,MAA7B,IAAuCA,IAAI,IAAI,MAAnD,EAA2D;YACvDZ,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAACiF,QAAvB;YACA3G,MAAM,CAACF,IAAP,CAAY4I,IAAZ;YACA;UACH;;UACD,IAAIA,IAAI,IAAI,wBAAZ,EAAsC;YAClC,IAAIrI,CAAC,CAAC4H,MAAF,CAASF,GAAT,KAAiB,GAArB,EAA0B;cACtBD,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAACiF,QAAvB;YACH,CAFD,MAEO;cACHmB,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAACkF,gCAAvB;YACH;;YACD5G,MAAM,CAACF,IAAP,CAAY4I,IAAZ;YACA;UACH;;UACDZ,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAAC0E,YAAvB;UACApG,MAAM,CAACF,IAAP,CAAY4I,IAAZ;UACA;QACH;;QACDZ,KAAK,CAAChI,IAAN,CAAW4B,WAAW,CAAC+E,KAAvB;QACAzG,MAAM,CAACF,IAAP,CAAY4I,IAAZ;QACA;MACH;;MAED,MAAM,IAAIE,KAAJ,CAAU,0BAA0BZ,CAApC,CAAN;IACH;;IACDF,KAAK,CAAChI,IAAN,CAAW,CAAX;IACAE,MAAM,CAACF,IAAP,CAAY,OAAZ;IACA,OAAO,CAACgI,KAAD,EAAQ9H,MAAR,CAAP;EACH,CAhWD;;EAkWA0B,WAAW,CAACmH,KAAZ,GAAoB,GAApB;EACAnH,WAAW,CAACoH,MAAZ,GAAqB,GAArB;EACApH,WAAW,CAACqH,MAAZ,GAAqB,GAArB;;EAEArH,WAAW,CAAClD,SAAZ,CAAsBwK,KAAtB,GAA8B,UAAU3I,CAAV,EAAa;IACvC,IAAIyH,KAAJ;IACA,IAAI9H,MAAJ;IACA,IAAIiJ,GAAG,GAAG,KAAKrB,QAAL,CAAcvH,CAAd,CAAV;;IACA,IAAI4I,GAAG,IAAIjG,SAAX,EAAsB;MAClB,OAAOA,SAAP;IACH;;IACD8E,KAAK,GAAGmB,GAAG,CAAC,CAAD,CAAX;IACAjJ,MAAM,GAAGiJ,GAAG,CAAC,CAAD,CAAZ;IACA,IAAIC,QAAQ,GAAG,CAAf;IACA,IAAIC,KAAK,GAAG,EAAZ;IACA,IAAIC,SAAS,GAAG,EAAhB;IACA,IAAIC,UAAU,GAAG,EAAjB;IACA,IAAIhJ,CAAJ;IACA,IAAIiJ,CAAJ;IACA,IAAIC,CAAJ;IAEAJ,KAAK,CAACrJ,IAAN,CAAW,CAAX;IACAsJ,SAAS,CAACtJ,IAAV,CAAe,CAAf;IACAuJ,UAAU,CAACvJ,IAAX,CAAgB,IAAhB;IAEAwJ,CAAC,GAAGxB,KAAK,CAACoB,QAAD,CAAT;IACAK,CAAC,GAAGvJ,MAAM,CAACkJ,QAAQ,EAAT,CAAV;;IACA,OAAO,CAAP,EAAU;MACN7I,CAAC,GAAG8I,KAAK,CAACA,KAAK,CAACzK,MAAN,GAAe,CAAhB,CAAT;;MACA,QAAQgD,WAAW,CAAC2D,WAAZ,CAAwBhF,CAAxB,EAA2B4H,MAA3B,CAAkCqB,CAAC,GAAG,CAAtC,CAAR;QACI,KAAK5H,WAAW,CAACmH,KAAjB;UACIO,SAAS,CAACtJ,IAAV,CAAe,CAACwJ,CAAhB;UACAD,UAAU,CAACvJ,IAAX,CAAgByJ,CAAhB;UACAJ,KAAK,CAACrJ,IAAN,CAAW4B,WAAW,CAAC4D,iBAAZ,CAA8BjF,CAA9B,EAAiCoI,UAAjC,CAA4Ca,CAAC,GAAG,CAAhD,IAAqD,EAAhE;UACAA,CAAC,GAAGxB,KAAK,CAACoB,QAAD,CAAT;UACAK,CAAC,GAAGvJ,MAAM,CAACkJ,QAAQ,EAAT,CAAV;UACA;;QACJ,KAAKxH,WAAW,CAACoH,MAAjB;UACI,IAAIU,GAAG,GAAG9H,WAAW,CAAC8D,WAAZ,CAAwB9D,WAAW,CAAC4D,iBAAZ,CAA8BjF,CAA9B,EAAiCoI,UAAjC,CAA4Ca,CAAC,GAAG,CAAhD,IAAqD,EAA7E,EAAiF,CAAjF,CAAV;UACA,IAAIvH,GAAG,GAAG,EAAV;;UACA,KAAK,IAAI1C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmK,GAApB,EAAyBnK,CAAC,EAA1B,EAA8B;YAC1B+J,SAAS,CAACK,GAAV;YACA1H,GAAG,CAACoB,OAAJ,CAAYkG,UAAU,CAACI,GAAX,EAAZ;YACAN,KAAK,CAACM,GAAN;UACH;;UACD,IAAIC,EAAE,GAAGP,KAAK,CAACA,KAAK,CAACzK,MAAN,GAAe,CAAhB,CAAd;UACA0K,SAAS,CAACtJ,IAAV,CAAe4B,WAAW,CAAC8D,WAAZ,CAAwB9D,WAAW,CAAC4D,iBAAZ,CAA8BjF,CAA9B,EAAiCoI,UAAjC,CAA4Ca,CAAC,GAAG,CAAhD,IAAqD,EAA7E,EAAiF,CAAjF,CAAf;;UACA,IAAI,KAAKxH,aAAL,CAAmBJ,WAAW,CAAC4D,iBAAZ,CAA8BjF,CAA9B,EAAiCoI,UAAjC,CAA4Ca,CAAC,GAAG,CAAhD,IAAqD,EAAxE,KAA+EtG,SAAnF,EAA8F;YAC1FqG,UAAU,CAACvJ,IAAX,CAAgBiC,GAAG,CAAC,CAAD,CAAnB;UACH,CAFD,MAEO;YACHsH,UAAU,CAACvJ,IAAX,CAAgB,KAAKgC,aAAL,CAAmBJ,WAAW,CAAC4D,iBAAZ,CAA8BjF,CAA9B,EAAiCoI,UAAjC,CAA4Ca,CAAC,GAAG,CAAhD,IAAqD,EAAxE,EAA4EvH,GAA5E,CAAhB;UACH;;UACDoH,KAAK,CAACrJ,IAAN,CAAW4B,WAAW,CAAC6D,SAAZ,CAAsBmE,EAAtB,EAA0BjB,UAA1B,CAAqC/G,WAAW,CAAC8D,WAAZ,CAAwB9D,WAAW,CAAC4D,iBAAZ,CAA8BjF,CAA9B,EAAiCoI,UAAjC,CAA4Ca,CAAC,GAAG,CAAhD,IAAqD,EAA7E,EAAiF,CAAjF,IAAsF,CAA3H,IAAgI,EAA3I;UACA;;QACJ,KAAK5H,WAAW,CAACqH,MAAjB;UACI,OAAO,IAAIY,KAAJ,CAAUN,UAAU,CAACI,GAAX,EAAV,CAAP;;QACJ;UACI,MAAM,IAAIb,KAAJ,CAAU,mBAAV,CAAN;MA5BR;IA8BH;EACJ,CAxDD,CApmCgB,CA8pChB;;;EAEAe,KAAK,CAACnL,SAAN,GAAkB,IAAI6C,MAAJ,EAAlB;EACAsI,KAAK,CAACnL,SAAN,CAAgBmD,WAAhB,GAA8BgI,KAA9B;EACAA,KAAK,CAAC/H,UAAN,GAAmBP,MAAM,CAAC7C,SAA1B;;EAEA,SAASmL,KAAT,CAAeC,CAAf,EAAkB;IACd,KAAKC,UAAL,GAAkBD,CAAlB;EACH;;EAEDD,KAAK,CAACnL,SAAN,CAAgB2B,QAAhB,GAA2B,YAAY;IACnC,OAAO,KAAK0J,UAAL,CAAgB1J,QAAhB,EAAP;EACH,CAFD;;EAIA,SAAS2J,UAAT,CAAoBC,GAApB,EAAyBC,IAAzB,EAA+B/J,KAA/B,EAAsC;IAClC,IAAI,EAAE+J,IAAI,IAAID,GAAV,CAAJ,EAAoB;MAChBA,GAAG,CAACC,IAAD,CAAH,GAAY/J,KAAZ;IACH;EACJ;;EAED0J,KAAK,CAACnL,SAAN,CAAgByL,QAAhB,GAA2B,UAAUjC,CAAV,EAAa;IACpCA,CAAC,CAACkC,WAAF,GAAgBlC,CAAC,CAACmC,qBAAlB;IACAnC,CAAC,CAACoC,WAAF,GAAgB,CAAhB;IACApC,CAAC,CAACqC,eAAF,GAAoB,CAApB,CAHoC,CAKpC;IACA;;IACA,IAAIrC,CAAC,CAACsC,MAAN,EAAc;MACVR,UAAU,CAAC9B,CAAD,EAAI,iBAAJ,EAAuB,IAAvB,CAAV;MACA8B,UAAU,CAAC9B,CAAD,EAAI,8BAAJ,EAAoC,IAApC,CAAV;IACH;;IAED8B,UAAU,CAAC9B,CAAD,EAAI,iBAAJ,EAAuB,KAAvB,CAAV;IAEA,OAAO,KAAK6B,UAAL,CAAgBI,QAAhB,CAAyBjC,CAAzB,CAAP;EACH,CAfD;;EAiBA2B,KAAK,CAACY,iBAAN,GAA0B,sCAA1B;EACAZ,KAAK,CAACa,mBAAN,GAA4B,+BAA5B,CApsCgB,CAssChB;;EAEAC,UAAU,CAACjM,SAAX,GAAuB,IAAI6C,MAAJ,EAAvB;EACAoJ,UAAU,CAACjM,SAAX,CAAqBmD,WAArB,GAAmC8I,UAAnC;EACAA,UAAU,CAAC7I,UAAX,GAAwBP,MAAM,CAAC7C,SAA/B;;EAEA,SAASiM,UAAT,GAAsB,CACrB;;EAEDA,UAAU,CAACjM,SAAX,CAAqBqD,IAArB,GAA4B,YAAY,CACvC,CADD;;EAGA4I,UAAU,CAACjM,SAAX,CAAqB2B,QAArB,GAAgC,YAAY;IACxC,OAAO,cAAP;EACH,CAFD;;EAIAsK,UAAU,CAACjM,SAAX,CAAqByL,QAArB,GAAgC,UAAUjC,CAAV,EAAa;IACzC,MAAM,IAAIY,KAAJ,CAAU,gCAAV,CAAN;EACH,CAFD,CAttCgB,CA0tChB;;;EAEA8B,cAAc,CAAClM,SAAf,GAA2B,IAAIiM,UAAJ,EAA3B;EACAC,cAAc,CAAClM,SAAf,CAAyBmD,WAAzB,GAAuC+I,cAAvC;EACAA,cAAc,CAAC9I,UAAf,GAA4B6I,UAAU,CAACjM,SAAvC;;EAEA,SAASkM,cAAT,CAAwB3I,GAAxB,EAA6B;IACzB,IAAI9C,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAUE,GAAV;IACH;EACJ;;EAED2I,cAAc,CAAClM,SAAf,CAAyBqD,IAAzB,GAAgC,UAAUE,GAAV,EAAe;IAC3C,KAAKA,GAAL,GAAWA,GAAX;EACH,CAFD,CAtuCgB,CA0uChB;;;EAEAc,mBAAmB,CAACrE,SAApB,GAAgC,IAAIkM,cAAJ,EAAhC;EACA7H,mBAAmB,CAACrE,SAApB,CAA8BmD,WAA9B,GAA4CkB,mBAA5C;EACAA,mBAAmB,CAACjB,UAApB,GAAiC8I,cAAc,CAAClM,SAAhD;;EAEA,SAASqE,mBAAT,CAA6Bd,GAA7B,EAAkC;IAC9B,IAAI9C,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAUE,GAAV;IACH;EACJ;;EAEDc,mBAAmB,CAACrE,SAApB,CAA8BqD,IAA9B,GAAqC,UAAUE,GAAV,EAAe;IAChDc,mBAAmB,CAACjB,UAApB,CAA+BC,IAA/B,CAAoC7C,IAApC,CAAyC,IAAzC,EAA+C+C,GAA/C;EACH,CAFD;;EAIAc,mBAAmB,CAACrE,SAApB,CAA8ByL,QAA9B,GAAyC,UAAUjC,CAAV,EAAa;IAClD,OAAO,KAAKjG,GAAL,CAASkI,QAAT,CAAkBjC,CAAlB,EAAqBE,MAArB,GAA8ByC,MAA9B,EAAP;EACH,CAFD;;EAIA9H,mBAAmB,CAACrE,SAApB,CAA8B2B,QAA9B,GAAyC,YAAY;IACjD,OAAO,MAAM,KAAK4B,GAAL,CAAS5B,QAAT,EAAb;EACH,CAFD,CA9vCgB,CAkwChB;;;EAEAyK,eAAe,CAACpM,SAAhB,GAA4B,IAAIiM,UAAJ,EAA5B;EACAG,eAAe,CAACpM,SAAhB,CAA0BmD,WAA1B,GAAwCiJ,eAAxC;EACAA,eAAe,CAAChJ,UAAhB,GAA6B6I,UAAU,CAACjM,SAAxC;;EAEA,SAASoM,eAAT,CAAyBC,GAAzB,EAA8B9I,GAA9B,EAAmC;IAC/B,IAAI9C,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAUgJ,GAAV,EAAe9I,GAAf;IACH;EACJ;;EAED6I,eAAe,CAACpM,SAAhB,CAA0BqD,IAA1B,GAAiC,UAAUgJ,GAAV,EAAe9I,GAAf,EAAoB;IACjD,KAAK8I,GAAL,GAAWA,GAAX;IACA,KAAK9I,GAAL,GAAWA,GAAX;EACH,CAHD,CA9wCgB,CAmxChB;;;EAEAC,WAAW,CAACxD,SAAZ,GAAwB,IAAIoM,eAAJ,EAAxB;EACA5I,WAAW,CAACxD,SAAZ,CAAsBmD,WAAtB,GAAoCK,WAApC;EACAA,WAAW,CAACJ,UAAZ,GAAyBgJ,eAAe,CAACpM,SAAzC;;EAEA,SAASwD,WAAT,CAAqB6I,GAArB,EAA0B9I,GAA1B,EAA+B;IAC3B,IAAI9C,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAUgJ,GAAV,EAAe9I,GAAf;IACH;EACJ;;EAEDC,WAAW,CAACxD,SAAZ,CAAsBqD,IAAtB,GAA6B,UAAUgJ,GAAV,EAAe9I,GAAf,EAAoB;IAC7CC,WAAW,CAACJ,UAAZ,CAAuBC,IAAvB,CAA4B7C,IAA5B,CAAiC,IAAjC,EAAuC6L,GAAvC,EAA4C9I,GAA5C;EACH,CAFD;;EAIAC,WAAW,CAACxD,SAAZ,CAAsB2B,QAAtB,GAAiC,YAAY;IACzC,OAAO,MAAM,KAAK0K,GAAL,CAAS1K,QAAT,EAAN,GAA4B,MAA5B,GAAqC,KAAK4B,GAAL,CAAS5B,QAAT,EAArC,GAA2D,GAAlE;EACH,CAFD;;EAIA6B,WAAW,CAACxD,SAAZ,CAAsByL,QAAtB,GAAiC,UAAUjC,CAAV,EAAa;IAC1C,IAAI8C,CAAC,GAAG,KAAKD,GAAL,CAASZ,QAAT,CAAkBjC,CAAlB,EAAqB+C,IAArB,EAAR;;IACA,IAAID,CAAC,CAACE,YAAF,EAAJ,EAAsB;MAClB,OAAOF,CAAP;IACH;;IACD,OAAO,KAAK/I,GAAL,CAASkI,QAAT,CAAkBjC,CAAlB,EAAqB+C,IAArB,EAAP;EACH,CAND,CAvyCgB,CA+yChB;;;EAEA9I,YAAY,CAACzD,SAAb,GAAyB,IAAIoM,eAAJ,EAAzB;EACA3I,YAAY,CAACzD,SAAb,CAAuBmD,WAAvB,GAAqCM,YAArC;EACAA,YAAY,CAACL,UAAb,GAA0BgJ,eAAe,CAACpM,SAA1C;;EAEA,SAASyD,YAAT,CAAsB4I,GAAtB,EAA2B9I,GAA3B,EAAgC;IAC5B,IAAI9C,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAUgJ,GAAV,EAAe9I,GAAf;IACH;EACJ;;EAEDE,YAAY,CAACzD,SAAb,CAAuBqD,IAAvB,GAA8B,UAAUgJ,GAAV,EAAe9I,GAAf,EAAoB;IAC9CE,YAAY,CAACL,UAAb,CAAwBC,IAAxB,CAA6B7C,IAA7B,CAAkC,IAAlC,EAAwC6L,GAAxC,EAA6C9I,GAA7C;EACH,CAFD;;EAIAE,YAAY,CAACzD,SAAb,CAAuB2B,QAAvB,GAAkC,YAAY;IAC1C,OAAO,MAAM,KAAK0K,GAAL,CAAS1K,QAAT,EAAN,GAA4B,OAA5B,GAAsC,KAAK4B,GAAL,CAAS5B,QAAT,EAAtC,GAA4D,GAAnE;EACH,CAFD;;EAIA8B,YAAY,CAACzD,SAAb,CAAuByL,QAAvB,GAAkC,UAAUjC,CAAV,EAAa;IAC3C,IAAI8C,CAAC,GAAG,KAAKD,GAAL,CAASZ,QAAT,CAAkBjC,CAAlB,EAAqB+C,IAArB,EAAR;;IACA,IAAI,CAACD,CAAC,CAACE,YAAF,EAAL,EAAuB;MACnB,OAAOF,CAAP;IACH;;IACD,OAAO,KAAK/I,GAAL,CAASkI,QAAT,CAAkBjC,CAAlB,EAAqB+C,IAArB,EAAP;EACH,CAND,CAn0CgB,CA20ChB;;;EAEA7I,eAAe,CAAC1D,SAAhB,GAA4B,IAAIoM,eAAJ,EAA5B;EACA1I,eAAe,CAAC1D,SAAhB,CAA0BmD,WAA1B,GAAwCO,eAAxC;EACAA,eAAe,CAACN,UAAhB,GAA6BgJ,eAAe,CAACpM,SAA7C;;EAEA,SAAS0D,eAAT,CAAyB2I,GAAzB,EAA8B9I,GAA9B,EAAmC;IAC/B,IAAI9C,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAUgJ,GAAV,EAAe9I,GAAf;IACH;EACJ;;EAEDG,eAAe,CAAC1D,SAAhB,CAA0BqD,IAA1B,GAAiC,UAAUgJ,GAAV,EAAe9I,GAAf,EAAoB;IACjDG,eAAe,CAACN,UAAhB,CAA2BC,IAA3B,CAAgC7C,IAAhC,CAAqC,IAArC,EAA2C6L,GAA3C,EAAgD9I,GAAhD;EACH,CAFD;;EAIAG,eAAe,CAAC1D,SAAhB,CAA0B2B,QAA1B,GAAqC,YAAY;IAC7C,OAAO,MAAM,KAAK0K,GAAL,CAAS1K,QAAT,EAAN,GAA4B,KAA5B,GAAoC,KAAK4B,GAAL,CAAS5B,QAAT,EAApC,GAA0D,GAAjE;EACH,CAFD;;EAIA+B,eAAe,CAAC1D,SAAhB,CAA0ByL,QAA1B,GAAqC,UAAUjC,CAAV,EAAa;IAC9C,OAAO,KAAK6C,GAAL,CAASZ,QAAT,CAAkBjC,CAAlB,EAAqBiD,MAArB,CAA4B,KAAKlJ,GAAL,CAASkI,QAAT,CAAkBjC,CAAlB,CAA5B,CAAP;EACH,CAFD,CA/1CgB,CAm2ChB;;;EAEA7F,iBAAiB,CAAC3D,SAAlB,GAA8B,IAAIoM,eAAJ,EAA9B;EACAzI,iBAAiB,CAAC3D,SAAlB,CAA4BmD,WAA5B,GAA0CQ,iBAA1C;EACAA,iBAAiB,CAACP,UAAlB,GAA+BgJ,eAAe,CAACpM,SAA/C;;EAEA,SAAS2D,iBAAT,CAA2B0I,GAA3B,EAAgC9I,GAAhC,EAAqC;IACjC,IAAI9C,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAUgJ,GAAV,EAAe9I,GAAf;IACH;EACJ;;EAEDI,iBAAiB,CAAC3D,SAAlB,CAA4BqD,IAA5B,GAAmC,UAAUgJ,GAAV,EAAe9I,GAAf,EAAoB;IACnDI,iBAAiB,CAACP,UAAlB,CAA6BC,IAA7B,CAAkC7C,IAAlC,CAAuC,IAAvC,EAA6C6L,GAA7C,EAAkD9I,GAAlD;EACH,CAFD;;EAIAI,iBAAiB,CAAC3D,SAAlB,CAA4B2B,QAA5B,GAAuC,YAAY;IAC/C,OAAO,MAAM,KAAK0K,GAAL,CAAS1K,QAAT,EAAN,GAA4B,MAA5B,GAAqC,KAAK4B,GAAL,CAAS5B,QAAT,EAArC,GAA2D,GAAlE;EACH,CAFD;;EAIAgC,iBAAiB,CAAC3D,SAAlB,CAA4ByL,QAA5B,GAAuC,UAAUjC,CAAV,EAAa;IAChD,OAAO,KAAK6C,GAAL,CAASZ,QAAT,CAAkBjC,CAAlB,EAAqBkD,QAArB,CAA8B,KAAKnJ,GAAL,CAASkI,QAAT,CAAkBjC,CAAlB,CAA9B,CAAP;EACH,CAFD,CAv3CgB,CA23ChB;;;EAEA5F,iBAAiB,CAAC5D,SAAlB,GAA8B,IAAIoM,eAAJ,EAA9B;EACAxI,iBAAiB,CAAC5D,SAAlB,CAA4BmD,WAA5B,GAA0CS,iBAA1C;EACAA,iBAAiB,CAACR,UAAlB,GAA+BgJ,eAAe,CAACpM,SAA/C;;EAEA,SAAS4D,iBAAT,CAA2ByI,GAA3B,EAAgC9I,GAAhC,EAAqC;IACjC,IAAI9C,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAUgJ,GAAV,EAAe9I,GAAf;IACH;EACJ;;EAEDK,iBAAiB,CAAC5D,SAAlB,CAA4BqD,IAA5B,GAAmC,UAAUgJ,GAAV,EAAe9I,GAAf,EAAoB;IACnDK,iBAAiB,CAACR,UAAlB,CAA6BC,IAA7B,CAAkC7C,IAAlC,CAAuC,IAAvC,EAA6C6L,GAA7C,EAAkD9I,GAAlD;EACH,CAFD;;EAIAK,iBAAiB,CAAC5D,SAAlB,CAA4ByL,QAA5B,GAAuC,UAAUjC,CAAV,EAAa;IAChD,OAAO,KAAK6C,GAAL,CAASZ,QAAT,CAAkBjC,CAAlB,EAAqBmD,QAArB,CAA8B,KAAKpJ,GAAL,CAASkI,QAAT,CAAkBjC,CAAlB,CAA9B,CAAP;EACH,CAFD;;EAIA5F,iBAAiB,CAAC5D,SAAlB,CAA4B2B,QAA5B,GAAuC,YAAY;IAC/C,OAAO,MAAM,KAAK0K,GAAL,CAAS1K,QAAT,EAAN,GAA4B,KAA5B,GAAoC,KAAK4B,GAAL,CAAS5B,QAAT,EAApC,GAA0D,GAAjE;EACH,CAFD,CA/4CgB,CAm5ChB;;;EAEAkC,oBAAoB,CAAC7D,SAArB,GAAiC,IAAIoM,eAAJ,EAAjC;EACAvI,oBAAoB,CAAC7D,SAArB,CAA+BmD,WAA/B,GAA6CU,oBAA7C;EACAA,oBAAoB,CAACT,UAArB,GAAkCgJ,eAAe,CAACpM,SAAlD;;EAEA,SAAS6D,oBAAT,CAA8BwI,GAA9B,EAAmC9I,GAAnC,EAAwC;IACpC,IAAI9C,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAUgJ,GAAV,EAAe9I,GAAf;IACH;EACJ;;EAEDM,oBAAoB,CAAC7D,SAArB,CAA+BqD,IAA/B,GAAsC,UAAUgJ,GAAV,EAAe9I,GAAf,EAAoB;IACtDM,oBAAoB,CAACT,UAArB,CAAgCC,IAAhC,CAAqC7C,IAArC,CAA0C,IAA1C,EAAgD6L,GAAhD,EAAqD9I,GAArD;EACH,CAFD;;EAIAM,oBAAoB,CAAC7D,SAArB,CAA+ByL,QAA/B,GAA0C,UAAUjC,CAAV,EAAa;IACnD,OAAO,KAAK6C,GAAL,CAASZ,QAAT,CAAkBjC,CAAlB,EAAqBoD,WAArB,CAAiC,KAAKrJ,GAAL,CAASkI,QAAT,CAAkBjC,CAAlB,CAAjC,CAAP;EACH,CAFD;;EAIA3F,oBAAoB,CAAC7D,SAArB,CAA+B2B,QAA/B,GAA0C,YAAY;IAClD,OAAO,MAAM,KAAK0K,GAAL,CAAS1K,QAAT,EAAN,GAA4B,KAA5B,GAAoC,KAAK4B,GAAL,CAAS5B,QAAT,EAApC,GAA0D,GAAjE;EACH,CAFD,CAv6CgB,CA26ChB;;;EAEAmC,wBAAwB,CAAC9D,SAAzB,GAAqC,IAAIoM,eAAJ,EAArC;EACAtI,wBAAwB,CAAC9D,SAAzB,CAAmCmD,WAAnC,GAAiDW,wBAAjD;EACAA,wBAAwB,CAACV,UAAzB,GAAsCgJ,eAAe,CAACpM,SAAtD;;EAEA,SAAS8D,wBAAT,CAAkCuI,GAAlC,EAAuC9I,GAAvC,EAA4C;IACxC,IAAI9C,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAUgJ,GAAV,EAAe9I,GAAf;IACH;EACJ;;EAEDO,wBAAwB,CAAC9D,SAAzB,CAAmCqD,IAAnC,GAA0C,UAAUgJ,GAAV,EAAe9I,GAAf,EAAoB;IAC1DO,wBAAwB,CAACV,UAAzB,CAAoCC,IAApC,CAAyC7C,IAAzC,CAA8C,IAA9C,EAAoD6L,GAApD,EAAyD9I,GAAzD;EACH,CAFD;;EAIAO,wBAAwB,CAAC9D,SAAzB,CAAmCyL,QAAnC,GAA8C,UAAUjC,CAAV,EAAa;IACvD,OAAO,KAAK6C,GAAL,CAASZ,QAAT,CAAkBjC,CAAlB,EAAqBqD,eAArB,CAAqC,KAAKtJ,GAAL,CAASkI,QAAT,CAAkBjC,CAAlB,CAArC,CAAP;EACH,CAFD;;EAIA1F,wBAAwB,CAAC9D,SAAzB,CAAmC2B,QAAnC,GAA8C,YAAY;IACtD,OAAO,MAAM,KAAK0K,GAAL,CAAS1K,QAAT,EAAN,GAA4B,MAA5B,GAAqC,KAAK4B,GAAL,CAAS5B,QAAT,EAArC,GAA2D,GAAlE;EACH,CAFD,CA/7CgB,CAm8ChB;;;EAEAoC,2BAA2B,CAAC/D,SAA5B,GAAwC,IAAIoM,eAAJ,EAAxC;EACArI,2BAA2B,CAAC/D,SAA5B,CAAsCmD,WAAtC,GAAoDY,2BAApD;EACAA,2BAA2B,CAACX,UAA5B,GAAyCgJ,eAAe,CAACpM,SAAzD;;EAEA,SAAS+D,2BAAT,CAAqCsI,GAArC,EAA0C9I,GAA1C,EAA+C;IAC3C,IAAI9C,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAUgJ,GAAV,EAAe9I,GAAf;IACH;EACJ;;EAEDQ,2BAA2B,CAAC/D,SAA5B,CAAsCqD,IAAtC,GAA6C,UAAUgJ,GAAV,EAAe9I,GAAf,EAAoB;IAC7DQ,2BAA2B,CAACX,UAA5B,CAAuCC,IAAvC,CAA4C7C,IAA5C,CAAiD,IAAjD,EAAuD6L,GAAvD,EAA4D9I,GAA5D;EACH,CAFD;;EAIAQ,2BAA2B,CAAC/D,SAA5B,CAAsCyL,QAAtC,GAAiD,UAAUjC,CAAV,EAAa;IAC1D,OAAO,KAAK6C,GAAL,CAASZ,QAAT,CAAkBjC,CAAlB,EAAqBsD,kBAArB,CAAwC,KAAKvJ,GAAL,CAASkI,QAAT,CAAkBjC,CAAlB,CAAxC,CAAP;EACH,CAFD;;EAIAzF,2BAA2B,CAAC/D,SAA5B,CAAsC2B,QAAtC,GAAiD,YAAY;IACzD,OAAO,MAAM,KAAK0K,GAAL,CAAS1K,QAAT,EAAN,GAA4B,MAA5B,GAAqC,KAAK4B,GAAL,CAAS5B,QAAT,EAArC,GAA2D,GAAlE;EACH,CAFD,CAv9CgB,CA29ChB;;;EAEAqC,aAAa,CAAChE,SAAd,GAA0B,IAAIoM,eAAJ,EAA1B;EACApI,aAAa,CAAChE,SAAd,CAAwBmD,WAAxB,GAAsCa,aAAtC;EACAA,aAAa,CAACZ,UAAd,GAA2BgJ,eAAe,CAACpM,SAA3C;;EAEA,SAASgE,aAAT,CAAuBqI,GAAvB,EAA4B9I,GAA5B,EAAiC;IAC7B,IAAI9C,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAUgJ,GAAV,EAAe9I,GAAf;IACH;EACJ;;EAEDS,aAAa,CAAChE,SAAd,CAAwBqD,IAAxB,GAA+B,UAAUgJ,GAAV,EAAe9I,GAAf,EAAoB;IAC/CS,aAAa,CAACZ,UAAd,CAAyBC,IAAzB,CAA8B7C,IAA9B,CAAmC,IAAnC,EAAyC6L,GAAzC,EAA8C9I,GAA9C;EACH,CAFD;;EAIAS,aAAa,CAAChE,SAAd,CAAwByL,QAAxB,GAAmC,UAAUjC,CAAV,EAAa;IAC5C,OAAO,KAAK6C,GAAL,CAASZ,QAAT,CAAkBjC,CAAlB,EAAqBE,MAArB,GAA8BqD,IAA9B,CAAmC,KAAKxJ,GAAL,CAASkI,QAAT,CAAkBjC,CAAlB,EAAqBE,MAArB,EAAnC,CAAP;EACH,CAFD;;EAIA1F,aAAa,CAAChE,SAAd,CAAwB2B,QAAxB,GAAmC,YAAY;IAC3C,OAAO,MAAM,KAAK0K,GAAL,CAAS1K,QAAT,EAAN,GAA4B,KAA5B,GAAoC,KAAK4B,GAAL,CAAS5B,QAAT,EAApC,GAA0D,GAAjE;EACH,CAFD,CA/+CgB,CAm/ChB;;;EAEAsC,cAAc,CAACjE,SAAf,GAA2B,IAAIoM,eAAJ,EAA3B;EACAnI,cAAc,CAACjE,SAAf,CAAyBmD,WAAzB,GAAuCc,cAAvC;EACAA,cAAc,CAACb,UAAf,GAA4BgJ,eAAe,CAACpM,SAA5C;;EAEA,SAASiE,cAAT,CAAwBoI,GAAxB,EAA6B9I,GAA7B,EAAkC;IAC9B,IAAI9C,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAUgJ,GAAV,EAAe9I,GAAf;IACH;EACJ;;EAEDU,cAAc,CAACjE,SAAf,CAAyBqD,IAAzB,GAAgC,UAAUgJ,GAAV,EAAe9I,GAAf,EAAoB;IAChDU,cAAc,CAACb,UAAf,CAA0BC,IAA1B,CAA+B7C,IAA/B,CAAoC,IAApC,EAA0C6L,GAA1C,EAA+C9I,GAA/C;EACH,CAFD;;EAIAU,cAAc,CAACjE,SAAf,CAAyByL,QAAzB,GAAoC,UAAUjC,CAAV,EAAa;IAC7C,OAAO,KAAK6C,GAAL,CAASZ,QAAT,CAAkBjC,CAAlB,EAAqBE,MAArB,GAA8BsD,KAA9B,CAAoC,KAAKzJ,GAAL,CAASkI,QAAT,CAAkBjC,CAAlB,EAAqBE,MAArB,EAApC,CAAP;EACH,CAFD;;EAIAzF,cAAc,CAACjE,SAAf,CAAyB2B,QAAzB,GAAoC,YAAY;IAC5C,OAAO,MAAM,KAAK0K,GAAL,CAAS1K,QAAT,EAAN,GAA4B,KAA5B,GAAoC,KAAK4B,GAAL,CAAS5B,QAAT,EAApC,GAA0D,GAAjE;EACH,CAFD,CAvgDgB,CA2gDhB;;;EAEAuC,iBAAiB,CAAClE,SAAlB,GAA8B,IAAIoM,eAAJ,EAA9B;EACAlI,iBAAiB,CAAClE,SAAlB,CAA4BmD,WAA5B,GAA0Ce,iBAA1C;EACAA,iBAAiB,CAACd,UAAlB,GAA+BgJ,eAAe,CAACpM,SAA/C;;EAEA,SAASkE,iBAAT,CAA2BmI,GAA3B,EAAgC9I,GAAhC,EAAqC;IACjC,IAAI9C,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAUgJ,GAAV,EAAe9I,GAAf;IACH;EACJ;;EAEDW,iBAAiB,CAAClE,SAAlB,CAA4BqD,IAA5B,GAAmC,UAAUgJ,GAAV,EAAe9I,GAAf,EAAoB;IACnDW,iBAAiB,CAACd,UAAlB,CAA6BC,IAA7B,CAAkC7C,IAAlC,CAAuC,IAAvC,EAA6C6L,GAA7C,EAAkD9I,GAAlD;EACH,CAFD;;EAIAW,iBAAiB,CAAClE,SAAlB,CAA4ByL,QAA5B,GAAuC,UAAUjC,CAAV,EAAa;IAChD,OAAO,KAAK6C,GAAL,CAASZ,QAAT,CAAkBjC,CAAlB,EAAqBE,MAArB,GAA8BuD,QAA9B,CAAuC,KAAK1J,GAAL,CAASkI,QAAT,CAAkBjC,CAAlB,EAAqBE,MAArB,EAAvC,CAAP;EACH,CAFD;;EAIAxF,iBAAiB,CAAClE,SAAlB,CAA4B2B,QAA5B,GAAuC,YAAY;IAC/C,OAAO,MAAM,KAAK0K,GAAL,CAAS1K,QAAT,EAAN,GAA4B,KAA5B,GAAoC,KAAK4B,GAAL,CAAS5B,QAAT,EAApC,GAA0D,GAAjE;EACH,CAFD,CA/hDgB,CAmiDhB;;;EAEAwC,YAAY,CAACnE,SAAb,GAAyB,IAAIoM,eAAJ,EAAzB;EACAjI,YAAY,CAACnE,SAAb,CAAuBmD,WAAvB,GAAqCgB,YAArC;EACAA,YAAY,CAACf,UAAb,GAA0BgJ,eAAe,CAACpM,SAA1C;;EAEA,SAASmE,YAAT,CAAsBkI,GAAtB,EAA2B9I,GAA3B,EAAgC;IAC5B,IAAI9C,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAUgJ,GAAV,EAAe9I,GAAf;IACH;EACJ;;EAEDY,YAAY,CAACnE,SAAb,CAAuBqD,IAAvB,GAA8B,UAAUgJ,GAAV,EAAe9I,GAAf,EAAoB;IAC9CY,YAAY,CAACf,UAAb,CAAwBC,IAAxB,CAA6B7C,IAA7B,CAAkC,IAAlC,EAAwC6L,GAAxC,EAA6C9I,GAA7C;EACH,CAFD;;EAIAY,YAAY,CAACnE,SAAb,CAAuByL,QAAvB,GAAkC,UAAUjC,CAAV,EAAa;IAC3C,OAAO,KAAK6C,GAAL,CAASZ,QAAT,CAAkBjC,CAAlB,EAAqBE,MAArB,GAA8BwD,GAA9B,CAAkC,KAAK3J,GAAL,CAASkI,QAAT,CAAkBjC,CAAlB,EAAqBE,MAArB,EAAlC,CAAP;EACH,CAFD;;EAIAvF,YAAY,CAACnE,SAAb,CAAuB2B,QAAvB,GAAkC,YAAY;IAC1C,OAAO,MAAM,KAAK0K,GAAL,CAAS1K,QAAT,EAAN,GAA4B,OAA5B,GAAsC,KAAK4B,GAAL,CAAS5B,QAAT,EAAtC,GAA4D,GAAnE;EACH,CAFD,CAvjDgB,CA2jDhB;;;EAEAyC,YAAY,CAACpE,SAAb,GAAyB,IAAIoM,eAAJ,EAAzB;EACAhI,YAAY,CAACpE,SAAb,CAAuBmD,WAAvB,GAAqCiB,YAArC;EACAA,YAAY,CAAChB,UAAb,GAA0BgJ,eAAe,CAACpM,SAA1C;;EAEA,SAASoE,YAAT,CAAsBiI,GAAtB,EAA2B9I,GAA3B,EAAgC;IAC5B,IAAI9C,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAUgJ,GAAV,EAAe9I,GAAf;IACH;EACJ;;EAEDa,YAAY,CAACpE,SAAb,CAAuBqD,IAAvB,GAA8B,UAAUgJ,GAAV,EAAe9I,GAAf,EAAoB;IAC9Ca,YAAY,CAAChB,UAAb,CAAwBC,IAAxB,CAA6B7C,IAA7B,CAAkC,IAAlC,EAAwC6L,GAAxC,EAA6C9I,GAA7C;EACH,CAFD;;EAIAa,YAAY,CAACpE,SAAb,CAAuByL,QAAvB,GAAkC,UAAUjC,CAAV,EAAa;IAC3C,OAAO,KAAK6C,GAAL,CAASZ,QAAT,CAAkBjC,CAAlB,EAAqBE,MAArB,GAA8ByD,GAA9B,CAAkC,KAAK5J,GAAL,CAASkI,QAAT,CAAkBjC,CAAlB,EAAqBE,MAArB,EAAlC,CAAP;EACH,CAFD;;EAIAtF,YAAY,CAACpE,SAAb,CAAuB2B,QAAvB,GAAkC,YAAY;IAC1C,OAAO,MAAM,KAAK0K,GAAL,CAAS1K,QAAT,EAAN,GAA4B,OAA5B,GAAsC,KAAK4B,GAAL,CAAS5B,QAAT,EAAtC,GAA4D,GAAnE;EACH,CAFD,CA/kDgB,CAmlDhB;;;EAEA2C,YAAY,CAACtE,SAAb,GAAyB,IAAIoM,eAAJ,EAAzB;EACA9H,YAAY,CAACtE,SAAb,CAAuBmD,WAAvB,GAAqCmB,YAArC;EACAA,YAAY,CAAClB,UAAb,GAA0BgJ,eAAe,CAACpM,SAA1C;;EAEA,SAASsE,YAAT,CAAsB+H,GAAtB,EAA2B9I,GAA3B,EAAgC;IAC5B,IAAI9C,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAUgJ,GAAV,EAAe9I,GAAf;IACH;EACJ;;EAEDe,YAAY,CAACtE,SAAb,CAAuBqD,IAAvB,GAA8B,UAAUgJ,GAAV,EAAe9I,GAAf,EAAoB;IAC9Ce,YAAY,CAAClB,UAAb,CAAwBC,IAAxB,CAA6B7C,IAA7B,CAAkC,IAAlC,EAAwC6L,GAAxC,EAA6C9I,GAA7C;EACH,CAFD;;EAIAe,YAAY,CAACtE,SAAb,CAAuByL,QAAvB,GAAkC,UAAUjC,CAAV,EAAa;IAC3C,OAAO,KAAK6C,GAAL,CAASZ,QAAT,CAAkBjC,CAAlB,EAAqB4D,OAArB,GAA+BC,KAA/B,CAAqC,KAAK9J,GAAL,CAASkI,QAAT,CAAkBjC,CAAlB,EAAqB4D,OAArB,EAArC,CAAP;EACH,CAFD;;EAIA9I,YAAY,CAACtE,SAAb,CAAuB2B,QAAvB,GAAkC,YAAY;IAC1C,OAAOT,GAAG,CAACS,QAAD,EAAW,CAAC,KAAK0K,GAAN,EAAW,KAAK9I,GAAhB,CAAX,CAAH,CAAoC3B,IAApC,CAAyC,KAAzC,CAAP;EACH,CAFD,CAvmDgB,CA2mDhB;;;EAEA2C,QAAQ,CAACvE,SAAT,GAAqB,IAAIiM,UAAJ,EAArB;EACA1H,QAAQ,CAACvE,SAAT,CAAmBmD,WAAnB,GAAiCoB,QAAjC;EACAA,QAAQ,CAACnB,UAAT,GAAsB6I,UAAU,CAACjM,SAAjC;;EAEA,SAASuE,QAAT,CAAkBnD,MAAlB,EAA0BkM,WAA1B,EAAuCC,OAAvC,EAAgD;IAC5C,IAAI9M,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAUjC,MAAV,EAAkBkM,WAAlB,EAA+BC,OAA/B;IACH;EACJ;;EAEDhJ,QAAQ,CAACvE,SAAT,CAAmBqD,IAAnB,GAA0B,UAAUjC,MAAV,EAAkBkM,WAAlB,EAA+BC,OAA/B,EAAwC;IAC9DhJ,QAAQ,CAACnB,UAAT,CAAoBC,IAApB,CAAyB7C,IAAzB,CAA8B,IAA9B;IACA,KAAKY,MAAL,GAAcA,MAAd;IACA,KAAK8D,gBAAL,GAAwBoI,WAAxB;IACA,KAAK7I,YAAL,GAAoB8I,OAApB;EACH,CALD;EAOA;AACJ;AACA;;;EACI,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;IACpB,OAAOA,IAAI,IAAIA,IAAI,CAACC,UAApB,EAAgC;MAC5BD,IAAI,GAAGA,IAAI,CAACC,UAAZ;IACH;;IAED,OAAOD,IAAP;EACH;;EAEDlJ,QAAQ,CAACoJ,eAAT,GAA2B,UAAUC,UAAV,EAAsBpE,CAAtB,EAAyBqE,KAAzB,EAAgC;IACvD,IAAID,UAAU,CAAC1N,MAAX,KAAsB,CAA1B,EAA6B;MACzB,OAAO2N,KAAP;IACH;;IAED,IAAIC,GAAG,GAAGtE,CAAC,CAACuE,MAAF,CAAS,EAAT,CAAV;IAEA,OAAOjN,MAAM,CACT,UAAUkN,OAAV,EAAmBC,IAAnB,EAAyB;MACrBH,GAAG,CAAClC,WAAJ,GAAkBoC,OAAO,CAAC9N,MAA1B;MAEA,OAAOkB,MAAM,CACT,UAAUqM,IAAV,EAAgB5M,CAAhB,EAAmB;QACfiN,GAAG,CAACpC,WAAJ,GAAkB+B,IAAlB;QACAK,GAAG,CAACjC,eAAJ,GAAsBhL,CAAC,GAAG,CAA1B;QAEA,OAAO0D,QAAQ,CAAC2J,gBAAT,CAA0BD,IAA1B,EAAgCH,GAAhC,CAAP;MACH,CANQ,EAOTE,OAPS,CAAb;IASH,CAbQ,EAcTH,KAdS,EAeTD,UAfS,CAAb;EAiBH,CAxBD;;EA0BArJ,QAAQ,CAAC4J,OAAT,GAAmB,UAAUC,GAAV,EAAeP,KAAf,EAAsB;IACrC,IAAIQ,SAAS,GAAGR,KAAK,CAAC,CAAD,CAArB;;IAEA,IAAIQ,SAAS,CAACC,QAAV,KAAuB;IAAE;IAA7B,EAAqD;MACjD,OAAOD,SAAP;IACH;;IAED,IAAID,GAAG,CAACG,WAAR,EAAqB;MACjB,OAAOH,GAAG,CAACG,WAAX;IACH;;IAED,IAAIC,QAAQ,GAAGH,SAAS,CAACI,aAAzB;;IAEA,IAAID,QAAJ,EAAc;MACV,OAAOA,QAAP;IACH,CAfoC,CAiBrC;;;IACA,IAAIE,CAAC,GAAGL,SAAR;;IACA,OAAOK,CAAC,CAAChB,UAAF,IAAgB,IAAvB,EAA6B;MACzBgB,CAAC,GAAGA,CAAC,CAAChB,UAAN;IACH;;IACD,OAAOgB,CAAP;EACH,CAvBD;;EAyBAnK,QAAQ,CAACoK,SAAT,GAAqB,UAAUC,IAAV,EAAgBR,GAAhB,EAAqBX,IAArB,EAA2B;IAC5C,IAAIoB,IAAI,GAAG,IAAX;IACA,IAAIC,QAAQ,GAAG,EAAf;IACAV,GAAG,CAAC1C,WAAJ,GAAkB+B,IAAlB;;IAEA,QAAQmB,IAAI,CAACG,IAAb;MACI,KAAKnK,IAAI,CAACa,QAAV;QACI;QACA,IAAI2I,GAAG,CAAC1C,WAAJ,KAAoB0C,GAAG,CAACG,WAA5B,EAAyC;UACrC;QACH;;QACD,IAAIS,CAAJ;;QACA,IAAIZ,GAAG,CAAC1C,WAAJ,CAAgB4C,QAAhB,IAA4B;QAAE;QAAlC,EAA2D;UACvDU,CAAC,GAAGzK,QAAQ,CAAC0K,eAAT,CAAyBb,GAAG,CAAC1C,WAA7B,CAAJ;QACH,CAFD,MAEO;UACHsD,CAAC,GAAGZ,GAAG,CAAC1C,WAAJ,CAAgBgC,UAApB;QACH;;QACD,OAAOsB,CAAC,IAAI,IAAZ,EAAkB;UACd,IAAIJ,IAAI,CAAC7J,QAAL,CAAcmK,OAAd,CAAsBF,CAAtB,EAAyBZ,GAAzB,CAAJ,EAAmC;YAC/BU,QAAQ,CAACxN,IAAT,CAAc0N,CAAd;UACH;;UACD,IAAIA,CAAC,KAAKZ,GAAG,CAACG,WAAd,EAA2B;YACvB;UACH;;UACDS,CAAC,GAAGA,CAAC,CAACtB,UAAN;QACH;;QACD;;MAEJ,KAAK9I,IAAI,CAACc,cAAV;QACI;QACA,KAAK,IAAIsJ,CAAC,GAAGZ,GAAG,CAAC1C,WAAjB,EAA8BsD,CAAC,IAAI,IAAnC,EAAyCA,CAAC,GAAGA,CAAC,CAACV,QAAF,IAAc;QAAE;QAAhB,EAA0C/J,QAAQ,CAAC0K,eAAT,CAAyBD,CAAzB,CAA1C,GAAwEA,CAAC,CAACtB,UAAvH,EAAmI;UAC/H,IAAIkB,IAAI,CAAC7J,QAAL,CAAcmK,OAAd,CAAsBF,CAAtB,EAAyBZ,GAAzB,CAAJ,EAAmC;YAC/BU,QAAQ,CAACxN,IAAT,CAAc0N,CAAd;UACH;;UACD,IAAIA,CAAC,KAAKZ,GAAG,CAACG,WAAd,EAA2B;YACvB;UACH;QACJ;;QACD;;MAEJ,KAAK3J,IAAI,CAACe,SAAV;QACI;QACA,IAAIwJ,GAAG,GAAGf,GAAG,CAAC1C,WAAJ,CAAgB0D,UAA1B;;QACA,IAAID,GAAG,IAAI,IAAX,EAAiB;UACb,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACjP,MAAxB,EAAgCmP,CAAC,EAAjC,EAAqC;YACjC,IAAIL,CAAC,GAAGG,GAAG,CAACG,IAAJ,CAASD,CAAT,CAAR;;YACA,IAAIT,IAAI,CAAC7J,QAAL,CAAcmK,OAAd,CAAsBF,CAAtB,EAAyBZ,GAAzB,CAAJ,EAAmC;cAC/BU,QAAQ,CAACxN,IAAT,CAAc0N,CAAd;YACH;UACJ;QACJ;;QACD;;MAEJ,KAAKpK,IAAI,CAACY,KAAV;QACI;QACA,KAAK,IAAIwJ,CAAC,GAAGZ,GAAG,CAAC1C,WAAJ,CAAgB6D,UAA7B,EAAyCP,CAAC,IAAI,IAA9C,EAAoDA,CAAC,GAAGA,CAAC,CAACQ,WAA1D,EAAuE;UACnE,IAAIZ,IAAI,CAAC7J,QAAL,CAAcmK,OAAd,CAAsBF,CAAtB,EAAyBZ,GAAzB,CAAJ,EAAmC;YAC/BU,QAAQ,CAACxN,IAAT,CAAc0N,CAAd;UACH;QACJ;;QACD;;MAEJ,KAAKpK,IAAI,CAACgB,UAAV;QACI;QACA,IAAI6J,EAAE,GAAG,CAACrB,GAAG,CAAC1C,WAAJ,CAAgB6D,UAAjB,CAAT;;QACA,OAAOE,EAAE,CAACvP,MAAH,GAAY,CAAnB,EAAsB;UAClB,KAAK,IAAI8O,CAAC,GAAGS,EAAE,CAACxE,GAAH,EAAb,EAAuB+D,CAAC,IAAI,IAA5B,GAAmC;YAC/B,IAAIJ,IAAI,CAAC7J,QAAL,CAAcmK,OAAd,CAAsBF,CAAtB,EAAyBZ,GAAzB,CAAJ,EAAmC;cAC/BU,QAAQ,CAACxN,IAAT,CAAc0N,CAAd;YACH;;YACD,IAAIA,CAAC,CAACO,UAAF,IAAgB,IAApB,EAA0B;cACtBE,EAAE,CAACnO,IAAH,CAAQ0N,CAAC,CAACQ,WAAV;cACAR,CAAC,GAAGA,CAAC,CAACO,UAAN;YACH,CAHD,MAGO;cACHP,CAAC,GAAGA,CAAC,CAACQ,WAAN;YACH;UACJ;QACJ;;QACD;;MAEJ,KAAK5K,IAAI,CAACC,gBAAV;QACI;QACA,IAAI+J,IAAI,CAAC7J,QAAL,CAAcmK,OAAd,CAAsBd,GAAG,CAAC1C,WAA1B,EAAuC0C,GAAvC,CAAJ,EAAiD;UAC7CU,QAAQ,CAACxN,IAAT,CAAc8M,GAAG,CAAC1C,WAAlB;QACH,CAJL,CAKI;;;QACA,IAAI+D,EAAE,GAAG,CAACrB,GAAG,CAAC1C,WAAJ,CAAgB6D,UAAjB,CAAT;;QACA,OAAOE,EAAE,CAACvP,MAAH,GAAY,CAAnB,EAAsB;UAClB,KAAK,IAAI8O,CAAC,GAAGS,EAAE,CAACxE,GAAH,EAAb,EAAuB+D,CAAC,IAAI,IAA5B,GAAmC;YAC/B,IAAIJ,IAAI,CAAC7J,QAAL,CAAcmK,OAAd,CAAsBF,CAAtB,EAAyBZ,GAAzB,CAAJ,EAAmC;cAC/BU,QAAQ,CAACxN,IAAT,CAAc0N,CAAd;YACH;;YACD,IAAIA,CAAC,CAACO,UAAF,IAAgB,IAApB,EAA0B;cACtBE,EAAE,CAACnO,IAAH,CAAQ0N,CAAC,CAACQ,WAAV;cACAR,CAAC,GAAGA,CAAC,CAACO,UAAN;YACH,CAHD,MAGO;cACHP,CAAC,GAAGA,CAAC,CAACQ,WAAN;YACH;UACJ;QACJ;;QACD;;MAEJ,KAAK5K,IAAI,CAACiB,SAAV;QACI,IAAIuI,GAAG,CAAC1C,WAAJ,KAAoB0C,GAAG,CAACG,WAA5B,EAAyC;UACrC;QACH;;QACD,IAAIkB,EAAE,GAAG,EAAT;;QACA,IAAIrB,GAAG,CAAC1C,WAAJ,CAAgB6D,UAAhB,IAA8B,IAAlC,EAAwC;UACpCE,EAAE,CAAC9K,OAAH,CAAWyJ,GAAG,CAAC1C,WAAJ,CAAgB6D,UAA3B;QACH,CAFD,MAEO;UACHE,EAAE,CAAC9K,OAAH,CAAWyJ,GAAG,CAAC1C,WAAJ,CAAgB8D,WAA3B;QACH;;QACD,KAAK,IAAIR,CAAC,GAAGZ,GAAG,CAAC1C,WAAJ,CAAgBgC,UAA7B,EAAyCsB,CAAC,IAAI,IAAL,IAAaA,CAAC,CAACV,QAAF,IAAc;QAAE;QAA7B,GAAuDU,CAAC,KAAKZ,GAAG,CAACG,WAA1G,EAAuHS,CAAC,GAAGA,CAAC,CAACtB,UAA7H,EAAyI;UACrI+B,EAAE,CAAC9K,OAAH,CAAWqK,CAAC,CAACQ,WAAb;QACH;;QACD,GAAG;UACC,KAAK,IAAIR,CAAC,GAAGS,EAAE,CAACxE,GAAH,EAAb,EAAuB+D,CAAC,IAAI,IAA5B,GAAmC;YAC/B,IAAIJ,IAAI,CAAC7J,QAAL,CAAcmK,OAAd,CAAsBF,CAAtB,EAAyBZ,GAAzB,CAAJ,EAAmC;cAC/BU,QAAQ,CAACxN,IAAT,CAAc0N,CAAd;YACH;;YACD,IAAIA,CAAC,CAACO,UAAF,IAAgB,IAApB,EAA0B;cACtBE,EAAE,CAACnO,IAAH,CAAQ0N,CAAC,CAACQ,WAAV;cACAR,CAAC,GAAGA,CAAC,CAACO,UAAN;YACH,CAHD,MAGO;cACHP,CAAC,GAAGA,CAAC,CAACQ,WAAN;YACH;UACJ;QACJ,CAZD,QAYSC,EAAE,CAACvP,MAAH,GAAY,CAZrB;;QAaA;;MAEJ,KAAK0E,IAAI,CAACkB,gBAAV;QACI,IAAIsI,GAAG,CAAC1C,WAAJ,KAAoB0C,GAAG,CAACG,WAA5B,EAAyC;UACrC;QACH;;QACD,KAAK,IAAIS,CAAC,GAAGZ,GAAG,CAAC1C,WAAJ,CAAgB8D,WAA7B,EAA0CR,CAAC,IAAI,IAA/C,EAAqDA,CAAC,GAAGA,CAAC,CAACQ,WAA3D,EAAwE;UACpE,IAAIZ,IAAI,CAAC7J,QAAL,CAAcmK,OAAd,CAAsBF,CAAtB,EAAyBZ,GAAzB,CAAJ,EAAmC;YAC/BU,QAAQ,CAACxN,IAAT,CAAc0N,CAAd;UACH;QACJ;;QACD;;MAEJ,KAAKpK,IAAI,CAACmB,SAAV;QACI,IAAI2I,CAAC,GAAG,EAAR;;QACA,IAAIN,GAAG,CAAC1C,WAAJ,CAAgB4C,QAAhB,IAA4B;QAAE;QAAlC,EAAyD;UACrDI,CAAC,CAAC,KAAD,CAAD,GAAWvD,KAAK,CAACY,iBAAjB;UACA2C,CAAC,CAAC,OAAD,CAAD,GAAavD,KAAK,CAACa,mBAAnB;;UACA,KAAK,IAAIgD,CAAC,GAAGZ,GAAG,CAAC1C,WAAjB,EAA8BsD,CAAC,IAAI,IAAL,IAAaA,CAAC,CAACV,QAAF,IAAc;UAAE;UAA3D,EAAkFU,CAAC,GAAGA,CAAC,CAACtB,UAAxF,EAAoG;YAChG,KAAK,IAAI2B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,CAAC,CAACI,UAAF,CAAalP,MAAjC,EAAyCmP,CAAC,EAA1C,EAA8C;cAC1C,IAAIK,IAAI,GAAGV,CAAC,CAACI,UAAF,CAAaE,IAAb,CAAkBD,CAAlB,CAAX;cACA,IAAIM,EAAE,GAAGC,MAAM,CAACF,IAAI,CAACxF,IAAN,CAAf;;cACA,IAAIyF,EAAE,IAAI,OAAV,EAAmB;gBACf,IAAIjB,CAAC,CAAC,EAAD,CAAD,IAASlK,SAAb,EAAwB;kBACpBkK,CAAC,CAAC,EAAD,CAAD,GAAQgB,IAAI,CAACjO,KAAb;gBACH;cACJ,CAJD,MAIO,IAAIkO,EAAE,CAACzP,MAAH,GAAY,CAAZ,IAAiByP,EAAE,CAACE,SAAH,CAAa,CAAb,EAAgB,CAAhB,KAAsB,QAA3C,EAAqD;gBACxD,IAAIC,GAAG,GAAGH,EAAE,CAACE,SAAH,CAAa,CAAb,EAAgBF,EAAE,CAACzP,MAAnB,CAAV;;gBACA,IAAIwO,CAAC,CAACoB,GAAD,CAAD,IAAUtL,SAAd,EAAyB;kBACrBkK,CAAC,CAACoB,GAAD,CAAD,GAASJ,IAAI,CAACjO,KAAd;gBACH;cACJ;YACJ;UACJ;;UACD,KAAK,IAAIqO,GAAT,IAAgBpB,CAAhB,EAAmB;YACf,IAAIqB,GAAG,GAAG,IAAIC,cAAJ,CAAmBF,GAAnB,EAAwBpB,CAAC,CAACoB,GAAD,CAAzB,EAAgC1B,GAAG,CAAC1C,WAApC,CAAV;;YACA,IAAIkD,IAAI,CAAC7J,QAAL,CAAcmK,OAAd,CAAsBa,GAAtB,EAA2B3B,GAA3B,CAAJ,EAAqC;cACjCU,QAAQ,CAACxN,IAAT,CAAcyO,GAAd;YACH;UACJ;QACJ;;QACD;;MAEJ,KAAKnL,IAAI,CAACoB,MAAV;QACIgJ,CAAC,GAAG,IAAJ;;QACA,IAAIZ,GAAG,CAAC1C,WAAJ,KAAoB0C,GAAG,CAACG,WAA5B,EAAyC;UACrC,IAAIH,GAAG,CAAC1C,WAAJ,CAAgB4C,QAAhB,IAA4B;UAAE;UAAlC,EAA2D;YACvDU,CAAC,GAAGzK,QAAQ,CAAC0K,eAAT,CAAyBb,GAAG,CAAC1C,WAA7B,CAAJ;UACH,CAFD,MAEO;YACHsD,CAAC,GAAGZ,GAAG,CAAC1C,WAAJ,CAAgBgC,UAApB;UACH;QACJ;;QACD,IAAIsB,CAAC,IAAI,IAAL,IAAaJ,IAAI,CAAC7J,QAAL,CAAcmK,OAAd,CAAsBF,CAAtB,EAAyBZ,GAAzB,CAAjB,EAAgD;UAC5CU,QAAQ,CAACxN,IAAT,CAAc0N,CAAd;QACH;;QACD;;MAEJ,KAAKpK,IAAI,CAACqB,SAAV;QACI,IAAIwJ,EAAJ;;QACA,IAAIrB,GAAG,CAACG,WAAJ,IAAmB,IAAvB,EAA6B;UACzBkB,EAAE,GAAG,CAACrB,GAAG,CAACG,WAAL,CAAL;QACH,CAFD,MAEO;UACH;UACAkB,EAAE,GAAG,CAACjC,QAAQ,CAACY,GAAG,CAAC1C,WAAL,CAAT,CAAL;QACH;;QACDuE,KAAK,EAAE,OAAOR,EAAE,CAACvP,MAAH,GAAY,CAAnB,EAAsB;UACzB,KAAK,IAAI8O,CAAC,GAAGS,EAAE,CAACxE,GAAH,EAAb,EAAuB+D,CAAC,IAAI,IAA5B,GAAmC;YAC/B,IAAIA,CAAC,IAAIZ,GAAG,CAAC1C,WAAb,EAA0B;cACtB,MAAMuE,KAAN;YACH;;YACD,IAAIrB,IAAI,CAAC7J,QAAL,CAAcmK,OAAd,CAAsBF,CAAtB,EAAyBZ,GAAzB,CAAJ,EAAmC;cAC/BU,QAAQ,CAACnK,OAAT,CAAiBqK,CAAjB;YACH;;YACD,IAAIA,CAAC,CAACO,UAAF,IAAgB,IAApB,EAA0B;cACtBE,EAAE,CAACnO,IAAH,CAAQ0N,CAAC,CAACQ,WAAV;cACAR,CAAC,GAAGA,CAAC,CAACO,UAAN;YACH,CAHD,MAGO;cACHP,CAAC,GAAGA,CAAC,CAACQ,WAAN;YACH;UACJ;QACJ;;QACD;;MAEJ,KAAK5K,IAAI,CAACsB,gBAAV;QACI,IAAIkI,GAAG,CAAC1C,WAAJ,KAAoB0C,GAAG,CAACG,WAA5B,EAAyC;UACrC;QACH;;QACD,KAAK,IAAIS,CAAC,GAAGZ,GAAG,CAAC1C,WAAJ,CAAgBwE,eAA7B,EAA8ClB,CAAC,IAAI,IAAnD,EAAyDA,CAAC,GAAGA,CAAC,CAACkB,eAA/D,EAAgF;UAC5E,IAAItB,IAAI,CAAC7J,QAAL,CAAcmK,OAAd,CAAsBF,CAAtB,EAAyBZ,GAAzB,CAAJ,EAAmC;YAC/BU,QAAQ,CAACxN,IAAT,CAAc0N,CAAd;UACH;QACJ;;QACD;;MAEJ,KAAKpK,IAAI,CAACuB,IAAV;QACI,IAAIyI,IAAI,CAAC7J,QAAL,CAAcmK,OAAd,CAAsBd,GAAG,CAAC1C,WAA1B,EAAuC0C,GAAvC,CAAJ,EAAiD;UAC7CU,QAAQ,CAACxN,IAAT,CAAc8M,GAAG,CAAC1C,WAAlB;QACH;;QACD;;MAEJ;IA/NJ;;IAkOA,OAAOoD,QAAP;EACH,CAxOD;;EA0OA,SAASqB,uBAAT,CAAiCvB,IAAjC,EAAuCR,GAAvC,EAA4CX,IAA5C,EAAkD;IAC9C,OAAOlJ,QAAQ,CAACoJ,eAAT,CACHiB,IAAI,CAAChB,UADF,EAEHQ,GAFG,EAGH7J,QAAQ,CAACoK,SAAT,CAAmBC,IAAnB,EAAyBR,GAAzB,EAA8BX,IAA9B,CAHG,CAAP;EAKH;;EAED,SAAS2C,gBAAT,CAA0BC,OAA1B,EAAmCxC,KAAnC,EAA0Ce,IAA1C,EAAgD;IAC5C,OAAOxM,OAAO,CACVlB,GAAG,CACCiP,uBAAuB,CAACG,IAAxB,CAA6B,IAA7B,EAAmC1B,IAAnC,EAAyCyB,OAAzC,CADD,EAECxC,KAFD,CADO,CAAd;EAMH;;EAEDtJ,QAAQ,CAACgM,UAAT,GAAsB,UAAU7L,KAAV,EAAiB0J,GAAjB,EAAsBP,KAAtB,EAA6B;IAC/C,OAAO/M,MAAM,CACTsP,gBAAgB,CAACE,IAAjB,CAAsB,IAAtB,EAA4BlC,GAA5B,CADS,EAETP,KAFS,EAGTnJ,KAHS,CAAb;EAKH,CAND;;EAQAH,QAAQ,CAACvE,SAAT,CAAmBwQ,WAAnB,GAAiC,UAAUhH,CAAV,EAAa4E,GAAb,EAAkB;IAC/C,IAAI,CAAC,KAAKhN,MAAV,EAAkB;MACd,OAAO;QAAEyM,KAAK,EAAE,CAACrE,CAAC,CAACkC,WAAH;MAAT,CAAP;IACH;;IAED,IAAI+E,EAAE,GAAG,KAAKrP,MAAL,CAAYqK,QAAZ,CAAqBjC,CAArB,CAAT;;IAEA,IAAI,CAACxE,SAAS,CAACC,WAAV,CAAsBwL,EAAtB,EAA0BC,QAA1B,CAAL,EAA0C;MACtC,IAAI,KAAKxL,gBAAL,IAAyB,IAAzB,IAAiC,KAAKA,gBAAL,CAAsBhF,MAAtB,GAA+B,CAAhE,IAAqE,KAAKuE,YAAL,IAAqB,IAA9F,EAAoG;QAChG,MAAM,IAAI2F,KAAJ,CAAU,2FAAV,CAAN;MACH;;MAED,OAAO;QAAEuG,QAAQ,EAAEF;MAAZ,CAAP;IACH;;IAED,OAAO;MACH5C,KAAK,EAAEtJ,QAAQ,CAACoJ,eAAT,CAAyB,KAAKzI,gBAAL,IAAyB,EAAlD,EAAsDkJ,GAAtD,EAA2DqC,EAAE,CAACG,eAAH,EAA3D;IADJ,CAAP;EAGH,CAlBD;;EAoBArM,QAAQ,CAACsM,iBAAT,GAA6B,UAAUpM,YAAV,EAAwB2J,GAAxB,EAA6BP,KAA7B,EAAoC;IAC7D,IAAI,CAACpJ,YAAL,EAAmB;MACf,OAAOoJ,KAAP;IACH;;IAED,IAAIiD,UAAU,GAAGrM,YAAY,CAACc,QAAb,GAAwB,CAAChB,QAAQ,CAAC4J,OAAT,CAAiBC,GAAjB,EAAsBP,KAAtB,CAAD,CAAxB,GAAyDA,KAA1E;IAEA,OAAOtJ,QAAQ,CAACgM,UAAT,CAAoB9L,YAAY,CAACC,KAAjC,EAAwC0J,GAAxC,EAA6C0C,UAA7C,CAAP;EACH,CARD;;EAUAvM,QAAQ,CAACvE,SAAT,CAAmByL,QAAnB,GAA8B,UAAUjC,CAAV,EAAa;IACvC,IAAI4E,GAAG,GAAG3L,MAAM,CAAC,IAAIsO,YAAJ,EAAD,EAAqBvH,CAArB,CAAhB;IAEA,IAAIwH,YAAY,GAAG,KAAKR,WAAL,CAAiBhH,CAAjB,EAAoB4E,GAApB,CAAnB;;IAEA,IAAI,cAAc4C,YAAlB,EAAgC;MAC5B,OAAOA,YAAY,CAACL,QAApB;IACH;;IAED,IAAIF,EAAE,GAAG,IAAIC,QAAJ,EAAT;IACAD,EAAE,CAACQ,QAAH,CAAY1M,QAAQ,CAACsM,iBAAT,CAA2B,KAAKpM,YAAhC,EAA8C2J,GAA9C,EAAmD4C,YAAY,CAACnD,KAAhE,CAAZ;IACA,OAAO4C,EAAP;EACH,CAZD;;EAcAlM,QAAQ,CAAC2J,gBAAT,GAA4B,UAAUD,IAAV,EAAgBzE,CAAhB,EAAmB;IAC3C,IAAIiB,GAAG,GAAGwD,IAAI,CAACxC,QAAL,CAAcjC,CAAd,CAAV;IAEA,OAAOxE,SAAS,CAACC,WAAV,CAAsBwF,GAAtB,EAA2BrF,OAA3B,IACDoE,CAAC,CAACqC,eAAF,KAAsBpB,GAAG,CAACyG,WAAJ,EADrB,GAEDzG,GAAG,CAAC+B,YAAJ,EAFN;EAGH,CAND;;EAQAjI,QAAQ,CAAC4M,eAAT,GAA2B,UAAUC,SAAV,EAAqB;IAC5C,OAAOtP,IAAI,CAAC,GAAD,EAAM,GAAN,EAAWsP,SAAS,CAACzP,QAAV,EAAX,CAAX;EACH,CAFD;;EAIA4C,QAAQ,CAAC8M,gBAAT,GAA4B,UAAUzD,UAAV,EAAsB;IAC9C,OAAOhM,IAAI,CACP,EADO,EAEPV,GAAG,CAACqD,QAAQ,CAAC4M,eAAV,EAA2BvD,UAA3B,CAFI,CAAX;EAIH,CALD;;EAOArJ,QAAQ,CAACvE,SAAT,CAAmB2B,QAAnB,GAA8B,YAAY;IACtC,IAAI,KAAKP,MAAL,IAAeoD,SAAnB,EAA8B;MAC1B,IAAI8M,SAAS,GAAG3P,QAAQ,CAAC,KAAKP,MAAN,CAAxB;;MAEA,IAAI4D,SAAS,CAACC,WAAV,CAAsB,KAAK7D,MAA3B,EAAmC+D,OAAnC,CAAJ,EAAiD;QAC7C,OAAOrD,IAAI,CAAC,GAAD,EAAM,GAAN,EAAWwP,SAAX,CAAX;MACH;;MACD,IAAI,KAAKpM,gBAAL,IAAyBV,SAAzB,IAAsC,KAAKU,gBAAL,CAAsBhF,MAAhE,EAAwE;QACpE,OAAO4B,IAAI,CAAC,GAAD,EAAM,GAAN,EAAWwP,SAAX,CAAJ,GACH/M,QAAQ,CAAC8M,gBAAT,CAA0B,KAAKnM,gBAA/B,CADJ;MAEH;;MACD,IAAI,KAAKT,YAAL,IAAqBD,SAAzB,EAAoC;QAChC,OAAO8M,SAAS,IACX,KAAK7M,YAAL,CAAkBc,QAAlB,GAA6B,EAA7B,GAAkC,GADvB,CAAT,GAEH5D,QAAQ,CAAC,KAAK8C,YAAN,CAFZ;MAGH;;MAED,OAAO6M,SAAP;IACH;;IAED,OAAO3P,QAAQ,CAAC,KAAK8C,YAAN,CAAf;EACH,CArBD;;EAuBAF,QAAQ,CAAC0K,eAAT,GAA2B,UAAUP,CAAV,EAAa;IACpC;IACA,IAAIA,CAAC,CAAC6C,YAAN,EAAoB;MAChB,OAAO7C,CAAC,CAAC6C,YAAT;IACH,CAJmC,CAKpC;;;IACA,IAAI;MACA,IAAI7C,CAAC,CAAC8C,gBAAN,EAAwB;QACpB,OAAO9C,CAAC,CAAC8C,gBAAF,CAAmB,IAAnB,CAAP;MACH;IACJ,CAJD,CAIE,OAAOpG,CAAP,EAAU,CACX,CAXmC,CAYpC;;;IACA,IAAIqG,GAAG,GAAG/C,CAAC,CAACJ,QAAF,IAAc;IAAE;IAAhB,EACJI,CADI,GAEJA,CAAC,CAACD,aAFR;IAGA,IAAIiD,IAAI,GAAGD,GAAG,CAACE,oBAAJ,CAAyB,GAAzB,CAAX;;IACA,KAAK,IAAI9Q,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6Q,IAAI,CAACxR,MAAzB,EAAiCW,CAAC,EAAlC,EAAsC;MAClC,IAAI+Q,GAAG,GAAGF,IAAI,CAACpC,IAAL,CAAUzO,CAAV,CAAV;MACA,IAAIsO,GAAG,GAAGyC,GAAG,CAACxC,UAAd;;MACA,KAAK,IAAIyC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1C,GAAG,CAACjP,MAAxB,EAAgC2R,CAAC,EAAjC,EAAqC;QACjC,IAAIC,EAAE,GAAG3C,GAAG,CAACG,IAAJ,CAASuC,CAAT,CAAT;;QACA,IAAIC,EAAE,KAAKpD,CAAX,EAAc;UACV,OAAOkD,GAAP;QACH;MACJ;IACJ;;IACD,OAAO,IAAP;EACH,CA5BD,CArhEgB,CAmjEhB;;;EAEAtM,YAAY,CAACtF,SAAb,GAAyB,IAAI6C,MAAJ,EAAzB;EACAyC,YAAY,CAACtF,SAAb,CAAuBmD,WAAvB,GAAqCmC,YAArC;EACAA,YAAY,CAAClC,UAAb,GAA0BP,MAAM,CAAC7C,SAAjC;;EAEA,SAASsF,YAAT,CAAsByM,GAAtB,EAA2BrN,KAA3B,EAAkC;IAC9B,IAAIjE,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAU0O,GAAV,EAAerN,KAAf;IACH;EACJ;;EAEDY,YAAY,CAACtF,SAAb,CAAuBqD,IAAvB,GAA8B,UAAU0O,GAAV,EAAerN,KAAf,EAAsB;IAChD,KAAKa,QAAL,GAAgBwM,GAAhB;IACA,KAAKrN,KAAL,GAAaA,KAAb;EACH,CAHD;;EAKAY,YAAY,CAACtF,SAAb,CAAuB2B,QAAvB,GAAkC,YAAY;IAC1C,OACI,CAAC,KAAK4D,QAAL,GAAgB,GAAhB,GAAsB,EAAvB,IACArE,GAAG,CAACS,QAAD,EAAW,KAAK+C,KAAhB,CAAH,CAA0B9C,IAA1B,CAA+B,GAA/B,CAFJ;EAIH,CALD,CApkEgB,CA2kEhB;;;EAEAgD,IAAI,CAAC5E,SAAL,GAAiB,IAAI6C,MAAJ,EAAjB;EACA+B,IAAI,CAAC5E,SAAL,CAAemD,WAAf,GAA6ByB,IAA7B;EACAA,IAAI,CAACxB,UAAL,GAAkBP,MAAM,CAAC7C,SAAzB;;EAEA,SAAS4E,IAAT,CAAcmK,IAAd,EAAoBiD,QAApB,EAA8BC,KAA9B,EAAqC;IACjC,IAAIxR,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAU0L,IAAV,EAAgBiD,QAAhB,EAA0BC,KAA1B;IACH;EACJ;;EAEDrN,IAAI,CAAC5E,SAAL,CAAeqD,IAAf,GAAsB,UAAU0L,IAAV,EAAgBiD,QAAhB,EAA0BC,KAA1B,EAAiC;IACnD,KAAKlD,IAAL,GAAYA,IAAZ;IACA,KAAKhK,QAAL,GAAgBiN,QAAhB;IACA,KAAKpE,UAAL,GAAkBqE,KAAlB;EACH,CAJD;;EAMArN,IAAI,CAAC5E,SAAL,CAAe2B,QAAf,GAA0B,YAAY;IAClC,OAAOiD,IAAI,CAACsN,SAAL,CAAe,KAAKnD,IAApB,IACH,IADG,GAEH,KAAKhK,QAAL,CAAcpD,QAAd,EAFG,GAGH4C,QAAQ,CAAC8M,gBAAT,CAA0B,KAAKzD,UAA/B,CAHJ;EAIH,CALD;;EAQAhJ,IAAI,CAACa,QAAL,GAAgB,CAAhB;EACAb,IAAI,CAACc,cAAL,GAAsB,CAAtB;EACAd,IAAI,CAACe,SAAL,GAAiB,CAAjB;EACAf,IAAI,CAACY,KAAL,GAAa,CAAb;EACAZ,IAAI,CAACgB,UAAL,GAAkB,CAAlB;EACAhB,IAAI,CAACC,gBAAL,GAAwB,CAAxB;EACAD,IAAI,CAACiB,SAAL,GAAiB,CAAjB;EACAjB,IAAI,CAACkB,gBAAL,GAAwB,CAAxB;EACAlB,IAAI,CAACmB,SAAL,GAAiB,CAAjB;EACAnB,IAAI,CAACoB,MAAL,GAAc,CAAd;EACApB,IAAI,CAACqB,SAAL,GAAiB,EAAjB;EACArB,IAAI,CAACsB,gBAAL,GAAwB,EAAxB;EACAtB,IAAI,CAACuB,IAAL,GAAY,EAAZ;EAEAvB,IAAI,CAACsN,SAAL,GAAiBpR,MAAM,CAAC,UAAUE,GAAV,EAAeC,CAAf,EAAkB;IAAE,OAAOD,GAAG,CAACC,CAAC,CAAC,CAAD,CAAF,CAAH,GAAYA,CAAC,CAAC,CAAD,CAAb,EAAkBD,GAAzB;EAA+B,CAApD,EAAsD,EAAtD,EAA0D,CAC7E,CAAC4D,IAAI,CAACa,QAAN,EAAgB,UAAhB,CAD6E,EAE7E,CAACb,IAAI,CAACc,cAAN,EAAsB,kBAAtB,CAF6E,EAG7E,CAACd,IAAI,CAACe,SAAN,EAAiB,WAAjB,CAH6E,EAI7E,CAACf,IAAI,CAACY,KAAN,EAAa,OAAb,CAJ6E,EAK7E,CAACZ,IAAI,CAACgB,UAAN,EAAkB,YAAlB,CAL6E,EAM7E,CAAChB,IAAI,CAACC,gBAAN,EAAwB,oBAAxB,CAN6E,EAO7E,CAACD,IAAI,CAACiB,SAAN,EAAiB,WAAjB,CAP6E,EAQ7E,CAACjB,IAAI,CAACkB,gBAAN,EAAwB,mBAAxB,CAR6E,EAS7E,CAAClB,IAAI,CAACmB,SAAN,EAAiB,WAAjB,CAT6E,EAU7E,CAACnB,IAAI,CAACoB,MAAN,EAAc,QAAd,CAV6E,EAW7E,CAACpB,IAAI,CAACqB,SAAN,EAAiB,WAAjB,CAX6E,EAY7E,CAACrB,IAAI,CAACsB,gBAAN,EAAwB,mBAAxB,CAZ6E,EAa7E,CAACtB,IAAI,CAACuB,IAAN,EAAY,MAAZ,CAb6E,CAA1D,CAAvB,CAnnEgB,CAmoEhB;;EAEArB,QAAQ,CAAC9E,SAAT,GAAqB,IAAI6C,MAAJ,EAArB;EACAiC,QAAQ,CAAC9E,SAAT,CAAmBmD,WAAnB,GAAiC2B,QAAjC;EACAA,QAAQ,CAAC1B,UAAT,GAAsBP,MAAM,CAAC7C,SAA7B;;EAEA,SAAS8E,QAAT,CAAkBqN,IAAlB,EAAwB1Q,KAAxB,EAA+B;IAC3B,IAAIhB,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAU8O,IAAV,EAAgB1Q,KAAhB;IACH;EACJ;;EAEDqD,QAAQ,CAAC9E,SAAT,CAAmBqD,IAAnB,GAA0B,UAAU8O,IAAV,EAAgB1Q,KAAhB,EAAuB;IAC7C,KAAK0Q,IAAL,GAAYA,IAAZ;IACA,KAAK1Q,KAAL,GAAaA,KAAb;EACH,CAHD;;EAKAqD,QAAQ,CAAC9E,SAAT,CAAmB2B,QAAnB,GAA8B,YAAY;IACtC,OAAO,yBAAP;EACH,CAFD;;EAIAmD,QAAQ,CAAC9E,SAAT,CAAmBkP,OAAnB,GAA6B,UAAUR,CAAV,EAAaN,GAAb,EAAkB;IAC3CgE,OAAO,CAACC,IAAR,CAAa,wBAAb;EACH,CAFD;;EAIAvN,QAAQ,CAACwN,WAAT,GAAuB,CAAvB;EACAxN,QAAQ,CAACyN,iBAAT,GAA6B,CAA7B;EACAzN,QAAQ,CAAC0N,aAAT,GAAyB,CAAzB;EACA1N,QAAQ,CAAC2N,OAAT,GAAmB,CAAnB;EACA3N,QAAQ,CAAC4N,IAAT,GAAgB,CAAhB;EACA5N,QAAQ,CAAC6N,EAAT,GAAc,CAAd;EACA7N,QAAQ,CAAC8N,IAAT,GAAgB,CAAhB;;EAEA9N,QAAQ,CAAC+N,UAAT,GAAsB,UAAUvJ,KAAV,EAAiB;IACnC,OAAO,UAAUmE,IAAV,EAAgB;MACnB,OAAOlM,QAAQ,CAAC+H,KAAD,EAAQmE,IAAI,CAACa,QAAb,CAAf;IACH,CAFD;EAGH,CAJD;;EAMAxJ,QAAQ,CAACgO,gBAAT,GAA4B,UAAUX,IAAV,EAAgBY,OAAhB,EAAyBC,IAAzB,EAA+B;IACvD,IAAIC,OAAO,GAAGD,IAAI,IAAI,YAAY,CAAG,CAArC;;IAEAC,OAAO,CAACjT,SAAR,GAAoB,IAAI8E,QAAJ,CAAaqN,IAAb,CAApB;IACAc,OAAO,CAACjT,SAAR,CAAkBmD,WAAlB,GAAgC8P,OAAhC;IAEAxQ,MAAM,CAACwQ,OAAO,CAACjT,SAAT,EAAoB+S,OAApB,CAAN;IAEA,OAAOE,OAAP;EACH,CATD,CA1qEgB,CAorEhB;;;EACAnO,QAAQ,CAACoO,gBAAT,GAA4B,UAAUf,IAAV,EAAgBgB,SAAhB,EAA2BC,SAA3B,EAAsC;IAC9D,OAAO,KAAKtO,QAAQ,CAACgO,gBAAT,CAA0BX,IAA1B,EAAgC;MACxCjD,OAAO,EAAEpK,QAAQ,CAAC+N,UAAT,CAAoBM,SAApB,CAD+B;MAExCxR,QAAQ,EAAED,MAAM,CAAC0R,SAAD;IAFwB,CAAhC,CAAL,GAAP;EAIH,CALD;;EAOAtO,QAAQ,CAACuO,SAAT,GAAqB,UAAU5F,IAAV,EAAgB;IACjC,OAAOA,IAAI,CAAC6F,MAAL,IAAe,CAAC7F,IAAI,CAAC8F,QAAL,IAAiB9F,IAAI,CAAC+F,OAAvB,EAAgCC,OAAhC,CAAwC,GAAxC,MAAiD,CAAC,CAAxE;EACH,CAFD;;EAIA3O,QAAQ,CAAC4O,oBAAT,GAAgC5O,QAAQ,CAAC+N,UAAT,CAAoB,CAAC,CAAD,EAAI,CAAJ,CAApB,CAAhC;;EACA/N,QAAQ,CAAC6O,gBAAT,GAA4B,UAAUL,MAAV,EAAkBlF,GAAlB,EAAuBM,CAAvB,EAA0B;IAClD,IAAIkF,UAAU,GAAIlF,CAAC,CAACmF,YAAF,IAAkB,EAApC;;IAEA,IAAI,CAACP,MAAL,EAAa;MACT,OAAO,CAACM,UAAD,IAAgBxF,GAAG,CAAC0F,4BAAJ,IAAoC,CAAChP,QAAQ,CAACuO,SAAT,CAAmB3E,CAAnB,CAA5D;IACH;;IAED,IAAI+B,EAAE,GAAGrC,GAAG,CAAC2F,iBAAJ,CAAsBC,YAAtB,CAAmCV,MAAnC,EAA2ClF,GAAG,CAACzC,qBAA/C,CAAT;;IAEA,IAAI8E,EAAE,IAAI,IAAV,EAAgB;MACZ,MAAM,IAAIrG,KAAJ,CAAU,0BAA0BkJ,MAApC,CAAN;IACH;;IAED,OAAO7C,EAAE,KAAKmD,UAAd;EACH,CAdD;;EAeA9O,QAAQ,CAACmP,gBAAT,GAA4B,UAAUC,SAAV,EAAqB9F,GAArB,EAA0BM,CAA1B,EAA6B;IACrD,IAAIyF,UAAU,GAAIzF,CAAC,CAACwF,SAAF,IAAexF,CAAC,CAAC6E,QAAnC;IAEA,OAAOnF,GAAG,CAACgG,eAAJ,GACDF,SAAS,CAACG,WAAV,OAA4BF,UAAU,CAACE,WAAX,EAD3B,GAEDH,SAAS,KAAKC,UAFpB;EAGH,CAND;;EAQArP,QAAQ,CAAC4B,iBAAT,GAA6B5B,QAAQ,CAACgO,gBAAT,CACzBhO,QAAQ,CAACyN,iBADgB,EAEzB;IACIrD,OAAO,EAAE,UAAUR,CAAV,EAAaN,GAAb,EAAkB;MACvB,OAAOtJ,QAAQ,CAAC4O,oBAAT,CAA8BhF,CAA9B,KACH5J,QAAQ,CAAC6O,gBAAT,CAA0B,KAAKL,MAA/B,EAAuClF,GAAvC,EAA4CM,CAA5C,CADJ;IAEH,CAJL;IAKI/M,QAAQ,EAAE,YAAY;MAClB,OAAO,KAAK2R,MAAL,GAAc,IAArB;IACH;EAPL,CAFyB,EAWzB,SAAS5M,iBAAT,CAA2B4M,MAA3B,EAAmC;IAAE,KAAKA,MAAL,GAAcA,MAAd;EAAuB,CAXnC,CAA7B;EAcAxO,QAAQ,CAAC8B,aAAT,GAAyB9B,QAAQ,CAACgO,gBAAT,CACrBhO,QAAQ,CAAC0N,aADY,EAErB;IACItD,OAAO,EAAE,UAAUR,CAAV,EAAaN,GAAb,EAAkB;MACvB,OAAOtJ,QAAQ,CAAC+N,UAAT,CAAoB,CAAC,CAAD,EAAI,CAAJ,EAAO7C,cAAc,CAACsE,oBAAtB,CAApB,EAAiE5F,CAAjE,KACH5J,QAAQ,CAAC6O,gBAAT,CAA0B,KAAKL,MAA/B,EAAuClF,GAAvC,EAA4CM,CAA5C,CADG,IAEH5J,QAAQ,CAACmP,gBAAT,CAA0B,KAAKC,SAA/B,EAA0C9F,GAA1C,EAA+CM,CAA/C,CAFJ;IAGH,CALL;IAMI/M,QAAQ,EAAE,YAAY;MAClB,OAAO,KAAKuI,IAAZ;IACH;EARL,CAFqB,EAYrB,SAAStD,aAAT,CAAuBsD,IAAvB,EAA6B;IACzB,IAAIqK,SAAS,GAAGrK,IAAI,CAACvD,KAAL,CAAW,GAAX,CAAhB;IAEA,KAAKuD,IAAL,GAAYA,IAAZ;IACA,KAAKoJ,MAAL,GAAciB,SAAS,CAACrU,MAAV,GAAmB,CAAnB,GAAuBqU,SAAS,CAAC,CAAD,CAAhC,GAAsC,IAApD;IACA,KAAKL,SAAL,GAAiBK,SAAS,CAACA,SAAS,CAACrU,MAAV,GAAmB,CAAnB,GAAuB,CAAvB,GAA2B,CAA5B,CAA1B;EACH,CAlBoB,CAAzB;EAqBA4E,QAAQ,CAACyB,MAAT,GAAkBzB,QAAQ,CAACgO,gBAAT,CAA0BhO,QAAQ,CAAC6N,EAAnC,EAAuC;IACrDzD,OAAO,EAAE,UAAUR,CAAV,EAAaN,GAAb,EAAkB;MACvB,OAAOtJ,QAAQ,CAAC+N,UAAT,CAAoB,CAAC,CAAD,CAApB,EAAyBnE,CAAzB,KAA+B,CAACA,CAAC,CAAChM,MAAF,IAAYgM,CAAC,CAAC6E,QAAf,MAA6B,KAAKrJ,IAAxE;IACH,CAHoD;IAIrDvI,QAAQ,EAAE,YAAY;MAClB,OAAOG,IAAI,CAAC,0BAAD,EAA6B,IAA7B,EAAmC,KAAKoI,IAAxC,CAAX;IACH;EANoD,CAAvC,EAOf,UAAUA,IAAV,EAAgB;IAAE,KAAKA,IAAL,GAAYA,IAAZ;EAAmB,CAPtB,CAAlB,CA3vEgB,CAowEhB;EAEA;;EACApF,QAAQ,CAAC2B,WAAT,GAAuB3B,QAAQ,CAACoO,gBAAT,CAA0BpO,QAAQ,CAACwN,WAAnC,EAAgD,CAAC,CAAD,EAAI,CAAJ,EAAOtC,cAAc,CAACsE,oBAAtB,CAAhD,EAA6F,GAA7F,CAAvB,CAvwEgB,CAwwEhB;;EACAxP,QAAQ,CAACuB,QAAT,GAAoBvB,QAAQ,CAACoO,gBAAT,CAA0BpO,QAAQ,CAAC4N,IAAnC,EAAyC,CAAC,CAAD,EAAI,CAAJ,CAAzC,EAAiD,QAAjD,CAApB;EACA5N,QAAQ,CAACsB,WAAT,GAAuBtB,QAAQ,CAACoO,gBAAT,CAA0BpO,QAAQ,CAAC2N,OAAnC,EAA4C,CAAC,CAAD,CAA5C,EAAiD,WAAjD,CAAvB,CA1wEgB,CA2wEhB;;EACA3N,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACoO,gBAAT,CAA0BpO,QAAQ,CAAC8N,IAAnC,EAAyC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAzC,EAAgE,QAAhE,CAApB;EACA9N,QAAQ,CAACwB,SAAT,GAAqBxB,QAAQ,CAACoO,gBAAT,CAA0BpO,QAAQ,CAAC6N,EAAnC,EAAuC,CAAC,CAAD,CAAvC,EAA4C,0BAA5C,CAArB,CA7wEgB,CA+wEhB;;EAEAnM,iBAAiB,CAACxG,SAAlB,GAA8B,IAAIiM,UAAJ,EAA9B;EACAzF,iBAAiB,CAACxG,SAAlB,CAA4BmD,WAA5B,GAA0CqD,iBAA1C;EACAA,iBAAiB,CAACpD,UAAlB,GAA+B6I,UAAU,CAACjM,SAA1C;;EAEA,SAASwG,iBAAT,CAA2BgO,CAA3B,EAA8B;IAC1B,IAAI/T,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAUmR,CAAV;IACH;EACJ;;EAEDhO,iBAAiB,CAACxG,SAAlB,CAA4BqD,IAA5B,GAAmC,UAAUmR,CAAV,EAAa;IAC5C,KAAKC,QAAL,GAAgBD,CAAhB;EACH,CAFD;;EAIAhO,iBAAiB,CAACxG,SAAlB,CAA4B2B,QAA5B,GAAuC,YAAY;IAC/C,OAAO,MAAM,KAAK8S,QAAlB;EACH,CAFD;;EAIAjO,iBAAiB,CAACxG,SAAlB,CAA4ByL,QAA5B,GAAuC,UAAUjC,CAAV,EAAa;IAChD,IAAIkL,KAAK,GAAG1P,SAAS,CAAC2P,YAAV,CAAuB,KAAKF,QAA5B,EAAsCjL,CAAC,CAACuK,iBAAxC,EAA2DvK,CAAC,CAACkC,WAA7D,EAA0E,KAA1E,CAAZ;;IAEA,IAAIgJ,KAAK,CAAC,CAAD,CAAL,IAAY,IAAhB,EAAsB;MAClB,MAAM,IAAItK,KAAJ,CAAU,0BAA0B/J,EAApC,CAAN;IACH;;IACD,IAAIiC,MAAM,GAAGkH,CAAC,CAACoL,gBAAF,CAAmBC,WAAnB,CAA+BH,KAAK,CAAC,CAAD,CAApC,EAAyCA,KAAK,CAAC,CAAD,CAA9C,CAAb;;IACA,IAAI,CAACpS,MAAL,EAAa;MACT,MAAMuH,cAAc,CAACC,WAAf,CAA2B,0BAA0B,KAAKnI,QAAL,EAArD,CAAN;IACH;;IACD,OAAOW,MAAP;EACH,CAXD,CAnyEgB,CAgzEhB;;;EAEA+C,YAAY,CAACrF,SAAb,GAAyB,IAAIiM,UAAJ,EAAzB;EACA5G,YAAY,CAACrF,SAAb,CAAuBmD,WAAvB,GAAqCkC,YAArC;EACAA,YAAY,CAACjC,UAAb,GAA0B6I,UAAU,CAACjM,SAArC;;EAEA,SAASqF,YAAT,CAAsBhF,EAAtB,EAA0BD,IAA1B,EAAgC;IAC5B,IAAIK,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAUhD,EAAV,EAAcD,IAAd;IACH;EACJ;;EAEDiF,YAAY,CAACrF,SAAb,CAAuBqD,IAAvB,GAA8B,UAAUhD,EAAV,EAAcD,IAAd,EAAoB;IAC9C,KAAK0U,YAAL,GAAoBzU,EAApB;IACA,KAAKI,SAAL,GAAiBL,IAAjB;EACH,CAHD;;EAKAiF,YAAY,CAACrF,SAAb,CAAuB2B,QAAvB,GAAkC,YAAY;IAC1C,IAAIE,CAAC,GAAG,KAAKiT,YAAL,GAAoB,GAA5B;;IACA,KAAK,IAAIjU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKJ,SAAL,CAAeP,MAAnC,EAA2CW,CAAC,EAA5C,EAAgD;MAC5C,IAAIA,CAAC,GAAG,CAAR,EAAW;QACPgB,CAAC,IAAI,IAAL;MACH;;MACDA,CAAC,IAAI,KAAKpB,SAAL,CAAeI,CAAf,EAAkBc,QAAlB,EAAL;IACH;;IACD,OAAOE,CAAC,GAAG,GAAX;EACH,CATD;;EAWAwD,YAAY,CAACrF,SAAb,CAAuByL,QAAvB,GAAkC,UAAUjC,CAAV,EAAa;IAC3C,IAAI7I,CAAC,GAAGoU,gBAAgB,CAACC,sBAAjB,CAAwC,KAAKF,YAA7C,EAA2DtL,CAA3D,CAAR;;IAEA,IAAI,CAAC7I,CAAL,EAAQ;MACJ,MAAM,IAAIyJ,KAAJ,CAAU,sBAAsB,KAAK0K,YAArC,CAAN;IACH;;IAED,IAAIhK,CAAC,GAAG,CAACtB,CAAD,EAAIjJ,MAAJ,CAAW,KAAKE,SAAhB,CAAR;IACA,OAAOE,CAAC,CAACL,KAAF,CAAQkJ,CAAC,CAACyL,gBAAF,CAAmBC,OAA3B,EAAoCpK,CAApC,CAAP;EACH,CATD,CA50EgB,CAu1EhB;;;EAEA,IAAIqK,SAAS,GAAG,IAAItS,MAAJ,EAAhB;;EAEAsS,SAAS,CAAC1I,MAAV,GAAmB,UAAU2I,CAAV,EAAaC,CAAb,EAAgB;IAC/B,OAAOD,CAAC,CAAC3I,MAAF,CAAS4I,CAAT,CAAP;EACH,CAFD;;EAIAF,SAAS,CAACzI,QAAV,GAAqB,UAAU0I,CAAV,EAAaC,CAAb,EAAgB;IACjC,OAAOD,CAAC,CAAC1I,QAAF,CAAW2I,CAAX,CAAP;EACH,CAFD;;EAIAF,SAAS,CAACxI,QAAV,GAAqB,UAAUyI,CAAV,EAAaC,CAAb,EAAgB;IACjC,OAAOD,CAAC,CAACzI,QAAF,CAAW0I,CAAX,CAAP;EACH,CAFD;;EAIAF,SAAS,CAACvI,WAAV,GAAwB,UAAUwI,CAAV,EAAaC,CAAb,EAAgB;IACpC,OAAOD,CAAC,CAACxI,WAAF,CAAcyI,CAAd,CAAP;EACH,CAFD;;EAIAF,SAAS,CAACtI,eAAV,GAA4B,UAAUuI,CAAV,EAAaC,CAAb,EAAgB;IACxC,OAAOD,CAAC,CAACvI,eAAF,CAAkBwI,CAAlB,CAAP;EACH,CAFD;;EAIAF,SAAS,CAACrI,kBAAV,GAA+B,UAAUsI,CAAV,EAAaC,CAAb,EAAgB;IAC3C,OAAOD,CAAC,CAACtI,kBAAF,CAAqBuI,CAArB,CAAP;EACH,CAFD,CA/2EgB,CAm3EhB;;;EAEAlQ,OAAO,CAACnF,SAAR,GAAoB,IAAIiM,UAAJ,EAApB;EACA9G,OAAO,CAACnF,SAAR,CAAkBmD,WAAlB,GAAgCgC,OAAhC;EACAA,OAAO,CAAC/B,UAAR,GAAqB6I,UAAU,CAACjM,SAAhC;;EAEA,SAASmF,OAAT,CAAiBtD,CAAjB,EAAoB;IAChB,IAAIpB,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAUxB,CAAV;IACH;EACJ;;EAEDsD,OAAO,CAACnF,SAAR,CAAkBqD,IAAlB,GAAyB,UAAUxB,CAAV,EAAa;IAClC,KAAKI,GAAL,GAAW2N,MAAM,CAAC/N,CAAD,CAAjB;EACH,CAFD;;EAIAsD,OAAO,CAACnF,SAAR,CAAkB2B,QAAlB,GAA6B,YAAY;IACrC,OAAO,KAAKM,GAAZ;EACH,CAFD;;EAIAkD,OAAO,CAACnF,SAAR,CAAkByL,QAAlB,GAA6B,UAAUjC,CAAV,EAAa;IACtC,OAAO,IAAP;EACH,CAFD;;EAIArE,OAAO,CAACnF,SAAR,CAAkBsV,MAAlB,GAA2B,YAAY;IACnC,OAAO,IAAP;EACH,CAFD;;EAIAnQ,OAAO,CAACnF,SAAR,CAAkB0J,MAAlB,GAA2B,YAAY;IACnC,OAAO,IAAItE,OAAJ,CAAY,KAAKnD,GAAjB,CAAP;EACH,CAFD;;EAIAkD,OAAO,CAACnF,SAAR,CAAkBuM,IAAlB,GAAyB,YAAY;IACjC,OAAO,IAAIgJ,QAAJ,CAAa,KAAKtT,GAAlB,CAAP;EACH,CAFD;;EAIAkD,OAAO,CAACnF,SAAR,CAAkBoN,OAAlB,GAA4B,YAAY;IACpC,MAAM,IAAIhD,KAAJ,CAAU,kCAAV,CAAN;EACH,CAFD;;EAIAjF,OAAO,CAACnF,SAAR,CAAkBwV,WAAlB,GAAgC,YAAY;IACxC,OAAO,KAAKvT,GAAZ;EACH,CAFD;;EAIAkD,OAAO,CAACnF,SAAR,CAAkBkR,WAAlB,GAAgC,YAAY;IACxC,OAAO,KAAKxH,MAAL,GAAcwH,WAAd,EAAP;EACH,CAFD;;EAIA/L,OAAO,CAACnF,SAAR,CAAkBwM,YAAlB,GAAiC,YAAY;IACzC,OAAO,KAAKD,IAAL,GAAYC,YAAZ,EAAP;EACH,CAFD;;EAIArH,OAAO,CAACnF,SAAR,CAAkByM,MAAlB,GAA2B,UAAU4I,CAAV,EAAa;IACpC,IAAIrQ,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyBE,QAAzB,CAAJ,EAAwC;MACpC,OAAO,KAAKhJ,IAAL,GAAYE,MAAZ,CAAmB4I,CAAnB,CAAP;IACH;;IACD,IAAIrQ,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyBjQ,OAAzB,CAAJ,EAAuC;MACnC,OAAO,KAAKsE,MAAL,GAAc+C,MAAd,CAAqB4I,CAArB,CAAP;IACH;;IACD,IAAIrQ,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyB3E,QAAzB,CAAJ,EAAwC;MACpC,OAAO2E,CAAC,CAACI,iBAAF,CAAoB,IAApB,EAA0BN,SAAS,CAAC1I,MAApC,CAAP;IACH;;IACD,OAAO,IAAI8I,QAAJ,CAAa,KAAKtT,GAAL,IAAYoT,CAAC,CAACpT,GAA3B,CAAP;EACH,CAXD;;EAaAkD,OAAO,CAACnF,SAAR,CAAkB0M,QAAlB,GAA6B,UAAU2I,CAAV,EAAa;IACtC,IAAIrQ,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyBE,QAAzB,CAAJ,EAAwC;MACpC,OAAO,KAAKhJ,IAAL,GAAYG,QAAZ,CAAqB2I,CAArB,CAAP;IACH;;IACD,IAAIrQ,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyBjQ,OAAzB,CAAJ,EAAuC;MACnC,OAAO,KAAKsE,MAAL,GAAcgD,QAAd,CAAuB2I,CAAvB,CAAP;IACH;;IACD,IAAIrQ,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyB3E,QAAzB,CAAJ,EAAwC;MACpC,OAAO2E,CAAC,CAACI,iBAAF,CAAoB,IAApB,EAA0BN,SAAS,CAACzI,QAApC,CAAP;IACH;;IACD,OAAO,IAAI6I,QAAJ,CAAa,KAAKtT,GAAL,IAAYoT,CAAC,CAACpT,GAA3B,CAAP;EACH,CAXD;;EAaAkD,OAAO,CAACnF,SAAR,CAAkB2M,QAAlB,GAA6B,UAAU0I,CAAV,EAAa;IACtC,OAAO,KAAK3L,MAAL,GAAciD,QAAd,CAAuB0I,CAAvB,CAAP;EACH,CAFD;;EAIAlQ,OAAO,CAACnF,SAAR,CAAkB4M,WAAlB,GAAgC,UAAUyI,CAAV,EAAa;IACzC,OAAO,KAAK3L,MAAL,GAAckD,WAAd,CAA0ByI,CAA1B,CAAP;EACH,CAFD;;EAIAlQ,OAAO,CAACnF,SAAR,CAAkB6M,eAAlB,GAAoC,UAAUwI,CAAV,EAAa;IAC7C,OAAO,KAAK3L,MAAL,GAAcmD,eAAd,CAA8BwI,CAA9B,CAAP;EACH,CAFD;;EAIAlQ,OAAO,CAACnF,SAAR,CAAkB8M,kBAAlB,GAAuC,UAAUuI,CAAV,EAAa;IAChD,OAAO,KAAK3L,MAAL,GAAcoD,kBAAd,CAAiCuI,CAAjC,CAAP;EACH,CAFD,CA78EgB,CAi9EhB;;;EAEAjQ,OAAO,CAACpF,SAAR,GAAoB,IAAIiM,UAAJ,EAApB;EACA7G,OAAO,CAACpF,SAAR,CAAkBmD,WAAlB,GAAgCiC,OAAhC;EACAA,OAAO,CAAChC,UAAR,GAAqB6I,UAAU,CAACjM,SAAhC;;EAEA,SAASoF,OAAT,CAAiBsJ,CAAjB,EAAoB;IAChB,IAAIjO,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAUqL,CAAV;IACH;EACJ;;EAEDtJ,OAAO,CAACpF,SAAR,CAAkBqD,IAAlB,GAAyB,UAAUqL,CAAV,EAAa;IAClC,KAAK1D,GAAL,GAAW,OAAO0D,CAAP,KAAa,QAAb,GAAwB,KAAKlE,KAAL,CAAWkE,CAAX,CAAxB,GAAwCgH,MAAM,CAAChH,CAAD,CAAzD;EACH,CAFD;;EAIAtJ,OAAO,CAACpF,SAAR,CAAkB2V,YAAlB,GAAiC,2BAAjC;;EAEAvQ,OAAO,CAACpF,SAAR,CAAkBwK,KAAlB,GAA0B,UAAU3I,CAAV,EAAa;IACnC;IACA,OAAO,KAAK8T,YAAL,CAAkBC,IAAlB,CAAuB/T,CAAvB,IAA4BgU,UAAU,CAAChU,CAAD,CAAtC,GAA4C6T,MAAM,CAACI,GAA1D;EACH,CAHD;;EAKA,SAASC,cAAT,CAAwBC,SAAxB,EAAmC;IAC/B,IAAItB,KAAK,GAAGsB,SAAS,CAACrP,KAAV,CAAgB,IAAhB,CAAZ;IACA,IAAIsP,IAAI,GAAGvB,KAAK,CAAC,CAAD,CAAL,CAASwB,OAAT,CAAiB,GAAjB,EAAsB,EAAtB,CAAX;IACA,IAAIC,QAAQ,GAAGT,MAAM,CAAChB,KAAK,CAAC,CAAD,CAAN,CAArB;;IAEA,KAAK,IAAI7T,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsV,QAAQ,GAAG,CAA/B,EAAkCtV,CAAC,IAAI,CAAvC,EAA0C;MACtCoV,IAAI,GAAG,MAAMA,IAAb;IACH;;IAED,OAAO,OAAOA,IAAd;EACH;;EAED,SAASG,cAAT,CAAwBJ,SAAxB,EAAmC;IAC/B,IAAItB,KAAK,GAAGsB,SAAS,CAACrP,KAAV,CAAgB,GAAhB,CAAZ;IACA,IAAIsP,IAAI,GAAGvB,KAAK,CAAC,CAAD,CAAL,CAASwB,OAAT,CAAiB,GAAjB,EAAsB,EAAtB,CAAX;IACA,IAAIC,QAAQ,GAAGT,MAAM,CAAChB,KAAK,CAAC,CAAD,CAAN,CAArB;IACA,IAAI2B,aAAa,GAAGF,QAAQ,GAAG,CAAX,GAAeF,IAAI,CAAC/V,MAAxC;;IAEA,KAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwV,aAApB,EAAmCxV,CAAC,IAAI,CAAxC,EAA2C;MACvCoV,IAAI,IAAI,GAAR;IACH;;IAED,OAAOA,IAAP;EACH;;EAED7Q,OAAO,CAACpF,SAAR,CAAkB2B,QAAlB,GAA6B,YAAY;IACrC,IAAI2U,QAAQ,GAAG,KAAKtL,GAAL,CAASrJ,QAAT,EAAf;;IAEA,IAAI2U,QAAQ,CAAC7C,OAAT,CAAiB,IAAjB,MAA2B,CAAC,CAAhC,EAAmC;MAC/B,OAAOsC,cAAc,CAACO,QAAD,CAArB;IACH;;IAED,IAAIA,QAAQ,CAAC7C,OAAT,CAAiB,GAAjB,MAA0B,CAAC,CAA/B,EAAkC;MAC9B,OAAO2C,cAAc,CAACE,QAAD,CAArB;IACH;;IAED,OAAOA,QAAP;EACH,CAZD;;EAcAlR,OAAO,CAACpF,SAAR,CAAkByL,QAAlB,GAA6B,UAAUjC,CAAV,EAAa;IACtC,OAAO,IAAP;EACH,CAFD;;EAIApE,OAAO,CAACpF,SAAR,CAAkBsV,MAAlB,GAA2B,YAAY;IAGnC,OAAO,IAAInQ,OAAJ,CAAY,KAAKxD,QAAL,EAAZ,CAAP;EACH,CAJD;;EAMAyD,OAAO,CAACpF,SAAR,CAAkB0J,MAAlB,GAA2B,YAAY;IACnC,OAAO,IAAP;EACH,CAFD;;EAIAtE,OAAO,CAACpF,SAAR,CAAkBuM,IAAlB,GAAyB,YAAY;IACjC,OAAO,IAAIgJ,QAAJ,CAAa,KAAKvK,GAAlB,CAAP;EACH,CAFD;;EAIA5F,OAAO,CAACpF,SAAR,CAAkBoN,OAAlB,GAA4B,YAAY;IACpC,MAAM,IAAIhD,KAAJ,CAAU,kCAAV,CAAN;EACH,CAFD;;EAIAhF,OAAO,CAACpF,SAAR,CAAkBwV,WAAlB,GAAgC,YAAY;IACxC,OAAO,KAAKF,MAAL,GAAcE,WAAd,EAAP;EACH,CAFD;;EAIApQ,OAAO,CAACpF,SAAR,CAAkBkR,WAAlB,GAAgC,YAAY;IACxC,OAAO,KAAKlG,GAAZ;EACH,CAFD;;EAIA5F,OAAO,CAACpF,SAAR,CAAkBwM,YAAlB,GAAiC,YAAY;IACzC,OAAO,KAAKD,IAAL,GAAYC,YAAZ,EAAP;EACH,CAFD;;EAIApH,OAAO,CAACpF,SAAR,CAAkBmM,MAAlB,GAA2B,YAAY;IACnC,OAAO,IAAI/G,OAAJ,CAAY,CAAC,KAAK4F,GAAlB,CAAP;EACH,CAFD;;EAIA5F,OAAO,CAACpF,SAAR,CAAkByM,MAAlB,GAA2B,UAAU4I,CAAV,EAAa;IACpC,IAAIrQ,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyBE,QAAzB,CAAJ,EAAwC;MACpC,OAAO,KAAKhJ,IAAL,GAAYE,MAAZ,CAAmB4I,CAAnB,CAAP;IACH;;IACD,IAAIrQ,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyBlQ,OAAzB,CAAJ,EAAuC;MACnC,OAAO,KAAKsH,MAAL,CAAY4I,CAAC,CAAC3L,MAAF,EAAZ,CAAP;IACH;;IACD,IAAI1E,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyB3E,QAAzB,CAAJ,EAAwC;MACpC,OAAO2E,CAAC,CAACkB,iBAAF,CAAoB,IAApB,EAA0BpB,SAAS,CAAC1I,MAApC,CAAP;IACH;;IACD,OAAO,IAAI8I,QAAJ,CAAa,KAAKvK,GAAL,IAAYqK,CAAC,CAACrK,GAA3B,CAAP;EACH,CAXD;;EAaA5F,OAAO,CAACpF,SAAR,CAAkB0M,QAAlB,GAA6B,UAAU2I,CAAV,EAAa;IACtC,IAAIrQ,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyBE,QAAzB,CAAJ,EAAwC;MACpC,OAAO,KAAKhJ,IAAL,GAAYG,QAAZ,CAAqB2I,CAArB,CAAP;IACH;;IACD,IAAIrQ,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyBlQ,OAAzB,CAAJ,EAAuC;MACnC,OAAO,KAAKuH,QAAL,CAAc2I,CAAC,CAAC3L,MAAF,EAAd,CAAP;IACH;;IACD,IAAI1E,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyB3E,QAAzB,CAAJ,EAAwC;MACpC,OAAO2E,CAAC,CAACkB,iBAAF,CAAoB,IAApB,EAA0BpB,SAAS,CAACzI,QAApC,CAAP;IACH;;IACD,OAAO,IAAI6I,QAAJ,CAAa,KAAKvK,GAAL,IAAYqK,CAAC,CAACrK,GAA3B,CAAP;EACH,CAXD;;EAaA5F,OAAO,CAACpF,SAAR,CAAkB2M,QAAlB,GAA6B,UAAU0I,CAAV,EAAa;IACtC,IAAIrQ,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyB3E,QAAzB,CAAJ,EAAwC;MACpC,OAAO2E,CAAC,CAACkB,iBAAF,CAAoB,IAApB,EAA0BpB,SAAS,CAACvI,WAApC,CAAP;IACH;;IACD,IAAI5H,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyBE,QAAzB,KAAsCvQ,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyBlQ,OAAzB,CAA1C,EAA6E;MACzE,OAAO,KAAKwH,QAAL,CAAc0I,CAAC,CAAC3L,MAAF,EAAd,CAAP;IACH;;IACD,OAAO,IAAI6L,QAAJ,CAAa,KAAKvK,GAAL,GAAWqK,CAAC,CAACrK,GAA1B,CAAP;EACH,CARD;;EAUA5F,OAAO,CAACpF,SAAR,CAAkB4M,WAAlB,GAAgC,UAAUyI,CAAV,EAAa;IACzC,IAAIrQ,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyB3E,QAAzB,CAAJ,EAAwC;MACpC,OAAO2E,CAAC,CAACkB,iBAAF,CAAoB,IAApB,EAA0BpB,SAAS,CAACxI,QAApC,CAAP;IACH;;IACD,IAAI3H,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyBE,QAAzB,KAAsCvQ,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyBlQ,OAAzB,CAA1C,EAA6E;MACzE,OAAO,KAAKyH,WAAL,CAAiByI,CAAC,CAAC3L,MAAF,EAAjB,CAAP;IACH;;IACD,OAAO,IAAI6L,QAAJ,CAAa,KAAKvK,GAAL,GAAWqK,CAAC,CAACrK,GAA1B,CAAP;EACH,CARD;;EAUA5F,OAAO,CAACpF,SAAR,CAAkB6M,eAAlB,GAAoC,UAAUwI,CAAV,EAAa;IAC7C,IAAIrQ,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyB3E,QAAzB,CAAJ,EAAwC;MACpC,OAAO2E,CAAC,CAACkB,iBAAF,CAAoB,IAApB,EAA0BpB,SAAS,CAACrI,kBAApC,CAAP;IACH;;IACD,IAAI9H,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyBE,QAAzB,KAAsCvQ,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyBlQ,OAAzB,CAA1C,EAA6E;MACzE,OAAO,KAAK0H,eAAL,CAAqBwI,CAAC,CAAC3L,MAAF,EAArB,CAAP;IACH;;IACD,OAAO,IAAI6L,QAAJ,CAAa,KAAKvK,GAAL,IAAYqK,CAAC,CAACrK,GAA3B,CAAP;EACH,CARD;;EAUA5F,OAAO,CAACpF,SAAR,CAAkB8M,kBAAlB,GAAuC,UAAUuI,CAAV,EAAa;IAChD,IAAIrQ,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyB3E,QAAzB,CAAJ,EAAwC;MACpC,OAAO2E,CAAC,CAACkB,iBAAF,CAAoB,IAApB,EAA0BpB,SAAS,CAACtI,eAApC,CAAP;IACH;;IACD,IAAI7H,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyBE,QAAzB,KAAsCvQ,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyBlQ,OAAzB,CAA1C,EAA6E;MACzE,OAAO,KAAK2H,kBAAL,CAAwBuI,CAAC,CAAC3L,MAAF,EAAxB,CAAP;IACH;;IACD,OAAO,IAAI6L,QAAJ,CAAa,KAAKvK,GAAL,IAAYqK,CAAC,CAACrK,GAA3B,CAAP;EACH,CARD;;EAUA5F,OAAO,CAACpF,SAAR,CAAkB+M,IAAlB,GAAyB,UAAUsI,CAAV,EAAa;IAClC,OAAO,IAAIjQ,OAAJ,CAAY,KAAK4F,GAAL,GAAWqK,CAAC,CAACrK,GAAzB,CAAP;EACH,CAFD;;EAIA5F,OAAO,CAACpF,SAAR,CAAkBgN,KAAlB,GAA0B,UAAUqI,CAAV,EAAa;IACnC,OAAO,IAAIjQ,OAAJ,CAAY,KAAK4F,GAAL,GAAWqK,CAAC,CAACrK,GAAzB,CAAP;EACH,CAFD;;EAIA5F,OAAO,CAACpF,SAAR,CAAkBiN,QAAlB,GAA6B,UAAUoI,CAAV,EAAa;IACtC,OAAO,IAAIjQ,OAAJ,CAAY,KAAK4F,GAAL,GAAWqK,CAAC,CAACrK,GAAzB,CAAP;EACH,CAFD;;EAIA5F,OAAO,CAACpF,SAAR,CAAkBkN,GAAlB,GAAwB,UAAUmI,CAAV,EAAa;IACjC,OAAO,IAAIjQ,OAAJ,CAAY,KAAK4F,GAAL,GAAWqK,CAAC,CAACrK,GAAzB,CAAP;EACH,CAFD;;EAIA5F,OAAO,CAACpF,SAAR,CAAkBmN,GAAlB,GAAwB,UAAUkI,CAAV,EAAa;IACjC,OAAO,IAAIjQ,OAAJ,CAAY,KAAK4F,GAAL,GAAWqK,CAAC,CAACrK,GAAzB,CAAP;EACH,CAFD,CAvoFgB,CA2oFhB;;;EAEAuK,QAAQ,CAACvV,SAAT,GAAqB,IAAIiM,UAAJ,EAArB;EACAsJ,QAAQ,CAACvV,SAAT,CAAmBmD,WAAnB,GAAiCoS,QAAjC;EACAA,QAAQ,CAACnS,UAAT,GAAsB6I,UAAU,CAACjM,SAAjC;;EAEA,SAASuV,QAAT,CAAkBjJ,CAAlB,EAAqB;IACjB,IAAI7L,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAKmD,IAAL,CAAUiJ,CAAV;IACH;EACJ;;EAEDiJ,QAAQ,CAACvV,SAAT,CAAmBqD,IAAnB,GAA0B,UAAUiJ,CAAV,EAAa;IACnC,KAAKA,CAAL,GAASkK,OAAO,CAAClK,CAAD,CAAhB;EACH,CAFD;;EAIAiJ,QAAQ,CAACvV,SAAT,CAAmB2B,QAAnB,GAA8B,YAAY;IACtC,OAAO,KAAK2K,CAAL,CAAO3K,QAAP,EAAP;EACH,CAFD;;EAIA4T,QAAQ,CAACvV,SAAT,CAAmByL,QAAnB,GAA8B,UAAUjC,CAAV,EAAa;IACvC,OAAO,IAAP;EACH,CAFD;;EAIA+L,QAAQ,CAACvV,SAAT,CAAmBsV,MAAnB,GAA4B,YAAY;IACpC,OAAO,IAAInQ,OAAJ,CAAY,KAAKmH,CAAjB,CAAP;EACH,CAFD;;EAIAiJ,QAAQ,CAACvV,SAAT,CAAmB0J,MAAnB,GAA4B,YAAY;IACpC,OAAO,IAAItE,OAAJ,CAAY,KAAKkH,CAAjB,CAAP;EACH,CAFD;;EAIAiJ,QAAQ,CAACvV,SAAT,CAAmBuM,IAAnB,GAA0B,YAAY;IAClC,OAAO,IAAP;EACH,CAFD;;EAIAgJ,QAAQ,CAACvV,SAAT,CAAmBoN,OAAnB,GAA6B,YAAY;IACrC,MAAM,IAAIhD,KAAJ,CAAU,mCAAV,CAAN;EACH,CAFD;;EAIAmL,QAAQ,CAACvV,SAAT,CAAmBwV,WAAnB,GAAiC,YAAY;IACzC,OAAO,KAAKF,MAAL,GAAcE,WAAd,EAAP;EACH,CAFD;;EAIAD,QAAQ,CAACvV,SAAT,CAAmBkR,WAAnB,GAAiC,YAAY;IACzC,OAAO,KAAKxH,MAAL,GAAcwH,WAAd,EAAP;EACH,CAFD;;EAIAqE,QAAQ,CAACvV,SAAT,CAAmBwM,YAAnB,GAAkC,YAAY;IAC1C,OAAO,KAAKF,CAAZ;EACH,CAFD;;EAIAiJ,QAAQ,CAACvV,SAAT,CAAmByW,GAAnB,GAAyB,YAAY;IACjC,OAAO,IAAIlB,QAAJ,CAAa,CAAC,KAAKjJ,CAAnB,CAAP;EACH,CAFD;;EAIAiJ,QAAQ,CAACvV,SAAT,CAAmByM,MAAnB,GAA4B,UAAU4I,CAAV,EAAa;IACrC,IAAIrQ,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyBlQ,OAAzB,KAAqCH,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyBjQ,OAAzB,CAAzC,EAA4E;MACxE,OAAO,KAAKqH,MAAL,CAAY4I,CAAC,CAAC9I,IAAF,EAAZ,CAAP;IACH;;IACD,IAAIvH,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyB3E,QAAzB,CAAJ,EAAwC;MACpC,OAAO2E,CAAC,CAACqB,kBAAF,CAAqB,IAArB,EAA2BvB,SAAS,CAAC1I,MAArC,CAAP;IACH;;IACD,OAAO,IAAI8I,QAAJ,CAAa,KAAKjJ,CAAL,IAAU+I,CAAC,CAAC/I,CAAzB,CAAP;EACH,CARD;;EAUAiJ,QAAQ,CAACvV,SAAT,CAAmB0M,QAAnB,GAA8B,UAAU2I,CAAV,EAAa;IACvC,IAAIrQ,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyBlQ,OAAzB,KAAqCH,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyBjQ,OAAzB,CAAzC,EAA4E;MACxE,OAAO,KAAKsH,QAAL,CAAc2I,CAAC,CAAC9I,IAAF,EAAd,CAAP;IACH;;IACD,IAAIvH,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyB3E,QAAzB,CAAJ,EAAwC;MACpC,OAAO2E,CAAC,CAACqB,kBAAF,CAAqB,IAArB,EAA2BvB,SAAS,CAACzI,QAArC,CAAP;IACH;;IACD,OAAO,IAAI6I,QAAJ,CAAa,KAAKjJ,CAAL,IAAU+I,CAAC,CAAC/I,CAAzB,CAAP;EACH,CARD;;EAUAiJ,QAAQ,CAACvV,SAAT,CAAmB2M,QAAnB,GAA8B,UAAU0I,CAAV,EAAa;IACvC,OAAO,KAAK3L,MAAL,GAAciD,QAAd,CAAuB0I,CAAvB,CAAP;EACH,CAFD;;EAIAE,QAAQ,CAACvV,SAAT,CAAmB4M,WAAnB,GAAiC,UAAUyI,CAAV,EAAa;IAC1C,OAAO,KAAK3L,MAAL,GAAckD,WAAd,CAA0ByI,CAA1B,CAAP;EACH,CAFD;;EAIAE,QAAQ,CAACvV,SAAT,CAAmB6M,eAAnB,GAAqC,UAAUwI,CAAV,EAAa;IAC9C,OAAO,KAAK3L,MAAL,GAAcmD,eAAd,CAA8BwI,CAA9B,CAAP;EACH,CAFD;;EAIAE,QAAQ,CAACvV,SAAT,CAAmB8M,kBAAnB,GAAwC,UAAUuI,CAAV,EAAa;IACjD,OAAO,KAAK3L,MAAL,GAAcoD,kBAAd,CAAiCuI,CAAjC,CAAP;EACH,CAFD;;EAIAE,QAAQ,CAACoB,KAAT,GAAiB,IAAIpB,QAAJ,CAAa,IAAb,CAAjB;EACAA,QAAQ,CAACqB,MAAT,GAAkB,IAAIrB,QAAJ,CAAa,KAAb,CAAlB,CAxuFgB,CA0uFhB;;EAEAsB,OAAO,CAAC7W,SAAR,GAAoB,IAAI6C,MAAJ,EAApB;EACAgU,OAAO,CAAC7W,SAAR,CAAkBmD,WAAlB,GAAgC0T,OAAhC;EACAA,OAAO,CAACzT,UAAR,GAAqBP,MAAM,CAAC7C,SAA5B;;EAEA,SAAS6W,OAAT,CAAiBnI,CAAjB,EAAoB;IAChB,KAAKrL,IAAL,CAAUqL,CAAV;EACH;;EAEDmI,OAAO,CAAC7W,SAAR,CAAkBqD,IAAlB,GAAyB,UAAUqL,CAAV,EAAa;IAClC,KAAKoI,IAAL,GAAY,IAAZ;IACA,KAAKC,KAAL,GAAa,IAAb;IACA,KAAKtJ,IAAL,GAAYiB,CAAZ;IACA,KAAKsI,KAAL,GAAa,CAAb;EACH,CALD;;EAOAH,OAAO,CAAC7W,SAAR,CAAkBiX,OAAlB,GAA4B,YAAY;IACpC,IAAIC,MAAM,GAAG,KAAKJ,IAAL,IAAa,IAAb,GAAoB,CAApB,GAAwB,KAAKA,IAAL,CAAUE,KAA/C;IACA,IAAIG,MAAM,GAAG,KAAKJ,KAAL,IAAc,IAAd,GAAqB,CAArB,GAAyB,KAAKA,KAAL,CAAWC,KAAjD;;IAEA,IAAIE,MAAM,GAAGC,MAAM,GAAG,CAAtB,EAAyB;MACrB;MACA,IAAIC,OAAO,GAAG,KAAKN,IAAL,CAAUA,IAAV,IAAkB,IAAlB,GAAyB,CAAzB,GAA6B,KAAKA,IAAL,CAAUA,IAAV,CAAeE,KAA1D;MACA,IAAIK,OAAO,GAAG,KAAKP,IAAL,CAAUC,KAAV,IAAmB,IAAnB,GAA0B,CAA1B,GAA8B,KAAKD,IAAL,CAAUC,KAAV,CAAgBC,KAA5D;;MAEA,IAAII,OAAO,GAAGC,OAAd,EAAuB;QACnB;QACA,KAAKP,IAAL,CAAUQ,QAAV,GAFmB,CAGnB;MACH;;MACD,KAAKC,QAAL;IACH,CAXD,MAWO,IAAIL,MAAM,GAAG,CAAT,GAAaC,MAAjB,EAAyB;MAC5B;MACA,IAAIK,OAAO,GAAG,KAAKT,KAAL,CAAWA,KAAX,IAAoB,IAApB,GAA2B,CAA3B,GAA+B,KAAKA,KAAL,CAAWA,KAAX,CAAiBC,KAA9D;MACA,IAAIS,OAAO,GAAG,KAAKV,KAAL,CAAWD,IAAX,IAAmB,IAAnB,GAA0B,CAA1B,GAA8B,KAAKC,KAAL,CAAWD,IAAX,CAAgBE,KAA5D;;MAEA,IAAIS,OAAO,GAAGD,OAAd,EAAuB;QACnB;QACA,KAAKT,KAAL,CAAWQ,QAAX,GAFmB,CAGnB;MACH;;MACD,KAAKD,QAAL;IACH;EACJ,CA3BD;;EA6BAT,OAAO,CAAC7W,SAAR,CAAkBuX,QAAlB,GAA6B,YAAY;IACrC;IACA,IAAIG,UAAU,GAAG,KAAKjK,IAAtB;IACA,IAAIkK,WAAW,GAAG,KAAKZ,KAAvB;IACA,KAAKtJ,IAAL,GAAY,KAAKqJ,IAAL,CAAUrJ,IAAtB;IACA,KAAKsJ,KAAL,GAAa,KAAKD,IAAlB;IACA,KAAKA,IAAL,GAAY,KAAKA,IAAL,CAAUA,IAAtB;IACA,KAAKC,KAAL,CAAWD,IAAX,GAAkB,KAAKC,KAAL,CAAWA,KAA7B;IACA,KAAKA,KAAL,CAAWA,KAAX,GAAmBY,WAAnB;IACA,KAAKZ,KAAL,CAAWtJ,IAAX,GAAkBiK,UAAlB;IACA,KAAKX,KAAL,CAAWa,mBAAX;IACA,KAAKA,mBAAL;EACH,CAZD;;EAcAf,OAAO,CAAC7W,SAAR,CAAkBsX,QAAlB,GAA6B,YAAY;IACrC;IACA,IAAII,UAAU,GAAG,KAAKjK,IAAtB;IACA,IAAIoK,UAAU,GAAG,KAAKf,IAAtB;IACA,KAAKrJ,IAAL,GAAY,KAAKsJ,KAAL,CAAWtJ,IAAvB;IACA,KAAKqJ,IAAL,GAAY,KAAKC,KAAjB;IACA,KAAKA,KAAL,GAAa,KAAKA,KAAL,CAAWA,KAAxB;IACA,KAAKD,IAAL,CAAUC,KAAV,GAAkB,KAAKD,IAAL,CAAUA,IAA5B;IACA,KAAKA,IAAL,CAAUA,IAAV,GAAiBe,UAAjB;IACA,KAAKf,IAAL,CAAUrJ,IAAV,GAAiBiK,UAAjB;IACA,KAAKZ,IAAL,CAAUc,mBAAV;IACA,KAAKA,mBAAL;EACH,CAZD;;EAcAf,OAAO,CAAC7W,SAAR,CAAkB4X,mBAAlB,GAAwC,YAAY;IAChD,KAAKE,oBAAL;EACH,CAFD;;EAIAjB,OAAO,CAAC7W,SAAR,CAAkB8X,oBAAlB,GAAyC,YAAY;IACjD,KAAKd,KAAL,GAAa,KAAKvJ,IAAL,IAAa,IAAb,GAAoB,CAApB,GAAwB,CAArC;;IACA,IAAI,KAAKqJ,IAAL,IAAa,IAAjB,EAAuB;MACnB,KAAKE,KAAL,GAAa,KAAKF,IAAL,CAAUE,KAAV,GAAkB,CAA/B;IACH;;IACD,IAAI,KAAKD,KAAL,IAAc,IAAd,IAAsB,KAAKC,KAAL,IAAc,KAAKD,KAAL,CAAWC,KAAnD,EAA0D;MACtD,KAAKA,KAAL,GAAa,KAAKD,KAAL,CAAWC,KAAX,GAAmB,CAAhC;IACH;EACJ,CARD;;EAUA,SAASe,SAAT,CAAmBC,EAAnB,EAAuBC,EAAvB,EAA2B;IACvB,IAAID,EAAE,KAAKC,EAAX,EAAe;MACX,OAAO,CAAP;IACH;;IAED,IAAID,EAAE,CAACE,uBAAP,EAAgC;MAC5B,IAAIC,IAAI,GAAGH,EAAE,CAACE,uBAAH,CAA2BD,EAA3B,CAAX;;MAEA,IAAIE,IAAI,GAAG,IAAX,EAAiB;QACb;QACA,OAAO,CAAP;MACH;;MACD,IAAIA,IAAI,GAAG,IAAX,EAAiB;QACb;QACA,OAAO,CAAP;MACH;;MACD,IAAIA,IAAI,GAAG,IAAX,EAAiB;QACb;QACA,OAAO,CAAC,CAAR;MACH;;MAED,OAAO,CAAP;IACH;;IAED,IAAIC,EAAE,GAAG,CAAT;IAAA,IACIC,EAAE,GAAG,CADT;;IAEA,KAAK,IAAIC,EAAE,GAAGN,EAAd,EAAkBM,EAAE,IAAI,IAAxB,EAA8BA,EAAE,GAAGA,EAAE,CAAC5K,UAAH,IAAiB4K,EAAE,CAAC/G,YAAvD,EAAqE;MACjE6G,EAAE;IACL;;IACD,KAAK,IAAIG,EAAE,GAAGN,EAAd,EAAkBM,EAAE,IAAI,IAAxB,EAA8BA,EAAE,GAAGA,EAAE,CAAC7K,UAAH,IAAiB6K,EAAE,CAAChH,YAAvD,EAAqE;MACjE8G,EAAE;IACL,CA/BsB,CAiCvB;;;IACA,IAAID,EAAE,GAAGC,EAAT,EAAa;MACT,OAAOD,EAAE,GAAGC,EAAZ,EAAgB;QACZL,EAAE,GAAGA,EAAE,CAACtK,UAAH,IAAiBsK,EAAE,CAACzG,YAAzB;QACA6G,EAAE;MACL;;MACD,IAAIJ,EAAE,KAAKC,EAAX,EAAe;QACX,OAAO,CAAP;MACH;IACJ,CARD,MAQO,IAAII,EAAE,GAAGD,EAAT,EAAa;MAChB,OAAOC,EAAE,GAAGD,EAAZ,EAAgB;QACZH,EAAE,GAAGA,EAAE,CAACvK,UAAH,IAAiBuK,EAAE,CAAC1G,YAAzB;QACA8G,EAAE;MACL;;MACD,IAAIL,EAAE,KAAKC,EAAX,EAAe;QACX,OAAO,CAAC,CAAR;MACH;IACJ;;IAED,IAAIO,KAAK,GAAGR,EAAE,CAACtK,UAAH,IAAiBsK,EAAE,CAACzG,YAAhC;IAAA,IACIkH,KAAK,GAAGR,EAAE,CAACvK,UAAH,IAAiBuK,EAAE,CAAC1G,YADhC,CApDuB,CAuDvB;;IACA,OAAOiH,KAAK,KAAKC,KAAjB,EAAwB;MACpBT,EAAE,GAAGQ,KAAL;MACAP,EAAE,GAAGQ,KAAL;MACAD,KAAK,GAAGR,EAAE,CAACtK,UAAH,IAAiBsK,EAAE,CAACzG,YAA5B;MACAkH,KAAK,GAAGR,EAAE,CAACvK,UAAH,IAAiBuK,EAAE,CAAC1G,YAA5B;IACH;;IAED,IAAImH,QAAQ,GAAG1T,SAAS,CAAC2T,WAAV,CAAsBX,EAAtB,CAAf;IACA,IAAIY,QAAQ,GAAG5T,SAAS,CAAC2T,WAAV,CAAsBV,EAAtB,CAAf;;IAEA,IAAIS,QAAQ,IAAI,CAACE,QAAjB,EAA2B;MACvB,OAAO,CAAC,CAAR;IACH;;IACD,IAAI,CAACF,QAAD,IAAaE,QAAjB,EAA2B;MACvB,OAAO,CAAP;IACH;;IAED,IAAIJ,KAAJ,EAAW;MACP,IAAIK,EAAE,GAAGH,QAAQ,GAAGF,KAAK,CAACpJ,UAAT,GAAsBoJ,KAAK,CAACM,UAA7C;MAAA,IACIC,GAAG,GAAGF,EAAE,CAAC3Y,MADb;;MAEA,KAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkY,GAApB,EAAyBlY,CAAC,IAAI,CAA9B,EAAiC;QAC7B,IAAI6N,CAAC,GAAGmK,EAAE,CAAChY,CAAD,CAAV;;QACA,IAAI6N,CAAC,KAAKsJ,EAAV,EAAc;UACV,OAAO,CAAC,CAAR;QACH;;QACD,IAAItJ,CAAC,KAAKuJ,EAAV,EAAc;UACV,OAAO,CAAP;QACH;MACJ;IACJ;;IAED,MAAM,IAAI7N,KAAJ,CAAU,4CAAV,CAAN;EACH;;EAEDyM,OAAO,CAAC7W,SAAR,CAAkBgZ,GAAlB,GAAwB,UAAUtK,CAAV,EAAa;IACjC,IAAIA,CAAC,KAAK,KAAKjB,IAAf,EAAqB;MACjB,OAAO,KAAP;IACH;;IAED,IAAIwL,CAAC,GAAGlB,SAAS,CAACrJ,CAAD,EAAI,KAAKjB,IAAT,CAAjB;IAEA,IAAIyL,GAAG,GAAG,KAAV;;IACA,IAAID,CAAC,IAAI,CAAC,CAAV,EAAa;MACT,IAAI,KAAKnC,IAAL,IAAa,IAAjB,EAAuB;QACnB,KAAKA,IAAL,GAAY,IAAID,OAAJ,CAAYnI,CAAZ,CAAZ;QACAwK,GAAG,GAAG,IAAN;MACH,CAHD,MAGO;QACHA,GAAG,GAAG,KAAKpC,IAAL,CAAUkC,GAAV,CAActK,CAAd,CAAN;;QACA,IAAIwK,GAAJ,EAAS;UACL,KAAKjC,OAAL;QACH;MACJ;IACJ,CAVD,MAUO,IAAIgC,CAAC,IAAI,CAAT,EAAY;MACf,IAAI,KAAKlC,KAAL,IAAc,IAAlB,EAAwB;QACpB,KAAKA,KAAL,GAAa,IAAIF,OAAJ,CAAYnI,CAAZ,CAAb;QACAwK,GAAG,GAAG,IAAN;MACH,CAHD,MAGO;QACHA,GAAG,GAAG,KAAKnC,KAAL,CAAWiC,GAAX,CAAetK,CAAf,CAAN;;QACA,IAAIwK,GAAJ,EAAS;UACL,KAAKjC,OAAL;QACH;MACJ;IACJ;;IAED,IAAIiC,GAAJ,EAAS;MACL,KAAKpB,oBAAL;IACH;;IACD,OAAOoB,GAAP;EACH,CAlCD,CA55FgB,CAg8FhB;;;EAEAxI,QAAQ,CAAC1Q,SAAT,GAAqB,IAAIiM,UAAJ,EAArB;EACAyE,QAAQ,CAAC1Q,SAAT,CAAmBmD,WAAnB,GAAiCuN,QAAjC;EACAA,QAAQ,CAACtN,UAAT,GAAsB6I,UAAU,CAACjM,SAAjC;;EAEA,SAAS0Q,QAAT,GAAoB;IAChB,KAAKrN,IAAL;EACH;;EAEDqN,QAAQ,CAAC1Q,SAAT,CAAmBqD,IAAnB,GAA0B,YAAY;IAClC,KAAK8V,IAAL,GAAY,IAAZ;IACA,KAAKtL,KAAL,GAAa,EAAb;IACA,KAAKuL,IAAL,GAAY,CAAZ;EACH,CAJD;;EAMA1I,QAAQ,CAAC1Q,SAAT,CAAmB2B,QAAnB,GAA8B,YAAY;IACtC,IAAI0X,CAAC,GAAG,KAAKC,KAAL,EAAR;;IACA,IAAID,CAAC,IAAI,IAAT,EAAe;MACX,OAAO,EAAP;IACH;;IACD,OAAO,KAAKE,aAAL,CAAmBF,CAAnB,CAAP;EACH,CAND;;EAQA3I,QAAQ,CAAC1Q,SAAT,CAAmByL,QAAnB,GAA8B,UAAUjC,CAAV,EAAa;IACvC,OAAO,IAAP;EACH,CAFD;;EAIAkH,QAAQ,CAAC1Q,SAAT,CAAmBsV,MAAnB,GAA4B,YAAY;IACpC,OAAO,IAAInQ,OAAJ,CAAY,KAAKxD,QAAL,EAAZ,CAAP;EACH,CAFD;;EAIA+O,QAAQ,CAAC1Q,SAAT,CAAmBwV,WAAnB,GAAiC,YAAY;IACzC,OAAO,KAAK7T,QAAL,EAAP;EACH,CAFD;;EAIA+O,QAAQ,CAAC1Q,SAAT,CAAmB0J,MAAnB,GAA4B,YAAY;IACpC,OAAO,IAAItE,OAAJ,CAAY,KAAKkQ,MAAL,EAAZ,CAAP;EACH,CAFD;;EAIA5E,QAAQ,CAAC1Q,SAAT,CAAmBkR,WAAnB,GAAiC,YAAY;IACzC,OAAOwE,MAAM,CAAC,KAAKJ,MAAL,EAAD,CAAb;EACH,CAFD;;EAIA5E,QAAQ,CAAC1Q,SAAT,CAAmBuM,IAAnB,GAA0B,YAAY;IAClC,OAAO,IAAIgJ,QAAJ,CAAa,KAAK/I,YAAL,EAAb,CAAP;EACH,CAFD;;EAIAkE,QAAQ,CAAC1Q,SAAT,CAAmBwM,YAAnB,GAAkC,YAAY;IAC1C,OAAO,CAAC,CAAC,KAAK4M,IAAd;EACH,CAFD;;EAIA1I,QAAQ,CAAC1Q,SAAT,CAAmBoN,OAAnB,GAA6B,YAAY;IACrC,OAAO,IAAP;EACH,CAFD;;EAIAsD,QAAQ,CAAC1Q,SAAT,CAAmBuZ,aAAnB,GAAmC,UAAU7K,CAAV,EAAa;IAC5C,IAAIA,CAAC,CAACJ,QAAF,IAAc;IAAI;IAAlB,GACAI,CAAC,CAACJ,QAAF,IAAc;IAAI;IADlB,GAEAI,CAAC,CAACJ,QAAF,KAAe;IAAG;IAFtB,EAEkD;MAC9C,OAAO,KAAKkL,sBAAL,CAA4B9K,CAA5B,CAAP;IACH;;IACD,IAAIA,CAAC,CAACJ,QAAF,KAAe;IAAE;IAArB,EAAgD;MAC5C,OAAOI,CAAC,CAACjN,KAAF,IAAWiN,CAAC,CAAC+K,SAApB;IACH;;IACD,IAAI/K,CAAC,CAACgL,eAAN,EAAuB;MACnB,OAAOhL,CAAC,CAACiL,SAAT;IACH;;IACD,OAAOjL,CAAC,CAAC+K,SAAT;EACH,CAbD;;EAeA/I,QAAQ,CAAC1Q,SAAT,CAAmBwZ,sBAAnB,GAA4C,UAAU9K,CAAV,EAAa;IACrD,IAAI7M,CAAC,GAAG,EAAR;;IACA,KAAK,IAAIoW,EAAE,GAAGvJ,CAAC,CAACa,UAAhB,EAA4B0I,EAAE,IAAI,IAAlC,EAAwCA,EAAE,GAAGA,EAAE,CAACzI,WAAhD,EAA6D;MACzD,IAAIoK,EAAE,GAAG3B,EAAE,CAAC3J,QAAZ,CADyD,CAEzD;;MACA,IAAIsL,EAAE,KAAK,CAAP,IAAYA,EAAE,KAAK,CAAnB,IAAwBA,EAAE,KAAK,CAA/B,IAAoCA,EAAE,KAAK,CAA3C,IAAgDA,EAAE,KAAK,EAA3D,EAA+D;QAC3D/X,CAAC,IAAI,KAAK0X,aAAL,CAAmBtB,EAAnB,CAAL;MACH;IACJ;;IACD,OAAOpW,CAAP;EACH,CAVD;;EAYA6O,QAAQ,CAAC1Q,SAAT,CAAmB6Z,SAAnB,GAA+B,YAAY;IACvC,IAAI,CAAC,KAAKV,IAAN,IAAc,KAAKtL,KAAL,CAAW3N,MAA7B,EAAqC;MACjC,KAAKiZ,IAAL,GAAY,IAAItC,OAAJ,CAAY,KAAKhJ,KAAL,CAAW,CAAX,CAAZ,CAAZ;;MACA,KAAK,IAAIhN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKgN,KAAL,CAAW3N,MAA/B,EAAuCW,CAAC,IAAI,CAA5C,EAA+C;QAC3C,KAAKsY,IAAL,CAAUH,GAAV,CAAc,KAAKnL,KAAL,CAAWhN,CAAX,CAAd;MACH;IACJ;;IAED,OAAO,KAAKsY,IAAZ;EACH,CATD;;EAWAzI,QAAQ,CAAC1Q,SAAT,CAAmBsZ,KAAnB,GAA2B,YAAY;IACnC,IAAID,CAAC,GAAG,KAAKQ,SAAL,EAAR;;IACA,IAAIR,CAAC,IAAI,IAAT,EAAe;MACX,OAAO,IAAP;IACH;;IACD,OAAOA,CAAC,CAACvC,IAAF,IAAU,IAAjB,EAAuB;MACnBuC,CAAC,GAAGA,CAAC,CAACvC,IAAN;IACH;;IACD,OAAOuC,CAAC,CAAC5L,IAAT;EACH,CATD;;EAWAiD,QAAQ,CAAC1Q,SAAT,CAAmBgZ,GAAnB,GAAyB,UAAUtK,CAAV,EAAa;IAClC,KAAK,IAAI7N,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKgN,KAAL,CAAW3N,MAA/B,EAAuCW,CAAC,IAAI,CAA5C,EAA+C;MAC3C,IAAI6N,CAAC,KAAK,KAAKb,KAAL,CAAWhN,CAAX,CAAV,EAAyB;QACrB;MACH;IACJ;;IAED,KAAKsY,IAAL,GAAY,IAAZ;IACA,KAAKtL,KAAL,CAAWvM,IAAX,CAAgBoN,CAAhB;IACA,KAAK0K,IAAL,IAAa,CAAb;EACH,CAVD;;EAYA1I,QAAQ,CAAC1Q,SAAT,CAAmBiR,QAAnB,GAA8B,UAAUR,EAAV,EAAc;IACxC,IAAI5B,IAAI,GAAG,IAAX;IAEAnO,OAAO,CAAC,UAAUO,CAAV,EAAa;MAAE4N,IAAI,CAACmK,GAAL,CAAS/X,CAAT;IAAc,CAA9B,EAAgCwP,EAAhC,CAAP;EACH,CAJD;EAMA;AACJ;AACA;;;EACIC,QAAQ,CAAC1Q,SAAT,CAAmB8Z,OAAnB,GAA6B,YAAY;IACrC,IAAIhP,CAAC,GAAG,EAAR;IACA,KAAKiP,UAAL,CAAgB,KAAKF,SAAL,EAAhB,EAAkC/O,CAAlC;IACA,OAAOA,CAAP;EACH,CAJD;;EAMA4F,QAAQ,CAAC1Q,SAAT,CAAmB+Z,UAAnB,GAAgC,UAAUhP,CAAV,EAAaD,CAAb,EAAgB;IAC5C,IAAIC,CAAC,IAAI,IAAT,EAAe;MACX,KAAKgP,UAAL,CAAgBhP,CAAC,CAAC+L,IAAlB,EAAwBhM,CAAxB;MACAA,CAAC,CAACxJ,IAAF,CAAOyJ,CAAC,CAAC0C,IAAT;MACA,KAAKsM,UAAL,CAAgBhP,CAAC,CAACgM,KAAlB,EAAyBjM,CAAzB;IACH;EACJ,CAND;EAQA;AACJ;AACA;;;EACI4F,QAAQ,CAAC1Q,SAAT,CAAmB4Q,eAAnB,GAAqC,YAAY;IAC7C,OAAO,KAAK/C,KAAL,CAAW/N,KAAX,EAAP;EACH,CAFD;;EAIA4Q,QAAQ,CAAC1Q,SAAT,CAAmByV,iBAAnB,GAAuC,UAAUJ,CAAV,EAAa4D,CAAb,EAAgB;IACnD,IAAInO,CAAC,GAAG,KAAK8F,eAAL,EAAR;;IACA,KAAK,IAAI/P,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiK,CAAC,CAAC5K,MAAtB,EAA8BW,CAAC,EAA/B,EAAmC;MAC/B,IAAI6N,CAAC,GAAG5D,CAAC,CAACjK,CAAD,CAAT;MACA,IAAIuU,CAAC,GAAG,IAAIjQ,OAAJ,CAAY,KAAKoU,aAAL,CAAmB7K,CAAnB,CAAZ,CAAR;MACA,IAAIjE,GAAG,GAAGwO,CAAC,CAAC7D,CAAD,EAAIC,CAAJ,CAAX;;MACA,IAAI5K,GAAG,CAAC+B,YAAJ,EAAJ,EAAwB;QACpB,OAAO/B,GAAP;MACH;IACJ;;IACD,OAAO,IAAI8K,QAAJ,CAAa,KAAb,CAAP;EACH,CAXD;;EAaA7E,QAAQ,CAAC1Q,SAAT,CAAmBuW,iBAAnB,GAAuC,UAAUlB,CAAV,EAAa4D,CAAb,EAAgB;IACnD,IAAInO,CAAC,GAAG,KAAK8F,eAAL,EAAR;;IACA,KAAK,IAAI/P,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiK,CAAC,CAAC5K,MAAtB,EAA8BW,CAAC,EAA/B,EAAmC;MAC/B,IAAI6N,CAAC,GAAG5D,CAAC,CAACjK,CAAD,CAAT;MACA,IAAIuU,CAAC,GAAG,IAAIhQ,OAAJ,CAAY,KAAKmU,aAAL,CAAmB7K,CAAnB,CAAZ,CAAR;MACA,IAAIjE,GAAG,GAAGwO,CAAC,CAAC7D,CAAD,EAAIC,CAAJ,CAAX;;MACA,IAAI5K,GAAG,CAAC+B,YAAJ,EAAJ,EAAwB;QACpB,OAAO/B,GAAP;MACH;IACJ;;IACD,OAAO,IAAI8K,QAAJ,CAAa,KAAb,CAAP;EACH,CAXD;;EAaA7E,QAAQ,CAAC1Q,SAAT,CAAmB0W,kBAAnB,GAAwC,UAAUrB,CAAV,EAAa4D,CAAb,EAAgB;IACpD,OAAOA,CAAC,CAAC,KAAK1M,IAAL,EAAD,EAAc8I,CAAd,CAAR;EACH,CAFD;;EAIA3E,QAAQ,CAAC1Q,SAAT,CAAmBga,kBAAnB,GAAwC,UAAU3E,CAAV,EAAa4D,CAAb,EAAgB;IACpD,IAAI5W,GAAG,GAAG,KAAKuO,eAAL,EAAV;;IACA,IAAIqJ,OAAO,GAAG,UAAUC,GAAV,EAAeC,GAAf,EAAoB;MAAE,OAAOlB,CAAC,CAACkB,GAAD,EAAMD,GAAN,CAAR;IAAqB,CAAzD;;IAEA,KAAK,IAAIrZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwB,GAAG,CAACnC,MAAxB,EAAgCW,CAAC,EAAjC,EAAqC;MACjC,IAAIuU,CAAC,GAAG,IAAIjQ,OAAJ,CAAY,KAAKoU,aAAL,CAAmBlX,GAAG,CAACxB,CAAD,CAAtB,CAAZ,CAAR;MAEA,IAAI4J,GAAG,GAAG4K,CAAC,CAACI,iBAAF,CAAoBL,CAApB,EAAuB6E,OAAvB,CAAV;;MACA,IAAIxP,GAAG,CAAC+B,YAAJ,EAAJ,EAAwB;QACpB,OAAO/B,GAAP;MACH;IACJ;;IAED,OAAO,IAAI8K,QAAJ,CAAa,KAAb,CAAP;EACH,CAdD;;EAgBA7E,QAAQ,CAAC0J,WAAT,GAAuBxa,KAAK,CAAC,UAAUqZ,CAAV,EAAa5D,CAAb,EAAgB;IACzC,IAAIrQ,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyBlQ,OAAzB,CAAJ,EAAuC;MACnC,OAAO,KAAKsQ,iBAAL,CAAuBJ,CAAvB,EAA0B4D,CAA1B,CAAP;IACH;;IACD,IAAIjU,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyBjQ,OAAzB,CAAJ,EAAuC;MACnC,OAAO,KAAKmR,iBAAL,CAAuBlB,CAAvB,EAA0B4D,CAA1B,CAAP;IACH;;IACD,IAAIjU,SAAS,CAACC,WAAV,CAAsBoQ,CAAtB,EAAyBE,QAAzB,CAAJ,EAAwC;MACpC,OAAO,KAAKmB,kBAAL,CAAwBrB,CAAxB,EAA2B4D,CAA3B,CAAP;IACH;;IACD,OAAO,KAAKe,kBAAL,CAAwB3E,CAAxB,EAA2B4D,CAA3B,CAAP;EACH,CAX2B,CAA5B;EAaAvI,QAAQ,CAAC1Q,SAAT,CAAmByM,MAAnB,GAA4BiE,QAAQ,CAAC0J,WAAT,CAAqBjF,SAAS,CAAC1I,MAA/B,CAA5B;EACAiE,QAAQ,CAAC1Q,SAAT,CAAmB0M,QAAnB,GAA8BgE,QAAQ,CAAC0J,WAAT,CAAqBjF,SAAS,CAACzI,QAA/B,CAA9B;EACAgE,QAAQ,CAAC1Q,SAAT,CAAmB2M,QAAnB,GAA8B+D,QAAQ,CAAC0J,WAAT,CAAqBjF,SAAS,CAACxI,QAA/B,CAA9B;EACA+D,QAAQ,CAAC1Q,SAAT,CAAmB4M,WAAnB,GAAiC8D,QAAQ,CAAC0J,WAAT,CAAqBjF,SAAS,CAACvI,WAA/B,CAAjC;EACA8D,QAAQ,CAAC1Q,SAAT,CAAmB6M,eAAnB,GAAqC6D,QAAQ,CAAC0J,WAAT,CAAqBjF,SAAS,CAACtI,eAA/B,CAArC;EACA6D,QAAQ,CAAC1Q,SAAT,CAAmB8M,kBAAnB,GAAwC4D,QAAQ,CAAC0J,WAAT,CAAqBjF,SAAS,CAACrI,kBAA/B,CAAxC;;EAEA4D,QAAQ,CAAC1Q,SAAT,CAAmBqN,KAAnB,GAA2B,UAAUgI,CAAV,EAAa;IACpC,IAAI5E,EAAE,GAAG,IAAIC,QAAJ,EAAT;IACAD,EAAE,CAACQ,QAAH,CAAY,KAAKL,eAAL,EAAZ;IACAH,EAAE,CAACQ,QAAH,CAAYoE,CAAC,CAACzE,eAAF,EAAZ;IACA,OAAOH,EAAP;EACH,CALD,CArpGgB,CA4pGhB;;;EAEAT,cAAc,CAAChQ,SAAf,GAA2B,IAAI6C,MAAJ,EAA3B;EACAmN,cAAc,CAAChQ,SAAf,CAAyBmD,WAAzB,GAAuC6M,cAAvC;EACAA,cAAc,CAAC5M,UAAf,GAA4BP,MAAM,CAAC7C,SAAnC;;EAEA,SAASgQ,cAAT,CAAwBF,GAAxB,EAA6BW,EAA7B,EAAiC4I,CAAjC,EAAoC;IAChC,KAAKgB,gBAAL,GAAwB,IAAxB;IACA,KAAK5L,aAAL,GAAqB4K,CAAC,CAAC5K,aAAvB;IACA,KAAK8E,QAAL,GAAgB,YAAhB;IACA,KAAKD,MAAL,GAAcxD,GAAd;IACA,KAAKoE,SAAL,GAAiBpE,GAAjB;IACA,KAAK+D,YAAL,GAAoBpD,EAApB;IACA,KAAKgJ,SAAL,GAAiBhJ,EAAjB;IACA,KAAKc,YAAL,GAAoB8H,CAApB;IACA,KAAK/K,QAAL,GAAgB0B,cAAc,CAACsE,oBAA/B;EACH;;EAEDtE,cAAc,CAAChQ,SAAf,CAAyB2B,QAAzB,GAAoC,YAAY;IAC5C,OAAO,SAAS,KAAK2R,MAAd,GAAuB,QAAvB,GAAkC,KAAKO,YAAvC,GAAsD,MAA7D;EACH,CAFD,CA9qGgB,CAkrGhB;;;EAEA9C,YAAY,CAAC/Q,SAAb,GAAyB,IAAI6C,MAAJ,EAAzB;EACAkO,YAAY,CAAC/Q,SAAb,CAAuBmD,WAAvB,GAAqC4N,YAArC;EACAA,YAAY,CAAC3N,UAAb,GAA0BP,MAAM,CAAC7C,SAAjC;;EAEA,SAAS+Q,YAAT,CAAsBuJ,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkC;IAC9B,KAAK5F,gBAAL,GAAwB0F,EAAE,IAAI,IAAN,GAAaA,EAAb,GAAkB,IAAIG,gBAAJ,EAA1C;IACA,KAAK1G,iBAAL,GAAyBwG,EAAE,IAAI,IAAN,GAAaA,EAAb,GAAkB,IAAIG,iBAAJ,EAA3C;IACA,KAAKzF,gBAAL,GAAwBuF,EAAE,IAAI,IAAN,GAAaA,EAAb,GAAkB,IAAIzF,gBAAJ,EAA1C;EACH;;EAEDhE,YAAY,CAAC/Q,SAAb,CAAuB+N,MAAvB,GAAgC,UAAU4M,QAAV,EAAoB;IAChD,OAAOlY,MAAM,CAAC,IAAIsO,YAAJ,EAAD,EAAqB,IAArB,EAA2B4J,QAA3B,CAAb;EACH,CAFD,CA9rGgB,CAksGhB;;;EAEAF,gBAAgB,CAACza,SAAjB,GAA6B,IAAI6C,MAAJ,EAA7B;EACA4X,gBAAgB,CAACza,SAAjB,CAA2BmD,WAA3B,GAAyCsX,gBAAzC;EACAA,gBAAgB,CAACrX,UAAjB,GAA8BP,MAAM,CAAC7C,SAArC;;EAEA,SAASya,gBAAT,GAA4B,CAC3B;;EAEDA,gBAAgB,CAACza,SAAjB,CAA2B6U,WAA3B,GAAyC,UAAU+F,EAAV,EAAcnK,EAAd,EAAkB;IACvD,OAAO,IAAP;EACH,CAFD,CA3sGgB,CA+sGhB;;;EAEAsE,gBAAgB,CAAC/U,SAAjB,GAA6B,IAAI6C,MAAJ,EAA7B;EACAkS,gBAAgB,CAAC/U,SAAjB,CAA2BmD,WAA3B,GAAyC4R,gBAAzC;EACAA,gBAAgB,CAAC3R,UAAjB,GAA8BP,MAAM,CAAC7C,SAArC;;EAEA,SAAS+U,gBAAT,CAA0BG,OAA1B,EAAmC;IAC/B,KAAKA,OAAL,GAAeA,OAAO,IAAI,IAAX,GAAkBA,OAAlB,GAA4B2F,SAA3C;IACA,KAAKC,SAAL,GAAiB,IAAIjY,MAAJ,EAAjB;IACA,KAAKkY,oBAAL;EACH;;EAEDhG,gBAAgB,CAAC/U,SAAjB,CAA2B+a,oBAA3B,GAAkD,YAAY;IAC1D,KAAKD,SAAL,CAAe,QAAf,IAA2BD,SAAS,CAAC9Q,IAArC;IACA,KAAK+Q,SAAL,CAAe,YAAf,IAA+BD,SAAS,CAACG,QAAzC;IACA,KAAKF,SAAL,CAAe,SAAf,IAA4BD,SAAS,CAACI,KAAtC;IACA,KAAKH,SAAL,CAAe,MAAf,IAAyBD,SAAS,CAACK,EAAnC;IACA,KAAKJ,SAAL,CAAe,cAAf,IAAiCD,SAAS,CAAC3G,SAA3C;IACA,KAAK4G,SAAL,CAAe,iBAAf,IAAoCD,SAAS,CAAChH,YAA9C;IACA,KAAKiH,SAAL,CAAe,QAAf,IAA2BD,SAAS,CAAC3Q,IAArC;IACA,KAAK4Q,SAAL,CAAe,UAAf,IAA6BD,SAAS,CAACvF,MAAvC;IACA,KAAKwF,SAAL,CAAe,UAAf,IAA6BD,SAAS,CAACta,MAAvC;IACA,KAAKua,SAAL,CAAe,eAAf,IAAkCD,SAAS,CAACM,UAA5C;IACA,KAAKL,SAAL,CAAe,YAAf,IAA+BD,SAAS,CAACO,QAAzC;IACA,KAAKN,SAAL,CAAe,oBAAf,IAAuCD,SAAS,CAACQ,eAAjD;IACA,KAAKP,SAAL,CAAe,mBAAf,IAAsCD,SAAS,CAACS,cAAhD;IACA,KAAKR,SAAL,CAAe,aAAf,IAAgCD,SAAS,CAAChL,SAA1C;IACA,KAAKiL,SAAL,CAAe,iBAAf,IAAoCD,SAAS,CAACU,YAA9C;IACA,KAAKT,SAAL,CAAe,mBAAf,IAAsCD,SAAS,CAACW,cAAhD;IACA,KAAKV,SAAL,CAAe,aAAf,IAAgCD,SAAS,CAACY,SAA1C;IACA,KAAKX,SAAL,CAAe,WAAf,IAA8BD,SAAS,CAACa,QAAxC;IACA,KAAKZ,SAAL,CAAe,OAAf,IAA0BD,SAAS,CAACpE,GAApC;IACA,KAAKqE,SAAL,CAAe,QAAf,IAA2BD,SAAS,CAAClE,KAArC;IACA,KAAKmE,SAAL,CAAe,SAAf,IAA4BD,SAAS,CAACjE,MAAtC;IACA,KAAKkE,SAAL,CAAe,QAAf,IAA2BD,SAAS,CAACc,IAArC;IACA,KAAKb,SAAL,CAAe,UAAf,IAA6BD,SAAS,CAACnR,MAAvC;IACA,KAAKoR,SAAL,CAAe,OAAf,IAA0BD,SAAS,CAACe,GAApC;IACA,KAAKd,SAAL,CAAe,SAAf,IAA4BD,SAAS,CAACgB,KAAtC;IACA,KAAKf,SAAL,CAAe,WAAf,IAA8BD,SAAS,CAACiB,OAAxC;IACA,KAAKhB,SAAL,CAAe,SAAf,IAA4BD,SAAS,CAACkB,KAAtC;EACH,CA5BD;;EA8BAhH,gBAAgB,CAAC/U,SAAjB,CAA2Bgc,WAA3B,GAAyC,UAAUvL,EAAV,EAAcmK,EAAd,EAAkBja,CAAlB,EAAqB;IAC1D,KAAKma,SAAL,CAAe,MAAMrK,EAAN,GAAW,GAAX,GAAiBmK,EAAhC,IAAsCja,CAAtC;EACH,CAFD;;EAIAoU,gBAAgB,CAACC,sBAAjB,GAA0C,UAAUiH,KAAV,EAAiB5L,OAAjB,EAA0B;IAChE,IAAIqE,KAAK,GAAG1P,SAAS,CAAC2P,YAAV,CAAuBsH,KAAvB,EAA8B5L,OAAO,CAAC0D,iBAAtC,EAAyD1D,OAAO,CAAC3E,WAAjE,EAA8E,KAA9E,CAAZ;;IAEA,IAAIgJ,KAAK,CAAC,CAAD,CAAL,KAAa,IAAjB,EAAuB;MACnB,MAAM,IAAItK,KAAJ,CAAU,0BAA0BF,IAApC,CAAN;IACH;;IAED,OAAOmG,OAAO,CAAC4E,gBAAR,CAAyBiH,WAAzB,CAAqCxH,KAAK,CAAC,CAAD,CAA1C,EAA+CA,KAAK,CAAC,CAAD,CAApD,CAAP;EACH,CARD;;EAUAK,gBAAgB,CAAC/U,SAAjB,CAA2Bkc,WAA3B,GAAyC,UAAUhI,SAAV,EAAqByF,SAArB,EAAgC;IACrE,OAAO,KAAKmB,SAAL,CAAe,MAAMnB,SAAN,GAAkB,GAAlB,GAAwBzF,SAAvC,CAAP;EACH,CAFD,CAvwGgB,CA2wGhB;;;EAEAwG,iBAAiB,CAAC1a,SAAlB,GAA8B,IAAI6C,MAAJ,EAA9B;EACA6X,iBAAiB,CAAC1a,SAAlB,CAA4BmD,WAA5B,GAA0CuX,iBAA1C;EACAA,iBAAiB,CAACtX,UAAlB,GAA+BP,MAAM,CAAC7C,SAAtC;;EAEA,SAAS0a,iBAAT,GAA6B,CAC5B;;EAEDA,iBAAiB,CAAC1a,SAAlB,CAA4BgU,YAA5B,GAA2C,UAAUV,MAAV,EAAkB5E,CAAlB,EAAqB;IAC5D,IAAI4E,MAAM,IAAI,KAAd,EAAqB;MACjB,OAAOnI,KAAK,CAACY,iBAAb;IACH,CAFD,MAEO,IAAIuH,MAAM,IAAI,OAAd,EAAuB;MAC1B,OAAOnI,KAAK,CAACa,mBAAb;IACH;;IACD,IAAI0C,CAAC,CAACJ,QAAF,IAAc;IAAE;IAApB,EAA4C;MACxCI,CAAC,GAAGA,CAAC,CAACyN,eAAN;IACH,CAFD,MAEO,IAAIzN,CAAC,CAACJ,QAAF,IAAc;IAAE;IAApB,EAA6C;MAChDI,CAAC,GAAGnK,QAAQ,CAAC0K,eAAT,CAAyBP,CAAzB,CAAJ;IACH,CAFM,MAEA,IAAIA,CAAC,CAACJ,QAAF,IAAc;IAAE;IAApB,EAA2C;MAC9CI,CAAC,GAAGA,CAAC,CAAChB,UAAN;IACH;;IACD,OAAOgB,CAAC,IAAI,IAAL,IAAaA,CAAC,CAACJ,QAAF,IAAc;IAAE;IAApC,EAA2D;MACvD,IAAIa,GAAG,GAAGT,CAAC,CAACU,UAAZ;;MACA,KAAK,IAAIvO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsO,GAAG,CAACjP,MAAxB,EAAgCW,CAAC,EAAjC,EAAqC;QACjC,IAAIiK,CAAC,GAAGqE,GAAG,CAACG,IAAJ,CAASzO,CAAT,CAAR;QACA,IAAIub,KAAK,GAAGtR,CAAC,CAACZ,IAAF,IAAUY,CAAC,CAACyI,QAAxB;;QACA,IAAK6I,KAAK,KAAK,OAAV,IAAqB9I,MAAM,KAAK,EAAjC,IACG8I,KAAK,KAAK,WAAW9I,MAD5B,EACoC;UAChC,OAAO1D,MAAM,CAAC9E,CAAC,CAACrJ,KAAF,IAAWqJ,CAAC,CAAC2O,SAAd,CAAb;QACH;MACJ;;MACD/K,CAAC,GAAGA,CAAC,CAAChB,UAAN;IACH;;IACD,OAAO,IAAP;EACH,CA1BD,CApxGgB,CAgzGhB;;;EAEA,IAAImN,SAAS,GAAG,IAAIhY,MAAJ,EAAhB;;EAEAgY,SAAS,CAAC9Q,IAAV,GAAiB,UAAUP,CAAV,EAAa;IAC1B,IAAI/I,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MACvB,MAAM,IAAIkK,KAAJ,CAAU,0BAAV,CAAN;IACH;;IAED,OAAO,IAAIhF,OAAJ,CAAYoE,CAAC,CAACoC,WAAd,CAAP;EACH,CAND;;EAQAiP,SAAS,CAACG,QAAV,GAAqB,UAAUxR,CAAV,EAAa;IAC9B,IAAI/I,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MACvB,MAAM,IAAIkK,KAAJ,CAAU,8BAAV,CAAN;IACH;;IAED,OAAO,IAAIhF,OAAJ,CAAYoE,CAAC,CAACqC,eAAd,CAAP;EACH,CAND;;EAQAgP,SAAS,CAACI,KAAV,GAAkB,YAAY;IAC1B,IAAIzR,CAAC,GAAG/I,SAAS,CAAC,CAAD,CAAjB;IACA,IAAIgQ,EAAJ;;IACA,IAAIhQ,SAAS,CAACP,MAAV,IAAoB,CAApB,IAAyB,CAAC8E,SAAS,CAACC,WAAV,CAAsBwL,EAAE,GAAGhQ,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,CAA3B,EAAqDkH,QAArD,CAA9B,EAA8F;MAC1F,MAAM,IAAItG,KAAJ,CAAU,mCAAV,CAAN;IACH;;IACD,OAAO,IAAIhF,OAAJ,CAAYqL,EAAE,CAAC2I,IAAf,CAAP;EACH,CAPD;;EASAyB,SAAS,CAACK,EAAV,GAAe,YAAY;IACvB,IAAI1R,CAAC,GAAG/I,SAAS,CAAC,CAAD,CAAjB;IACA,IAAIya,EAAJ;;IACA,IAAIza,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MACvB,MAAM,IAAIkK,KAAJ,CAAU,8BAAV,CAAN;IACH;;IACD8Q,EAAE,GAAGza,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,CAAL;;IACA,IAAIxE,SAAS,CAACC,WAAV,CAAsBiW,EAAtB,EAA0BxK,QAA1B,CAAJ,EAAyC;MACrCwK,EAAE,GAAGA,EAAE,CAACpB,OAAH,GAAalY,IAAb,CAAkB,GAAlB,CAAL;IACH,CAFD,MAEO;MACHsZ,EAAE,GAAGA,EAAE,CAAC1F,WAAH,EAAL;IACH;;IACD,IAAI6G,GAAG,GAAGnB,EAAE,CAACvU,KAAH,CAAS,qBAAT,CAAV;IACA,IAAIsU,KAAK,GAAG,CAAZ;IACA,IAAIxK,EAAE,GAAG,IAAIC,QAAJ,EAAT;IACA,IAAIe,GAAG,GAAGjI,CAAC,CAACkC,WAAF,CAAc4C,QAAd,IAA0B;IAAE;IAA5B,EACJ9E,CAAC,CAACkC,WADE,GAEJlC,CAAC,CAACkC,WAAF,CAAc+C,aAFpB;;IAGA,KAAK,IAAI5N,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwb,GAAG,CAACnc,MAAxB,EAAgCW,CAAC,EAAjC,EAAqC;MACjC,IAAI6N,CAAJ;;MACA,IAAI+C,GAAG,CAAC6K,cAAR,EAAwB;QACpB5N,CAAC,GAAG+C,GAAG,CAAC6K,cAAJ,CAAmBD,GAAG,CAACxb,CAAD,CAAtB,CAAJ;MACH,CAFD,MAEO;QACH6N,CAAC,GAAG1J,SAAS,CAACsX,cAAV,CAAyB7K,GAAzB,EAA8B4K,GAAG,CAACxb,CAAD,CAAjC,CAAJ;MACH;;MACD,IAAI6N,CAAC,IAAI,IAAT,EAAe;QACX+B,EAAE,CAACuI,GAAH,CAAOtK,CAAP;QACAuM,KAAK;MACR;IACJ;;IACD,OAAOxK,EAAP;EACH,CA/BD;;EAiCAoK,SAAS,CAAC3G,SAAV,GAAsB,UAAU1K,CAAV,EAAa+S,KAAb,EAAoB;IACtC,IAAI7N,CAAJ;;IAEA,IAAIjO,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MACvBwO,CAAC,GAAGlF,CAAC,CAACkC,WAAN;IACH,CAFD,MAEO,IAAIjL,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MAC9BwO,CAAC,GAAG6N,KAAK,CAAC9Q,QAAN,CAAejC,CAAf,EAAkB8P,KAAlB,EAAJ;IACH,CAFM,MAEA;MACH,MAAM,IAAIlP,KAAJ,CAAU,yCAAV,CAAN;IACH;;IAED,IAAIsE,CAAC,IAAI,IAAT,EAAe;MACX,OAAO,IAAIvJ,OAAJ,CAAY,EAAZ,CAAP;IACH;;IAED,OAAO,IAAIA,OAAJ,CACHuJ,CAAC,CAACwF,SAAF,IAAmB;IACnBxF,CAAC,CAAC8N,QADF,IACkB;IAClB9N,CAAC,CAAChM,MAFF,IAEgB;IAChBgM,CAAC,CAAC6E,QAHF,IAGkB;IAClB,EALG,CAKgB;IALhB,CAAP;EAOH,CAtBD;;EAwBAsH,SAAS,CAAChH,YAAV,GAAyB,YAAY;IACjC,IAAIrK,CAAC,GAAG/I,SAAS,CAAC,CAAD,CAAjB;IACA,IAAIiO,CAAJ;;IACA,IAAIjO,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MACvBwO,CAAC,GAAGlF,CAAC,CAACkC,WAAN;IACH,CAFD,MAEO,IAAIjL,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MAC9BwO,CAAC,GAAGjO,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,EAAyB8P,KAAzB,EAAJ;IACH,CAFM,MAEA;MACH,MAAM,IAAIlP,KAAJ,CAAU,4CAAV,CAAN;IACH;;IACD,IAAIsE,CAAC,IAAI,IAAT,EAAe;MACX,OAAO,IAAIvJ,OAAJ,CAAY,EAAZ,CAAP;IACH;;IACD,OAAO,IAAIA,OAAJ,CAAYuJ,CAAC,CAACmF,YAAd,CAAP;EACH,CAdD;;EAgBAgH,SAAS,CAAC3Q,IAAV,GAAiB,YAAY;IACzB,IAAIV,CAAC,GAAG/I,SAAS,CAAC,CAAD,CAAjB;IACA,IAAIiO,CAAJ;;IACA,IAAIjO,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MACvBwO,CAAC,GAAGlF,CAAC,CAACkC,WAAN;IACH,CAFD,MAEO,IAAIjL,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MAC9BwO,CAAC,GAAGjO,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,EAAyB8P,KAAzB,EAAJ;IACH,CAFM,MAEA;MACH,MAAM,IAAIlP,KAAJ,CAAU,mCAAV,CAAN;IACH;;IACD,IAAIsE,CAAC,IAAI,IAAT,EAAe;MACX,OAAO,IAAIvJ,OAAJ,CAAY,EAAZ,CAAP;IACH;;IACD,IAAIuJ,CAAC,CAACJ,QAAF,IAAc;IAAE;IAApB,EAA2C;MACvC,OAAO,IAAInJ,OAAJ,CAAYuJ,CAAC,CAAC6E,QAAd,CAAP;IACH,CAFD,MAEO,IAAI7E,CAAC,CAACJ,QAAF,IAAc;IAAE;IAApB,EAA6C;MAChD,OAAO,IAAInJ,OAAJ,CAAYuJ,CAAC,CAACxE,IAAF,IAAUwE,CAAC,CAAC6E,QAAxB,CAAP;IACH,CAFM,MAEA,IAAI7E,CAAC,CAACJ,QAAF,KAAe;IAAE;IAArB,EAA2D;MAC9D,OAAO,IAAInJ,OAAJ,CAAYuJ,CAAC,CAAChM,MAAF,IAAYgM,CAAC,CAAC6E,QAA1B,CAAP;IACH,CAFM,MAEA,IAAI7E,CAAC,CAACwF,SAAF,IAAe,IAAnB,EAAyB;MAC5B,OAAO,IAAI/O,OAAJ,CAAY,EAAZ,CAAP;IACH,CAFM,MAEA;MACH,OAAO,IAAIA,OAAJ,CAAYuJ,CAAC,CAACwF,SAAd,CAAP;IACH;EACJ,CAxBD;;EA0BA2G,SAAS,CAACvF,MAAV,GAAmB,YAAY;IAC3B,IAAI9L,CAAC,GAAG/I,SAAS,CAAC,CAAD,CAAjB;;IACA,IAAIA,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MACvB,OAAO,IAAIiF,OAAJ,CAAYuL,QAAQ,CAAC1Q,SAAT,CAAmBuZ,aAAnB,CAAiC/P,CAAC,CAACkC,WAAnC,CAAZ,CAAP;IACH,CAFD,MAEO,IAAIjL,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MAC9B,OAAOO,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,EAAyB8L,MAAzB,EAAP;IACH;;IACD,MAAM,IAAIlL,KAAJ,CAAU,mCAAV,CAAN;EACH,CARD;;EAUAyQ,SAAS,CAACta,MAAV,GAAmB,UAAUiJ,CAAV,EAAa;IAC5B,IAAI/I,SAAS,CAACP,MAAV,GAAmB,CAAvB,EAA0B;MACtB,MAAM,IAAIkK,KAAJ,CAAU,qDAAV,CAAN;IACH;;IACD,IAAIvI,CAAC,GAAG,EAAR;;IACA,KAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,SAAS,CAACP,MAA9B,EAAsCW,CAAC,EAAvC,EAA2C;MACvCgB,CAAC,IAAIpB,SAAS,CAACI,CAAD,CAAT,CAAa4K,QAAb,CAAsBjC,CAAtB,EAAyBgM,WAAzB,EAAL;IACH;;IACD,OAAO,IAAIrQ,OAAJ,CAAYtD,CAAZ,CAAP;EACH,CATD;;EAWAgZ,SAAS,CAACM,UAAV,GAAuB,YAAY;IAC/B,IAAI3R,CAAC,GAAG/I,SAAS,CAAC,CAAD,CAAjB;;IACA,IAAIA,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MACvB,MAAM,IAAIkK,KAAJ,CAAU,8CAAV,CAAN;IACH;;IACD,IAAIf,EAAE,GAAG5I,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,EAAyBgM,WAAzB,EAAT;IACA,IAAIiH,EAAE,GAAGhc,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,EAAyBgM,WAAzB,EAAT;IACA,OAAO,IAAID,QAAJ,CAAalM,EAAE,CAACwG,SAAH,CAAa,CAAb,EAAgB4M,EAAE,CAACvc,MAAnB,KAA8Buc,EAA3C,CAAP;EACH,CARD;;EAUA5B,SAAS,CAACO,QAAV,GAAqB,YAAY;IAC7B,IAAI5R,CAAC,GAAG/I,SAAS,CAAC,CAAD,CAAjB;;IACA,IAAIA,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MACvB,MAAM,IAAIkK,KAAJ,CAAU,4CAAV,CAAN;IACH;;IACD,IAAIf,EAAE,GAAG5I,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,EAAyBgM,WAAzB,EAAT;IACA,IAAIiH,EAAE,GAAGhc,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,EAAyBgM,WAAzB,EAAT;IACA,OAAO,IAAID,QAAJ,CAAalM,EAAE,CAACoK,OAAH,CAAWgJ,EAAX,MAAmB,CAAC,CAAjC,CAAP;EACH,CARD;;EAUA5B,SAAS,CAACQ,eAAV,GAA4B,YAAY;IACpC,IAAI7R,CAAC,GAAG/I,SAAS,CAAC,CAAD,CAAjB;;IACA,IAAIA,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MACvB,MAAM,IAAIkK,KAAJ,CAAU,oDAAV,CAAN;IACH;;IACD,IAAIf,EAAE,GAAG5I,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,EAAyBgM,WAAzB,EAAT;IACA,IAAIiH,EAAE,GAAGhc,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,EAAyBgM,WAAzB,EAAT;IACA,OAAO,IAAIrQ,OAAJ,CAAYkE,EAAE,CAACwG,SAAH,CAAa,CAAb,EAAgBxG,EAAE,CAACoK,OAAH,CAAWgJ,EAAX,CAAhB,CAAZ,CAAP;EACH,CARD;;EAUA5B,SAAS,CAACS,cAAV,GAA2B,YAAY;IACnC,IAAI9R,CAAC,GAAG/I,SAAS,CAAC,CAAD,CAAjB;;IACA,IAAIA,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MACvB,MAAM,IAAIkK,KAAJ,CAAU,mDAAV,CAAN;IACH;;IACD,IAAIf,EAAE,GAAG5I,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,EAAyBgM,WAAzB,EAAT;IACA,IAAIiH,EAAE,GAAGhc,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,EAAyBgM,WAAzB,EAAT;;IACA,IAAIiH,EAAE,CAACvc,MAAH,IAAa,CAAjB,EAAoB;MAChB,OAAO,IAAIiF,OAAJ,CAAYkE,EAAZ,CAAP;IACH;;IACD,IAAIxI,CAAC,GAAGwI,EAAE,CAACoK,OAAH,CAAWgJ,EAAX,CAAR;;IACA,IAAI5b,CAAC,IAAI,CAAC,CAAV,EAAa;MACT,OAAO,IAAIsE,OAAJ,CAAY,EAAZ,CAAP;IACH;;IACD,OAAO,IAAIA,OAAJ,CAAYkE,EAAE,CAACwG,SAAH,CAAahP,CAAC,GAAG4b,EAAE,CAACvc,MAApB,CAAZ,CAAP;EACH,CAfD;;EAiBA2a,SAAS,CAAChL,SAAV,GAAsB,YAAY;IAC9B,IAAIrG,CAAC,GAAG/I,SAAS,CAAC,CAAD,CAAjB;;IACA,IAAI,EAAEA,SAAS,CAACP,MAAV,IAAoB,CAApB,IAAyBO,SAAS,CAACP,MAAV,IAAoB,CAA/C,CAAJ,EAAuD;MACnD,MAAM,IAAIkK,KAAJ,CAAU,sDAAV,CAAN;IACH;;IACD,IAAIvI,CAAC,GAAGpB,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,EAAyBgM,WAAzB,EAAR;IACA,IAAIwC,EAAE,GAAG0E,IAAI,CAACX,KAAL,CAAWtb,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,EAAyB0H,WAAzB,EAAX,IAAqD,CAA9D;IACA,IAAI+G,EAAE,GAAGxX,SAAS,CAACP,MAAV,IAAoB,CAApB,GAAwB8X,EAAE,GAAG0E,IAAI,CAACX,KAAL,CAAWtb,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,EAAyB0H,WAAzB,EAAX,CAA7B,GAAkF1M,SAA3F;IACA,OAAO,IAAIW,OAAJ,CAAYtD,CAAC,CAACgO,SAAF,CAAYmI,EAAZ,EAAgBC,EAAhB,CAAZ,CAAP;EACH,CATD;;EAWA4C,SAAS,CAACU,YAAV,GAAyB,YAAY;IACjC,IAAI/R,CAAC,GAAG/I,SAAS,CAAC,CAAD,CAAjB;IACA,IAAIoB,CAAJ;;IACA,IAAIpB,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MACvB2B,CAAC,GAAG6O,QAAQ,CAAC1Q,SAAT,CAAmBuZ,aAAnB,CAAiC/P,CAAC,CAACkC,WAAnC,CAAJ;IACH,CAFD,MAEO,IAAIjL,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MAC9B2B,CAAC,GAAGpB,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,EAAyBgM,WAAzB,EAAJ;IACH,CAFM,MAEA;MACH,MAAM,IAAIpL,KAAJ,CAAU,0CAAV,CAAN;IACH;;IACD,OAAO,IAAIhF,OAAJ,CAAYvD,CAAC,CAAC3B,MAAd,CAAP;EACH,CAXD;;EAaA2a,SAAS,CAACW,cAAV,GAA2B,YAAY;IACnC,IAAIhS,CAAC,GAAG/I,SAAS,CAAC,CAAD,CAAjB;IACA,IAAIoB,CAAJ;;IACA,IAAIpB,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MACvB2B,CAAC,GAAG6O,QAAQ,CAAC1Q,SAAT,CAAmBuZ,aAAnB,CAAiC/P,CAAC,CAACkC,WAAnC,CAAJ;IACH,CAFD,MAEO,IAAIjL,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MAC9B2B,CAAC,GAAGpB,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,EAAyBgM,WAAzB,EAAJ;IACH,CAFM,MAEA;MACH,MAAM,IAAIpL,KAAJ,CAAU,4CAAV,CAAN;IACH;;IACD,IAAIvJ,CAAC,GAAG,CAAR;IACA,IAAIgR,CAAC,GAAGhQ,CAAC,CAAC3B,MAAF,GAAW,CAAnB;;IACA,OAAO8E,SAAS,CAAC2X,OAAV,CAAkB9a,CAAC,CAACoI,UAAF,CAAa4H,CAAb,CAAlB,CAAP,EAA2C;MACvCA,CAAC;IACJ;;IACD,IAAI9G,CAAC,GAAG,EAAR;;IACA,OAAOlK,CAAC,IAAIgR,CAAL,IAAU7M,SAAS,CAAC2X,OAAV,CAAkB9a,CAAC,CAACoI,UAAF,CAAapJ,CAAb,CAAlB,CAAjB,EAAqD;MACjDA,CAAC;IACJ;;IACD,OAAOA,CAAC,IAAIgR,CAAZ,EAAe;MACX,IAAI7M,SAAS,CAAC2X,OAAV,CAAkB9a,CAAC,CAACoI,UAAF,CAAapJ,CAAb,CAAlB,CAAJ,EAAwC;QACpCkK,CAAC,IAAI,GAAL;;QACA,OAAOlK,CAAC,IAAIgR,CAAL,IAAU7M,SAAS,CAAC2X,OAAV,CAAkB9a,CAAC,CAACoI,UAAF,CAAapJ,CAAb,CAAlB,CAAjB,EAAqD;UACjDA,CAAC;QACJ;MACJ,CALD,MAKO;QACHkK,CAAC,IAAIlJ,CAAC,CAAC4H,MAAF,CAAS5I,CAAT,CAAL;QACAA,CAAC;MACJ;IACJ;;IACD,OAAO,IAAIsE,OAAJ,CAAY4F,CAAZ,CAAP;EACH,CA/BD;;EAiCA8P,SAAS,CAACY,SAAV,GAAsB,UAAUjS,CAAV,EAAaoT,MAAb,EAAqBC,KAArB,EAA4BC,GAA5B,EAAiC;IACnD,IAAIrc,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MACvB,MAAM,IAAIkK,KAAJ,CAAU,qDAAV,CAAN;IACH;;IAED,IAAI3I,KAAK,GAAGmb,MAAM,CAACnR,QAAP,CAAgBjC,CAAhB,EAAmBgM,WAAnB,EAAZ;IACA,IAAIuH,IAAI,GAAGF,KAAK,CAACpR,QAAN,CAAejC,CAAf,EAAkBgM,WAAlB,EAAX;IACA,IAAI5S,EAAE,GAAGka,GAAG,CAACrR,QAAJ,CAAajC,CAAb,EAAgBgM,WAAhB,EAAT;IAEA,IAAIwH,IAAI,GAAGlc,MAAM,CAAC,UAAUE,GAAV,EAAeic,EAAf,EAAmBpc,CAAnB,EAAsB;MACpC,IAAI,EAAEoc,EAAE,IAAIjc,GAAR,CAAJ,EAAkB;QACdA,GAAG,CAACic,EAAD,CAAH,GAAUpc,CAAC,GAAG+B,EAAE,CAAC1C,MAAP,GAAgB,EAAhB,GAAqB0C,EAAE,CAAC/B,CAAD,CAAjC;MACH;;MACD,OAAOG,GAAP;IACH,CALgB,EAKd,EALc,EAKV+b,IALU,CAAjB;IAOA,IAAIhS,CAAC,GAAGnJ,IAAI,CACR,EADQ,EAERV,GAAG,CAAC,UAAU+b,EAAV,EAAc;MACd,OAAOA,EAAE,IAAID,IAAN,GAAaA,IAAI,CAACC,EAAD,CAAjB,GAAwBA,EAA/B;IACH,CAFE,EAEAxb,KAFA,CAFK,CAAZ;IAOA,OAAO,IAAI0D,OAAJ,CAAY4F,CAAZ,CAAP;EACH,CAxBD;;EA0BA8P,SAAS,CAACa,QAAV,GAAqB,YAAY;IAC7B,IAAIlS,CAAC,GAAG/I,SAAS,CAAC,CAAD,CAAjB;;IACA,IAAIA,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MACvB,MAAM,IAAIkK,KAAJ,CAAU,mCAAV,CAAN;IACH;;IACD,OAAO3J,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,EAAyB+C,IAAzB,EAAP;EACH,CAND;;EAQAsO,SAAS,CAACpE,GAAV,GAAgB,UAAUjN,CAAV,EAAaoT,MAAb,EAAqB;IACjC,IAAInc,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MACvB,MAAM,IAAIkK,KAAJ,CAAU,+BAAV,CAAN;IACH;;IACD,OAAOwS,MAAM,CAACnR,QAAP,CAAgBjC,CAAhB,EAAmB+C,IAAnB,GAA0BkK,GAA1B,EAAP;EACH,CALD;;EAOAoE,SAAS,CAAClE,KAAV,GAAkB,YAAY;IAC1B,IAAIlW,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MACvB,MAAM,IAAIkK,KAAJ,CAAU,0BAAV,CAAN;IACH;;IACD,OAAOmL,QAAQ,CAACoB,KAAhB;EACH,CALD;;EAOAkE,SAAS,CAACjE,MAAV,GAAmB,YAAY;IAC3B,IAAInW,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MACvB,MAAM,IAAIkK,KAAJ,CAAU,2BAAV,CAAN;IACH;;IACD,OAAOmL,QAAQ,CAACqB,MAAhB;EACH,CALD;;EAOAiE,SAAS,CAACc,IAAV,GAAiB,YAAY;IACzB,IAAInS,CAAC,GAAG/I,SAAS,CAAC,CAAD,CAAjB;;IACA,IAAIA,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MACvB,MAAM,IAAIkK,KAAJ,CAAU,gCAAV,CAAN;IACH;;IACD,IAAIuR,IAAJ;;IACA,KAAK,IAAIjN,CAAC,GAAGlF,CAAC,CAACkC,WAAf,EAA4BgD,CAAC,IAAI,IAAL,IAAaA,CAAC,CAACJ,QAAF,IAAc;IAAE;IAAzD,EAAiFI,CAAC,GAAGA,CAAC,CAAChB,UAAvF,EAAmG;MAC/F,IAAI5C,CAAC,GAAG4D,CAAC,CAACwO,cAAF,CAAiB/R,KAAK,CAACY,iBAAvB,EAA0C,MAA1C,CAAR;;MACA,IAAIjB,CAAC,IAAI,IAAT,EAAe;QACX6Q,IAAI,GAAG/L,MAAM,CAAC9E,CAAD,CAAb;QACA;MACH;IACJ;;IACD,IAAI6Q,IAAI,IAAI,IAAZ,EAAkB;MACd,OAAOpG,QAAQ,CAACqB,MAAhB;IACH;;IACD,IAAI/U,CAAC,GAAGpB,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,EAAyBgM,WAAzB,EAAR;IACA,OAAO,IAAID,QAAJ,CAAaoG,IAAI,CAAC9L,SAAL,CAAe,CAAf,EAAkBhO,CAAC,CAAC3B,MAApB,KAA+B2B,CAA/B,KACZ8Z,IAAI,CAACzb,MAAL,IAAe2B,CAAC,CAAC3B,MAAjB,IAA2Byb,IAAI,CAAClS,MAAL,CAAY5H,CAAC,CAAC3B,MAAd,KAAyB,GADxC,CAAb,CAAP;EAEH,CAnBD;;EAqBA2a,SAAS,CAACnR,MAAV,GAAmB,YAAY;IAC3B,IAAIF,CAAC,GAAG/I,SAAS,CAAC,CAAD,CAAjB;;IACA,IAAI,EAAEA,SAAS,CAACP,MAAV,IAAoB,CAApB,IAAyBO,SAAS,CAACP,MAAV,IAAoB,CAA/C,CAAJ,EAAuD;MACnD,MAAM,IAAIkK,KAAJ,CAAU,mCAAV,CAAN;IACH;;IACD,IAAI3J,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MACvB,OAAO,IAAIkF,OAAJ,CAAYsL,QAAQ,CAAC1Q,SAAT,CAAmBuZ,aAAnB,CAAiC/P,CAAC,CAACkC,WAAnC,CAAZ,CAAP;IACH;;IACD,OAAOjL,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,EAAyBE,MAAzB,EAAP;EACH,CATD;;EAWAmR,SAAS,CAACe,GAAV,GAAgB,YAAY;IACxB,IAAIpS,CAAC,GAAG/I,SAAS,CAAC,CAAD,CAAjB;IACA,IAAIgQ,EAAJ;;IACA,IAAIhQ,SAAS,CAACP,MAAV,IAAoB,CAApB,IAAyB,CAAC8E,SAAS,CAACC,WAAV,CAAuBwL,EAAE,GAAGhQ,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,CAA5B,EAAuDkH,QAAvD,CAA9B,EAAgG;MAC5F,MAAM,IAAItG,KAAJ,CAAU,iCAAV,CAAN;IACH;;IACDqG,EAAE,GAAGA,EAAE,CAACG,eAAH,EAAL;IACA,IAAIlC,CAAC,GAAG,CAAR;;IACA,KAAK,IAAI7N,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4P,EAAE,CAACvQ,MAAvB,EAA+BW,CAAC,EAAhC,EAAoC;MAChC6N,CAAC,IAAI,IAAItJ,OAAJ,CAAYsL,QAAQ,CAAC1Q,SAAT,CAAmBuZ,aAAnB,CAAiC9I,EAAE,CAAC5P,CAAD,CAAnC,CAAZ,EAAqDqQ,WAArD,EAAL;IACH;;IACD,OAAO,IAAI9L,OAAJ,CAAYsJ,CAAZ,CAAP;EACH,CAZD;;EAcAmM,SAAS,CAACgB,KAAV,GAAkB,YAAY;IAC1B,IAAIrS,CAAC,GAAG/I,SAAS,CAAC,CAAD,CAAjB;;IACA,IAAIA,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MACvB,MAAM,IAAIkK,KAAJ,CAAU,iCAAV,CAAN;IACH;;IACD,OAAO,IAAIhF,OAAJ,CAAYsX,IAAI,CAACb,KAAL,CAAWpb,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,EAAyB0H,WAAzB,EAAX,CAAZ,CAAP;EACH,CAND;;EAQA2J,SAAS,CAACiB,OAAV,GAAoB,YAAY;IAC5B,IAAItS,CAAC,GAAG/I,SAAS,CAAC,CAAD,CAAjB;;IACA,IAAIA,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MACvB,MAAM,IAAIkK,KAAJ,CAAU,mCAAV,CAAN;IACH;;IACD,OAAO,IAAIhF,OAAJ,CAAYsX,IAAI,CAACS,IAAL,CAAU1c,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,EAAyB0H,WAAzB,EAAV,CAAZ,CAAP;EACH,CAND;;EAQA2J,SAAS,CAACkB,KAAV,GAAkB,YAAY;IAC1B,IAAIvS,CAAC,GAAG/I,SAAS,CAAC,CAAD,CAAjB;;IACA,IAAIA,SAAS,CAACP,MAAV,IAAoB,CAAxB,EAA2B;MACvB,MAAM,IAAIkK,KAAJ,CAAU,iCAAV,CAAN;IACH;;IACD,OAAO,IAAIhF,OAAJ,CAAYsX,IAAI,CAACX,KAAL,CAAWtb,SAAS,CAAC,CAAD,CAAT,CAAagL,QAAb,CAAsBjC,CAAtB,EAAyB0H,WAAzB,EAAX,CAAZ,CAAP;EACH,CAND,CAlqHgB,CA0qHhB;;;EAEA,IAAIlM,SAAS,GAAG,IAAInC,MAAJ,EAAhB;;EAEAmC,SAAS,CAAC2T,WAAV,GAAwB,UAAUyE,GAAV,EAAe;IACnC,OAAOA,GAAG,KAAKA,GAAG,CAAC9O,QAAJ,KAAiB,CAAjB,IAAsB8O,GAAG,CAAC7L,YAA/B,CAAV;EACH,CAFD;;EAIAvM,SAAS,CAACqY,UAAV,GAAuB,UAAUC,EAAV,EAAc;IACjC,IAAIzc,CAAC,GAAGyc,EAAE,CAAC7J,OAAH,CAAW,GAAX,CAAR;;IACA,IAAI5S,CAAC,IAAI,CAAC,CAAV,EAAa;MACT,OAAO,CAAC,IAAD,EAAOyc,EAAP,CAAP;IACH;;IACD,OAAO,CAACA,EAAE,CAACzN,SAAH,CAAa,CAAb,EAAgBhP,CAAhB,CAAD,EAAqByc,EAAE,CAACzN,SAAH,CAAahP,CAAC,GAAG,CAAjB,CAArB,CAAP;EACH,CAND;;EAQAmE,SAAS,CAAC2P,YAAV,GAAyB,UAAU2I,EAAV,EAAc/C,EAAd,EAAkB7L,CAAlB,EAAqB6O,UAArB,EAAiC;IACtD,IAAI7I,KAAK,GAAG1P,SAAS,CAACqY,UAAV,CAAqBC,EAArB,CAAZ;;IACA,IAAI5I,KAAK,CAAC,CAAD,CAAL,IAAY,IAAhB,EAAsB;MAClBA,KAAK,CAAC,CAAD,CAAL,GAAW6F,EAAE,CAACvG,YAAH,CAAgBU,KAAK,CAAC,CAAD,CAArB,EAA0BhG,CAA1B,CAAX;IACH,CAFD,MAEO;MACH,IAAI6O,UAAJ,EAAgB;QACZ7I,KAAK,CAAC,CAAD,CAAL,GAAW6F,EAAE,CAACvG,YAAH,CAAgB,EAAhB,EAAoBtF,CAApB,CAAX;;QACA,IAAIgG,KAAK,CAAC,CAAD,CAAL,IAAY,IAAhB,EAAsB;UAClBA,KAAK,CAAC,CAAD,CAAL,GAAW,EAAX;QACH;MACJ,CALD,MAKO;QACHA,KAAK,CAAC,CAAD,CAAL,GAAW,EAAX;MACH;IACJ;;IACD,OAAOA,KAAP;EACH,CAfD;;EAiBA1P,SAAS,CAAC2X,OAAV,GAAoB,UAAUnT,CAAV,EAAa;IAC7B,OAAOA,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAAjB,IAAwBA,CAAC,IAAI,GAA7B,IAAoCA,CAAC,IAAI,IAAhD;EACH,CAFD;;EAIAxE,SAAS,CAACgF,QAAV,GAAqB,UAAUR,CAAV,EAAa;IAC9B,OAAOA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAApB,IACHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MADjB,IAEHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAFjB,IAGHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAHjB,IAIHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAJjB,IAKHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MALjB,IAMHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MANjB,IAOHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAPjB,IAQHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MARjB,IASHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MATjB,IAUHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAVjB,IAWHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAXjB,IAYHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAZjB,IAaHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAbjB,IAcHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAdjB,IAeHA,CAAC,IAAI,MAfF,IAgBHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAhBjB,IAiBHA,CAAC,IAAI,MAjBF,IAkBHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAlBjB,IAmBHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAnBjB,IAoBHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MApBjB,IAqBHA,CAAC,IAAI,MArBF,IAsBHA,CAAC,IAAI,MAtBF,IAuBHA,CAAC,IAAI,MAvBF,IAwBHA,CAAC,IAAI,MAxBF,IAyBHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAzBjB,IA0BHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA1BjB,IA2BHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA3BjB,IA4BHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA5BjB,IA6BHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA7BjB,IA8BHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA9BjB,IA+BHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA/BjB,IAgCHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAhCjB,IAiCHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAjCjB,IAkCHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAlCjB,IAmCHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAnCjB,IAoCHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MApCjB,IAqCHA,CAAC,IAAI,MArCF,IAsCHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAtCjB,IAuCHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAvCjB,IAwCHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAxCjB,IAyCHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAzCjB,IA0CHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA1CjB,IA2CHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA3CjB,IA4CHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA5CjB,IA6CHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA7CjB,IA8CHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA9CjB,IA+CHA,CAAC,IAAI,MA/CF,IAgDHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAhDjB,IAiDHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAjDjB,IAkDHA,CAAC,IAAI,MAlDF,IAmDHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAnDjB,IAoDHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MApDjB,IAqDHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MArDjB,IAsDHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAtDjB,IAuDHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAvDjB,IAwDHA,CAAC,IAAI,MAxDF,IAyDHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAzDjB,IA0DHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA1DjB,IA2DHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA3DjB,IA4DHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA5DjB,IA6DHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA7DjB,IA8DHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA9DjB,IA+DHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA/DjB,IAgEHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAhEjB,IAiEHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAjEjB,IAkEHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAlEjB,IAmEHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAnEjB,IAoEHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MApEjB,IAqEHA,CAAC,IAAI,MArEF,IAsEHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAtEjB,IAuEHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAvEjB,IAwEHA,CAAC,IAAI,MAxEF,IAyEHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAzEjB,IA0EHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA1EjB,IA2EHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA3EjB,IA4EHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA5EjB,IA6EHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA7EjB,IA8EHA,CAAC,IAAI,MA9EF,IA+EHA,CAAC,IAAI,MA/EF,IAgFHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAhFjB,IAiFHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAjFjB,IAkFHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAlFjB,IAmFHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAnFjB,IAoFHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MApFjB,IAqFHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MArFjB,IAsFHA,CAAC,IAAI,MAtFF,IAuFHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAvFjB,IAwFHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAxFjB,IAyFHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAzFjB,IA0FHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA1FjB,IA2FHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA3FjB,IA4FHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA5FjB,IA6FHA,CAAC,IAAI,MA7FF,IA8FHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA9FjB,IA+FHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA/FjB,IAgGHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAhGjB,IAiGHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAjGjB,IAkGHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAlGjB,IAmGHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAnGjB,IAoGHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MApGjB,IAqGHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MArGjB,IAsGHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAtGjB,IAuGHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAvGjB,IAwGHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAxGjB,IAyGHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAzGjB,IA0GHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA1GjB,IA2GHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA3GjB,IA4GHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA5GjB,IA6GHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA7GjB,IA8GHA,CAAC,IAAI,MA9GF,IA+GHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA/GjB,IAgHHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAhHjB,IAiHHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAjHjB,IAkHHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAlHjB,IAmHHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAnHjB,IAoHHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MApHjB,IAqHHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MArHjB,IAsHHA,CAAC,IAAI,MAtHF,IAuHHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAvHjB,IAwHHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAxHjB,IAyHHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAzHjB,IA0HHA,CAAC,IAAI,MA1HF,IA2HHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA3HjB,IA4HHA,CAAC,IAAI,MA5HF,IA6HHA,CAAC,IAAI,MA7HF,IA8HHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA9HjB,IA+HHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA/HjB,IAgIHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAhIjB,IAiIHA,CAAC,IAAI,MAjIF,IAkIHA,CAAC,IAAI,MAlIF,IAmIHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAnIjB,IAoIHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MApIjB,IAqIHA,CAAC,IAAI,MArIF,IAsIHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAtIjB,IAuIHA,CAAC,IAAI,MAvIF,IAwIHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAxIjB,IAyIHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAzIjB,IA0IHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA1IjB,IA2IHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA3IjB,IA4IHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA5IjB,IA6IHA,CAAC,IAAI,MA7IF,IA8IHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA9IjB,IA+IHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA/IjB,IAgJHA,CAAC,IAAI,MAhJF,IAiJHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAjJjB,IAkJHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAlJjB,IAmJHA,CAAC,IAAI,MAnJF,IAoJHA,CAAC,IAAI,MApJF,IAqJHA,CAAC,IAAI,MArJF,IAsJHA,CAAC,IAAI,MAtJF,IAuJHA,CAAC,IAAI,MAvJF,IAwJHA,CAAC,IAAI,MAxJF,IAyJHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAzJjB,IA0JHA,CAAC,IAAI,MA1JF,IA2JHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA3JjB,IA4JHA,CAAC,IAAI,MA5JF,IA6JHA,CAAC,IAAI,MA7JF,IA8JHA,CAAC,IAAI,MA9JF,IA+JHA,CAAC,IAAI,MA/JF,IAgKHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAhKjB,IAiKHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAjKjB,IAkKHA,CAAC,IAAI,MAlKF,IAmKHA,CAAC,IAAI,MAnKF,IAoKHA,CAAC,IAAI,MApKF,IAqKHA,CAAC,IAAI,MArKF,IAsKHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAtKjB,IAuKHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAvKjB,IAwKHA,CAAC,IAAI,MAxKF,IAyKHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAzKjB,IA0KHA,CAAC,IAAI,MA1KF,IA2KHA,CAAC,IAAI,MA3KF,IA4KHA,CAAC,IAAI,MA5KF,IA6KHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA7KjB,IA8KHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA9KjB,IA+KHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA/KjB,IAgLHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAhLjB,IAiLHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAjLjB,IAkLHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAlLjB,IAmLHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAnLjB,IAoLHA,CAAC,IAAI,MApLF,IAqLHA,CAAC,IAAI,MArLF,IAsLHA,CAAC,IAAI,MAtLF,IAuLHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAvLjB,IAwLHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAxLjB,IAyLHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAzLjB,IA0LHA,CAAC,IAAI,MA1LF,IA2LHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA3LjB,IA4LHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA5LjB,IA6LHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA7LjB,IA8LHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA9LjB,IA+LHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA/LjB,IAgMHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAhMjB,IAiMHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAjMjB,IAkMHA,CAAC,IAAI,MAlMF,IAmMHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAnMjB,IAoMHA,CAAC,IAAI,MApMF,IAqMHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MArMjB,IAsMHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAtMjB,IAuMHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAvMjB,IAwMHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAxMjB,IAyMHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAzMjB,IA0MHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA1MjB,IA2MHA,CAAC,IAAI,MA3MF,IA4MHA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA5MxB;EA6MH,CA9MD;;EAgNAxE,SAAS,CAACmF,YAAV,GAAyB,UAAUX,CAAV,EAAa;IAClC,OAAOA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAApB,IACAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MADpB,IAEAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAFpB,IAGAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAHpB,IAIAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAJpB,IAKAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MALpB,IAMAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MANpB,IAOAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAPpB,IAQAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MARpB,IASAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MATpB,IAUAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAVpB,IAWAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAXpB,IAYAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAZpB,IAaAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAbpB,IAcAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAdpB,IAeAA,CAAC,IAAI,MAfL,IAgBAA,CAAC,IAAI,MAhBL,IAiBAA,CAAC,IAAI,MAjBL,IAkBAxE,SAAS,CAACgF,QAAV,CAAmBR,CAAnB,CAlBA,IAmBAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAnBpB,IAoBAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MApBpB,IAqBAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MArBpB,IAsBAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAtBpB,IAuBAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAvBpB,IAwBAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAxBpB,IAyBAA,CAAC,IAAI,MAzBL,IA0BAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA1BpB,IA2BAA,CAAC,IAAI,MA3BL,IA4BAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA5BpB,IA6BAA,CAAC,IAAI,MA7BL,IA8BAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA9BpB,IA+BAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA/BpB,IAgCAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAhCpB,IAiCAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAjCpB,IAkCAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAlCpB,IAmCAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAnCpB,IAoCAA,CAAC,IAAI,MApCL,IAqCAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MArCpB,IAsCAA,CAAC,IAAI,MAtCL,IAuCAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAvCpB,IAwCAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAxCpB,IAyCAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAzCpB,IA0CAA,CAAC,IAAI,MA1CL,IA2CAA,CAAC,IAAI,MA3CL,IA4CAA,CAAC,IAAI,MA5CL,IA6CAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA7CpB,IA8CAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA9CpB,IA+CAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA/CpB,IAgDAA,CAAC,IAAI,MAhDL,IAiDAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAjDpB,IAkDAA,CAAC,IAAI,MAlDL,IAmDAA,CAAC,IAAI,MAnDL,IAoDAA,CAAC,IAAI,MApDL,IAqDAA,CAAC,IAAI,MArDL,IAsDAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAtDpB,IAuDAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAvDpB,IAwDAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAxDpB,IAyDAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAzDpB,IA0DAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA1DpB,IA2DAA,CAAC,IAAI,MA3DL,IA4DAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA5DpB,IA6DAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA7DpB,IA8DAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA9DpB,IA+DAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA/DpB,IAgEAA,CAAC,IAAI,MAhEL,IAiEAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAjEpB,IAkEAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAlEpB,IAmEAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAnEpB,IAoEAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MApEpB,IAqEAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MArEpB,IAsEAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAtEpB,IAuEAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAvEpB,IAwEAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAxEpB,IAyEAA,CAAC,IAAI,MAzEL,IA0EAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA1EpB,IA2EAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA3EpB,IA4EAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA5EpB,IA6EAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA7EpB,IA8EAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA9EpB,IA+EAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA/EpB,IAgFAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAhFpB,IAiFAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAjFpB,IAkFAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAlFpB,IAmFAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAnFpB,IAoFAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MApFpB,IAqFAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MArFpB,IAsFAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAtFpB,IAuFAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAvFpB,IAwFAA,CAAC,IAAI,MAxFL,IAyFAA,CAAC,IAAI,MAzFL,IA0FAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA1FpB,IA2FAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA3FpB,IA4FAA,CAAC,IAAI,MA5FL,IA6FAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA7FpB,IA8FAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA9FpB,IA+FAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA/FpB,IAgGAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAhGpB,IAiGAA,CAAC,IAAI,MAjGL,IAkGAA,CAAC,IAAI,MAlGL,IAmGAA,CAAC,IAAI,MAnGL,IAoGAA,CAAC,IAAI,MApGL,IAqGAA,CAAC,IAAI,MArGL,IAsGAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAtGpB,IAuGAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAvGpB,IAwGAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MAxGpB,IAyGAA,CAAC,IAAI,MAzGL,IA0GAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA1GpB,IA2GAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA3GpB,IA4GAA,CAAC,IAAI,MA5GL,IA6GAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA7GpB,IA8GAA,CAAC,IAAI,MA9GL,IA+GAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA/GpB,IAgHAA,CAAC,IAAI,MAhHL,IAiHAA,CAAC,IAAI,MAjHL,IAkHAA,CAAC,IAAI,MAlHL,IAmHAA,CAAC,IAAI,MAnHL,IAoHAA,CAAC,IAAI,MApHL,IAqHAA,CAAC,IAAI,MArHL,IAsHAA,CAAC,IAAI,MAtHL,IAuHAA,CAAC,IAAI,MAvHL,IAwHAA,CAAC,IAAI,MAxHL,IAyHAA,CAAC,IAAI,MAzHL,IA0HAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA1HpB,IA2HAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA3HpB,IA4HAA,CAAC,IAAI,MAAL,IAAeA,CAAC,IAAI,MA5H3B;EA6HH,CA9HD;;EAgIAxE,SAAS,CAACwY,YAAV,GAAyB,UAAU9O,CAAV,EAAa;IAClC,KAAK,IAAIM,CAAC,GAAGN,CAAC,CAACa,UAAf,EAA2BP,CAAC,IAAI,IAAhC,EAAsCA,CAAC,GAAGA,CAAC,CAACQ,WAA5C,EAAyD;MACrD,IAAIR,CAAC,CAACV,QAAF,IAAc;MAAE;MAAhB,GAAsCU,CAAC,CAACV,QAAF,IAAc;MAAE;MAA1D,EAAuF;QACnF,IAAIzM,CAAC,GAAGmN,CAAC,CAACyK,SAAV;QACA,IAAIH,KAAK,GAAGtK,CAAZ;QACAA,CAAC,GAAGA,CAAC,CAACQ,WAAN;;QACA,OAAOR,CAAC,IAAI,IAAL,KAAcA,CAAC,CAACV,QAAF,IAAc;QAAE;QAAhB,GAAsCU,CAAC,CAACV,QAAF,IAAc;QAAE;QAApE,CAAP,EAAyG;UACrGzM,CAAC,IAAImN,CAAC,CAACyK,SAAP;UACA,IAAIgE,GAAG,GAAGzO,CAAV;UACAA,CAAC,GAAGA,CAAC,CAACQ,WAAN;UACAiO,GAAG,CAAC/P,UAAJ,CAAegQ,WAAf,CAA2BD,GAA3B;QACH;;QACD,IAAInE,KAAK,CAAChL,QAAN,IAAkB;QAAE;QAAxB,EAAqD;UACjD,IAAI+K,CAAC,GAAGC,KAAK,CAAC5L,UAAd;;UACA,IAAI4L,KAAK,CAAC9J,WAAN,IAAqB,IAAzB,EAA+B;YAC3B6J,CAAC,CAACqE,WAAF,CAAcpE,KAAd;YACAD,CAAC,CAACsE,WAAF,CAActE,CAAC,CAAC5K,aAAF,CAAgBmP,cAAhB,CAA+B/b,CAA/B,CAAd;UACH,CAHD,MAGO;YACH,IAAIgc,IAAI,GAAGvE,KAAK,CAAC9J,WAAjB;YACA6J,CAAC,CAACqE,WAAF,CAAcpE,KAAd;YACAD,CAAC,CAACyE,YAAF,CAAezE,CAAC,CAAC5K,aAAF,CAAgBmP,cAAhB,CAA+B/b,CAA/B,CAAf,EAAkDgc,IAAlD;UACH;QACJ,CAVD,MAUO;UACHvE,KAAK,CAACG,SAAN,GAAkB5X,CAAlB;QACH;;QACD,IAAImN,CAAC,IAAI,IAAT,EAAe;UACX;QACH;MACJ,CA1BD,MA0BO,IAAIA,CAAC,CAACV,QAAF,IAAc;MAAE;MAApB,EAA2C;QAC9CtJ,SAAS,CAACwY,YAAV,CAAuBxO,CAAvB;MACH;IACJ;EACJ,CAhCD;;EAkCAhK,SAAS,CAACC,WAAV,GAAwB,UAAUgU,CAAV,EAAazP,CAAb,EAAgB;IACpC,OAAOyP,CAAC,IAAI,IAAZ,EAAkB;MACd,IAAIA,CAAC,CAAC9V,WAAF,KAAkBqG,CAAtB,EAAyB;QACrB,OAAO,IAAP;MACH;;MACD,IAAIyP,CAAC,KAAKpW,MAAV,EAAkB;QACd,OAAO,KAAP;MACH;;MACDoW,CAAC,GAAGA,CAAC,CAAC9V,WAAF,CAAcC,UAAlB;IACH;;IACD,OAAO,KAAP;EACH,CAXD;;EAaA4B,SAAS,CAACsX,cAAV,GAA2B,UAAU5N,CAAV,EAAawM,EAAb,EAAiB;IACxC;IACA;IACA,IAAIxM,CAAC,CAACJ,QAAF,IAAc;IAAE;IAApB,EAA2C;MACvC,IAAII,CAAC,CAACqP,YAAF,CAAe,IAAf,KAAwB7C,EAAxB,IACGxM,CAAC,CAACwO,cAAF,CAAiB,IAAjB,EAAuB,IAAvB,KAAgChC,EADvC,EAC2C;QACvC,OAAOxM,CAAP;MACH;IACJ;;IACD,KAAK,IAAIM,CAAC,GAAGN,CAAC,CAACa,UAAf,EAA2BP,CAAC,IAAI,IAAhC,EAAsCA,CAAC,GAAGA,CAAC,CAACQ,WAA5C,EAAyD;MACrD,IAAI/E,GAAG,GAAGzF,SAAS,CAACsX,cAAV,CAAyBtN,CAAzB,EAA4BkM,EAA5B,CAAV;;MACA,IAAIzQ,GAAG,IAAI,IAAX,EAAiB;QACb,OAAOA,GAAP;MACH;IACJ;;IACD,OAAO,IAAP;EACH,CAhBD,CA9kIgB,CAgmIhB;;;EAEA,IAAIZ,cAAc,GAAI,YAAY;IAC9B,SAASmU,UAAT,CAAoBC,IAApB,EAA0BC,SAA1B,EAAqC;MACjC,IAAIC,GAAG,GAAGD,SAAS,GAAG,OAAOA,SAAS,CAACvc,QAAV,EAAV,GAAiC,EAApD;;MACA,QAAQsc,IAAR;QACI,KAAKpU,cAAc,CAACuU,sBAApB;UACI,OAAO,uBAAuBD,GAA9B;;QACJ,KAAKtU,cAAc,CAACwU,QAApB;UACI,OAAO,eAAeF,GAAtB;MAJR;;MAMA,OAAO,IAAP;IACH;;IAED,SAAStU,cAAT,CAAwBoU,IAAxB,EAA8BK,KAA9B,EAAqCC,OAArC,EAA8C;MAC1C,IAAIC,GAAG,GAAGpU,KAAK,CAAC5J,IAAN,CAAW,IAAX,EAAiBwd,UAAU,CAACC,IAAD,EAAOK,KAAP,CAAV,IAA2BC,OAA5C,CAAV;MAEAC,GAAG,CAACP,IAAJ,GAAWA,IAAX;MACAO,GAAG,CAACN,SAAJ,GAAgBI,KAAhB;MAEA,OAAOE,GAAP;IACH;;IAED3U,cAAc,CAAC7J,SAAf,GAA2B6C,MAAM,CAAC4b,MAAP,CAAcrU,KAAK,CAACpK,SAApB,CAA3B;IACA6J,cAAc,CAAC7J,SAAf,CAAyBmD,WAAzB,GAAuC0G,cAAvC;IACAA,cAAc,CAACzG,UAAf,GAA4BgH,KAA5B;;IAEAP,cAAc,CAAC7J,SAAf,CAAyB2B,QAAzB,GAAoC,YAAY;MAC5C,OAAO,KAAK4c,OAAZ;IACH,CAFD;;IAIA1U,cAAc,CAACC,WAAf,GAA6B,UAAUyU,OAAV,EAAmBD,KAAnB,EAA0B;MACnD,OAAO,IAAIzU,cAAJ,CAAmB,IAAnB,EAAyByU,KAAzB,EAAgCC,OAAhC,CAAP;IACH,CAFD;;IAIA1U,cAAc,CAACuU,sBAAf,GAAwC,EAAxC;IACAvU,cAAc,CAACwU,QAAf,GAA0B,EAA1B;IAEA,OAAOxU,cAAP;EACH,CArCoB,EAArB,CAlmIgB,CAyoIhB;;;EAEA6U,eAAe,CAAC1e,SAAhB,GAA4B,EAA5B;EACA0e,eAAe,CAAC1e,SAAhB,CAA0BmD,WAA1B,GAAwCub,eAAxC;EACAA,eAAe,CAACtb,UAAhB,GAA6BP,MAAM,CAAC7C,SAApC;;EAEA,SAAS0e,eAAT,CAAyBtT,CAAzB,EAA4BiK,CAA5B,EAA+BgE,CAA/B,EAAkC;IAC9B,KAAK3Z,KAAL,GAAa2Z,CAAC,CAAC7O,KAAF,CAAQY,CAAR,CAAb;IACA,KAAKiF,OAAL,GAAe,IAAIU,YAAJ,EAAf;IACA,KAAKV,OAAL,CAAa0D,iBAAb,GAAiC,IAAI4K,sBAAJ,CAA2BtJ,CAA3B,CAAjC;EACH;;EAEDqJ,eAAe,CAACE,gBAAhB,GAAmC,UAAUlQ,CAAV,EAAa;IAC5C,OAAOA,CAAC,CAACJ,QAAF,KAAe;IAAE;IAAjB,EAA0CI,CAA1C,GAA8CA,CAAC,CAACD,aAAvD;EACH,CAFD;;EAIAiQ,eAAe,CAACG,aAAhB,GAAgC,UAAUnQ,CAAV,EAAa;IACzC,IAAI,CAACA,CAAL,EAAQ;MAAE,OAAO,KAAP;IAAe;;IAEzB,IAAI+C,GAAG,GAAGiN,eAAe,CAACE,gBAAhB,CAAiClQ,CAAjC,CAAV;;IAEA,IAAI;MACA,OAAO+C,GAAG,CAACqN,cAAJ,CAAmBC,UAAnB,CAA8B,MAA9B,EAAsC,KAAtC,CAAP;IACH,CAFD,CAEE,OAAO3T,CAAP,EAAU;MACR,OAAO,IAAP;IACH;EACJ,CAVD;;EAYAsT,eAAe,CAAC1e,SAAhB,CAA0ByL,QAA1B,GAAqC,UAAUiD,CAAV,EAAa3D,CAAb,EAAgBN,GAAhB,EAAqB;IACtD,KAAK4F,OAAL,CAAa1E,qBAAb,GAAqC+C,CAArC,CADsD,CAEtD;IACA;IACA;;IACA,KAAK2B,OAAL,CAAa+D,eAAb,GAA+BsK,eAAe,CAACG,aAAhB,CAA8BnQ,CAA9B,CAA/B;IAEA,IAAIpM,MAAM,GAAG,KAAK5C,KAAL,CAAW+L,QAAX,CAAoB,KAAK4E,OAAzB,CAAb;IACA,OAAO,IAAI2O,WAAJ,CAAgB1c,MAAhB,EAAwByI,CAAxB,CAAP;EACH,CATD,CArqIgB,CAgrIhB;;;EAEA4T,sBAAsB,CAAC3e,SAAvB,GAAmC,EAAnC;EACA2e,sBAAsB,CAAC3e,SAAvB,CAAiCmD,WAAjC,GAA+Cwb,sBAA/C;EACAA,sBAAsB,CAACvb,UAAvB,GAAoCP,MAAM,CAAC7C,SAA3C;;EAEA,SAAS2e,sBAAT,CAAgCtJ,CAAhC,EAAmC;IAC/B,KAAK4J,eAAL,GAAuB5J,CAAvB;EACH;;EAEDsJ,sBAAsB,CAAC3e,SAAvB,CAAiCgU,YAAjC,GAAgD,UAAUV,MAAV,EAAkB5E,CAAlB,EAAqB;IACjE,IAAI,KAAKuQ,eAAL,IAAwB,IAA5B,EAAkC;MAC9B,OAAO,IAAP;IACH;;IACD,OAAO,KAAKA,eAAL,CAAqBC,kBAArB,CAAwC5L,MAAxC,CAAP;EACH,CALD,CA1rIgB,CAisIhB;;;EAEA6L,mBAAmB,CAACnf,SAApB,GAAgC,EAAhC;EACAmf,mBAAmB,CAACnf,SAApB,CAA8BmD,WAA9B,GAA4Cgc,mBAA5C;EACAA,mBAAmB,CAAC/b,UAApB,GAAiCP,MAAM,CAAC7C,SAAxC;;EAEA,SAASmf,mBAAT,CAA6BzQ,CAA7B,EAAgC;IAC5B,KAAKjB,IAAL,GAAYiB,CAAZ;IACA,KAAKqF,iBAAL,GAAyB,IAAI2G,iBAAJ,EAAzB;EACH;;EAEDyE,mBAAmB,CAACnf,SAApB,CAA8Bkf,kBAA9B,GAAmD,UAAU5L,MAAV,EAAkB;IACjE,OAAO,KAAKS,iBAAL,CAAuBC,YAAvB,CAAoCV,MAApC,EAA4C,KAAK7F,IAAjD,CAAP;EACH,CAFD,CA5sIgB,CAgtIhB;;;EAEAuR,WAAW,CAAChf,SAAZ,GAAwB,EAAxB;EACAgf,WAAW,CAAChf,SAAZ,CAAsBmD,WAAtB,GAAoC6b,WAApC;EACAA,WAAW,CAAC5b,UAAZ,GAAyBP,MAAM,CAAC7C,SAAhC;;EAEA,SAASgf,WAAT,CAAqBxK,CAArB,EAAwBzJ,CAAxB,EAA2B;IACvB,IAAIA,CAAC,IAAIiU,WAAW,CAACI,QAArB,EAA+B;MAC3B,IAAI5K,CAAC,CAACrR,WAAF,KAAkBgC,OAAtB,EAA+B;QAC3B4F,CAAC,GAAGiU,WAAW,CAACK,WAAhB;MACH,CAFD,MAEO,IAAI7K,CAAC,CAACrR,WAAF,KAAkBiC,OAAtB,EAA+B;QAClC2F,CAAC,GAAGiU,WAAW,CAACM,WAAhB;MACH,CAFM,MAEA,IAAI9K,CAAC,CAACrR,WAAF,KAAkBoS,QAAtB,EAAgC;QACnCxK,CAAC,GAAGiU,WAAW,CAACO,YAAhB;MACH,CAFM,MAEA,IAAI/K,CAAC,CAACrR,WAAF,KAAkBuN,QAAtB,EAAgC;QACnC3F,CAAC,GAAGiU,WAAW,CAACQ,4BAAhB;MACH;IACJ;;IACD,KAAKC,UAAL,GAAkB1U,CAAlB;;IACA,QAAQA,CAAR;MACI,KAAKiU,WAAW,CAACM,WAAjB;QACI,KAAKpO,WAAL,GAAmBsD,CAAC,CAACtD,WAAF,EAAnB;QACA;;MACJ,KAAK8N,WAAW,CAACK,WAAjB;QACI,KAAK7J,WAAL,GAAmBhB,CAAC,CAACgB,WAAF,EAAnB;QACA;;MACJ,KAAKwJ,WAAW,CAACO,YAAjB;QACI,KAAK/S,YAAL,GAAoBgI,CAAC,CAAChI,YAAF,EAApB;QACA;;MACJ,KAAKwS,WAAW,CAACU,uBAAjB;MACA,KAAKV,WAAW,CAACW,uBAAjB;QACI,IAAInL,CAAC,CAACrR,WAAF,KAAkBuN,QAAtB,EAAgC;UAC5B,KAAKkP,eAAL,GAAuBpL,CAAC,CAAC8E,KAAF,EAAvB;UACA;QACH;;QACD;;MACJ,KAAK0F,WAAW,CAACQ,4BAAjB;MACA,KAAKR,WAAW,CAACa,0BAAjB;QACI,IAAIrL,CAAC,CAACrR,WAAF,KAAkBuN,QAAtB,EAAgC;UAC5B,KAAKoP,oBAAL,GAA4B,KAA5B;UACA,KAAKjS,KAAL,GAAa2G,CAAC,CAACsF,OAAF,EAAb;UACA,KAAKiG,aAAL,GAAqB,CAArB;UACA;QACH;;QACD;;MACJ,KAAKf,WAAW,CAACgB,4BAAjB;MACA,KAAKhB,WAAW,CAACiB,0BAAjB;QACI,IAAIzL,CAAC,CAACrR,WAAF,KAAkBuN,QAAtB,EAAgC;UAC5B,KAAK7C,KAAL,GAAa2G,CAAC,CAACsF,OAAF,EAAb;UACA,KAAKoG,cAAL,GAAsB,KAAKrS,KAAL,CAAW3N,MAAjC;UACA;QACH;;QACD;IAjCR;;IAmCA,MAAM,IAAI2J,cAAJ,CAAmBA,cAAc,CAACwU,QAAlC,CAAN;EACH;;EAAA;;EAEDW,WAAW,CAAChf,SAAZ,CAAsBmgB,WAAtB,GAAoC,YAAY;IAC5C,IAAI,KAAKV,UAAL,IAAmBT,WAAW,CAACQ,4BAA/B,IACG,KAAKC,UAAL,IAAmBT,WAAW,CAACa,0BADtC,EACkE;MAC9D,MAAM,IAAIhW,cAAJ,CAAmBA,cAAc,CAACwU,QAAlC,CAAN;IACH;;IACD,OAAO,KAAKxQ,KAAL,CAAW,KAAKkS,aAAL,EAAX,CAAP;EACH,CAND;;EAQAf,WAAW,CAAChf,SAAZ,CAAsBogB,YAAtB,GAAqC,UAAUvf,CAAV,EAAa;IAC9C,IAAI,KAAK4e,UAAL,IAAmBT,WAAW,CAACgB,4BAA/B,IACG,KAAKP,UAAL,IAAmBT,WAAW,CAACiB,0BADtC,EACkE;MAC9D,MAAM,IAAIpW,cAAJ,CAAmBA,cAAc,CAACwU,QAAlC,CAAN;IACH;;IACD,OAAO,KAAKxQ,KAAL,CAAWhN,CAAX,CAAP;EACH,CAND;;EAQAme,WAAW,CAACI,QAAZ,GAAuB,CAAvB;EACAJ,WAAW,CAACM,WAAZ,GAA0B,CAA1B;EACAN,WAAW,CAACK,WAAZ,GAA0B,CAA1B;EACAL,WAAW,CAACO,YAAZ,GAA2B,CAA3B;EACAP,WAAW,CAACQ,4BAAZ,GAA2C,CAA3C;EACAR,WAAW,CAACa,0BAAZ,GAAyC,CAAzC;EACAb,WAAW,CAACgB,4BAAZ,GAA2C,CAA3C;EACAhB,WAAW,CAACiB,0BAAZ,GAAyC,CAAzC;EACAjB,WAAW,CAACU,uBAAZ,GAAsC,CAAtC;EACAV,WAAW,CAACW,uBAAZ,GAAsC,CAAtC,CAlyIgB,CAoyIhB;;EAEA,SAASU,uBAAT,CAAiC5O,GAAjC,EAAsC4H,CAAtC,EAAyC;IACrC5H,GAAG,CAAC6O,gBAAJ,GAAuB,UAAUlV,CAAV,EAAaiK,CAAb,EAAgB;MACnC,IAAI;QACA,OAAO,IAAIqJ,eAAJ,CAAoBtT,CAApB,EAAuBiK,CAAvB,EAA0BgE,CAA1B,CAAP;MACH,CAFD,CAEE,OAAOjO,CAAP,EAAU;QACR,MAAM,IAAIvB,cAAJ,CAAmBA,cAAc,CAACuU,sBAAlC,EAA0DhT,CAA1D,CAAN;MACH;IACJ,CAND;;IAOAqG,GAAG,CAAC8O,gBAAJ,GAAuB,UAAU7R,CAAV,EAAa;MAChC,OAAO,IAAIyQ,mBAAJ,CAAwBzQ,CAAxB,CAAP;IACH,CAFD;;IAGA+C,GAAG,CAAChG,QAAJ,GAAe,UAAUL,CAAV,EAAayN,EAAb,EAAiBxD,CAAjB,EAAoBtK,CAApB,EAAuBN,GAAvB,EAA4B;MACvC,IAAIM,CAAC,GAAG,CAAJ,IAASA,CAAC,GAAG,CAAjB,EAAoB;QAChB,MAAM;UAAEkT,IAAI,EAAE,CAAR;UAAWtc,QAAQ,EAAE,YAAY;YAAE,OAAO,4BAAP;UAAsC;QAAzE,CAAN;MACH;;MACD,OAAO8P,GAAG,CAAC6O,gBAAJ,CAAqBlV,CAArB,EAAwBiK,CAAxB,EAA2BgE,CAA3B,EAA8B5N,QAA9B,CAAuCoN,EAAvC,EAA2C9N,CAA3C,EAA8CN,GAA9C,CAAP;IACH,CALD;EAMH;;EAAA,CAvzIe,CAyzIhB;EAEA;;EACA,IAAI;IACA,IAAI+V,aAAa,GAAG,IAApB;;IACA,IAAI;MACA,IAAIC,QAAQ,CAAC3B,cAAT,IACG2B,QAAQ,CAAC3B,cAAT,CAAwBC,UAD3B,IAEG0B,QAAQ,CAAC3B,cAAT,CAAwBC,UAAxB,CAAmC,OAAnC,EAA4C,IAA5C,CAFP,EAE0D;QACtDyB,aAAa,GAAG,KAAhB;MACH;IACJ,CAND,CAME,OAAOpV,CAAP,EAAU,CACX;;IACD,IAAIoV,aAAJ,EAAmB;MACfH,uBAAuB,CAACI,QAAD,EAAW,IAAIvd,WAAJ,EAAX,CAAvB;IACH;EACJ,CAbD,CAaE,OAAOkI,CAAP,EAAU,CACX,CA10Ie,CA40IhB;EACA;;;EAEAiV,uBAAuB,CAAC1gB,OAAD,EAAU,IAAIuD,WAAJ,EAAV,CAAvB;;EAEA,CAAC,YAAY;IACT,IAAIwd,MAAM,GAAG,IAAIxd,WAAJ,EAAb;IAEA,IAAIyd,iBAAiB,GAAG,IAAIjG,iBAAJ,EAAxB;IACA,IAAIkG,uBAAuB,GAAG,IAAI7L,gBAAJ,EAA9B;IACA,IAAI8L,uBAAuB,GAAG,IAAIpG,gBAAJ,EAA9B;;IAEA,SAASqG,0BAAT,CAAoCjhB,IAApC,EAA0C;MACtC,OAAO;QACHmU,YAAY,EAAE,UAAUV,MAAV,EAAkB7F,IAAlB,EAAwB;UAClC,IAAIgD,EAAE,GAAG5Q,IAAI,CAACyT,MAAD,EAAS7F,IAAT,CAAb;UAEA,OAAOgD,EAAE,IAAIkQ,iBAAiB,CAAC3M,YAAlB,CAA+BV,MAA/B,EAAuC7F,IAAvC,CAAb;QACH;MALE,CAAP;IAOH;;IAED,SAASsT,wBAAT,CAAkCxV,GAAlC,EAAuC;MACnC,OAAOuV,0BAA0B,CAACvV,GAAG,CAACyI,YAAJ,CAAiB1D,IAAjB,CAAsB/E,GAAtB,CAAD,CAAjC;IACH;;IAED,SAASyV,qBAAT,CAA+B9f,GAA/B,EAAoC;MAChC,OAAO4f,0BAA0B,CAAC,UAAUxN,MAAV,EAAkB;QAChD,OAAOpS,GAAG,CAACoS,MAAD,CAAV;MACH,CAFgC,CAAjC;IAGH;;IAED,SAAS2N,cAAT,CAAwBC,QAAxB,EAAkC;MAC9B,IAAIA,QAAQ,IAAI,OAAOA,QAAQ,CAAClN,YAAhB,KAAiC,UAAjD,EAA6D;QACzD,OAAO+M,wBAAwB,CAACG,QAAD,CAA/B;MACH;;MAED,IAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;QAChC,OAAOJ,0BAA0B,CAACI,QAAD,CAAjC;MACH,CAP6B,CAS9B;;;MACA,IAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;QAC9B,OAAOF,qBAAqB,CAACE,QAAD,CAA5B;MACH;;MAED,OAAOP,iBAAP;IACH;IAED;;;IACA,SAASQ,YAAT,CAAsB1f,KAAtB,EAA6B;MACzB,IAAIA,KAAK,KAAK,IAAV,IACA,OAAOA,KAAP,KAAiB,WADjB,IAEAA,KAAK,YAAY0D,OAFjB,IAGA1D,KAAK,YAAY8T,QAHjB,IAIA9T,KAAK,YAAY2D,OAJjB,IAKA3D,KAAK,YAAYiP,QALrB,EAK+B;QAC3B,OAAOjP,KAAP;MACH;;MAED,QAAQ,OAAOA,KAAf;QACI,KAAK,QAAL;UAAe,OAAO,IAAI0D,OAAJ,CAAY1D,KAAZ,CAAP;;QACf,KAAK,SAAL;UAAgB,OAAO,IAAI8T,QAAJ,CAAa9T,KAAb,CAAP;;QAChB,KAAK,QAAL;UAAe,OAAO,IAAI2D,OAAJ,CAAY3D,KAAZ,CAAP;MAHnB,CAVyB,CAgBzB;;;MACA,IAAIgP,EAAE,GAAG,IAAIC,QAAJ,EAAT;MACAD,EAAE,CAACQ,QAAH,CAAY,GAAG1Q,MAAH,CAAUkB,KAAV,CAAZ;MACA,OAAOgP,EAAP;IACH;;IAED,SAAS2Q,aAAT,CAAuBvhB,IAAvB,EAA6B;MACzB,OAAO,UAAUwQ,OAAV,EAAmB;QACtB,IAAIjQ,IAAI,GAAGL,KAAK,CAACC,SAAN,CAAgBF,KAAhB,CAAsBU,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,EAAyCS,GAAzC,CAA6C,UAAUmgB,GAAV,EAAe;UACnE,OAAOA,GAAG,CAAC5V,QAAJ,CAAa4E,OAAb,CAAP;QACH,CAFU,CAAX;QAGA,IAAI/N,MAAM,GAAGzC,IAAI,CAACS,KAAL,CAAW,IAAX,EAAiB,GAAGC,MAAH,CAAU8P,OAAV,EAAmBjQ,IAAnB,CAAjB,CAAb;QACA,OAAO+gB,YAAY,CAAC7e,MAAD,CAAnB;MACH,CAND;IAOH;;IAED,SAASgf,gCAAT,CAA0CzhB,IAA1C,EAAgD;MAC5C,OAAO;QACHqc,WAAW,EAAE,UAAUhS,IAAV,EAAgByP,SAAhB,EAA2B;UACpC,IAAI4H,KAAK,GAAG1hB,IAAI,CAACqK,IAAD,EAAOyP,SAAP,CAAhB;;UACA,IAAI4H,KAAJ,EAAW;YACP,OAAOH,aAAa,CAACG,KAAD,CAApB;UACH;;UACD,OAAOX,uBAAuB,CAAC1E,WAAxB,CAAoChS,IAApC,EAA0CyP,SAA1C,CAAP;QACH;MAPE,CAAP;IASH;;IAED,SAAS6H,8BAAT,CAAwCjW,GAAxC,EAA6C;MACzC,OAAO+V,gCAAgC,CAAC/V,GAAG,CAAC2Q,WAAJ,CAAgB5L,IAAhB,CAAqB/E,GAArB,CAAD,CAAvC;IACH;;IAED,SAASkW,2BAAT,CAAqCvgB,GAArC,EAA0C;MACtC,OAAOogB,gCAAgC,CAAC,UAAUpX,IAAV,EAAgB;QACpD,OAAOhJ,GAAG,CAACgJ,IAAD,CAAV;MACH,CAFsC,CAAvC;IAGH;;IAED,SAASwX,oBAAT,CAA8BR,QAA9B,EAAwC;MACpC,IAAIA,QAAQ,IAAI,OAAOA,QAAQ,CAAChF,WAAhB,KAAgC,UAAhD,EAA4D;QACxD,OAAOsF,8BAA8B,CAACN,QAAD,CAArC;MACH;;MAED,IAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;QAChC,OAAOI,gCAAgC,CAACJ,QAAD,CAAvC;MACH,CAPmC,CASpC;;;MACA,IAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;QAC9B,OAAOO,2BAA2B,CAACP,QAAD,CAAlC;MACH;;MAED,OAAON,uBAAP;IACH;;IAED,SAASe,gCAAT,CAA0C9hB,IAA1C,EAAgD;MAC5C,OAAO;QACHgV,WAAW,EAAE,UAAU3K,IAAV,EAAgByP,SAAhB,EAA2B;UACpC,IAAIlY,KAAK,GAAG5B,IAAI,CAACqK,IAAD,EAAOyP,SAAP,CAAhB;UACA,OAAOwH,YAAY,CAAC1f,KAAD,CAAnB;QACH;MAJE,CAAP;IAMH;;IAED,SAASmgB,oBAAT,CAA8BV,QAA9B,EAAwC;MACpC,IAAIA,QAAJ,EAAc;QACV,IAAI,OAAOA,QAAQ,CAACrM,WAAhB,KAAgC,UAApC,EAAgD;UAC5C,OAAO8M,gCAAgC,CAACT,QAAQ,CAACrM,WAAT,CAAqBvE,IAArB,CAA0B4Q,QAA1B,CAAD,CAAvC;QACH;;QAED,IAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;UAChC,OAAOS,gCAAgC,CAACT,QAAD,CAAvC;QACH,CAPS,CASV;;;QACA,IAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;UAC9B,OAAOS,gCAAgC,CAAC,UAAUzX,IAAV,EAAgB;YACpD,OAAOgX,QAAQ,CAAChX,IAAD,CAAf;UACH,CAFsC,CAAvC;QAGH;MACJ;;MAED,OAAO2W,uBAAP;IACH;;IAED,SAASgB,aAAT,CAAuBrW,IAAvB,EAA6BsW,IAA7B,EAAmCC,MAAnC,EAA2C;MACvC,IAAIvW,IAAI,IAAIuW,MAAZ,EAAoB;QAAED,IAAI,CAACtW,IAAD,CAAJ,GAAauW,MAAM,CAACvW,IAAD,CAAnB;MAA4B;IACrD;;IAED,SAASwW,WAAT,CAAqBC,OAArB,EAA8B;MAC1B,IAAI5R,OAAO,GAAG,IAAIU,YAAJ,EAAd;;MAEA,IAAIkR,OAAJ,EAAa;QACT5R,OAAO,CAAC0D,iBAAR,GAA4BkN,cAAc,CAACgB,OAAO,CAACC,UAAT,CAA1C;QACA7R,OAAO,CAAC4E,gBAAR,GAA2ByM,oBAAoB,CAACO,OAAO,CAACnH,SAAT,CAA/C;QACAzK,OAAO,CAACuE,gBAAR,GAA2BgN,oBAAoB,CAACK,OAAO,CAACE,SAAT,CAA/C;QACA9R,OAAO,CAAC1E,qBAAR,GAAgCsW,OAAO,CAACxU,IAAxC;QACAoU,aAAa,CAAC,8BAAD,EAAiCxR,OAAjC,EAA0C4R,OAA1C,CAAb;QACAJ,aAAa,CAAC,QAAD,EAAWxR,OAAX,EAAoB4R,OAApB,CAAb;MACH,CAPD,MAOO;QACH5R,OAAO,CAAC0D,iBAAR,GAA4B4M,iBAA5B;MACH;;MAED,OAAOtQ,OAAP;IACH;;IAED,SAAS5E,QAAT,CAAkB2W,gBAAlB,EAAoCH,OAApC,EAA6C;MACzC,IAAI5R,OAAO,GAAG2R,WAAW,CAACC,OAAD,CAAzB;MAEA,OAAOG,gBAAgB,CAAC3W,QAAjB,CAA0B4E,OAA1B,CAAP;IACH;;IAED,IAAIgS,kBAAkB,GAAG;MACrB5W,QAAQ,EAAE,UAAUwW,OAAV,EAAmB;QACzB,OAAOxW,QAAQ,CAAC,KAAKJ,UAAN,EAAkB4W,OAAlB,CAAf;MACH,CAHoB;MAKnBK,cAAc,EAAE,UAAUL,OAAV,EAAmB;QACjC,OAAO,KAAKxW,QAAL,CAAcwW,OAAd,EAAuB/Q,WAAvB,EAAP;MACH,CAPoB;MASnBqR,cAAc,EAAE,UAAUN,OAAV,EAAmB;QACjC,OAAO,KAAKxW,QAAL,CAAcwW,OAAd,EAAuBzM,WAAvB,EAAP;MACH,CAXoB;MAanBgN,eAAe,EAAE,UAAUP,OAAV,EAAmB;QAClC,OAAO,KAAKxW,QAAL,CAAcwW,OAAd,EAAuBzV,YAAvB,EAAP;MACH,CAfoB;MAiBnBiW,eAAe,EAAE,UAAUR,OAAV,EAAmB;QAClC,OAAO,KAAKxW,QAAL,CAAcwW,OAAd,EAAuB7U,OAAvB,EAAP;MACH,CAnBoB;MAqBnBsV,MAAM,EAAE,UAAUT,OAAV,EAAmB;QACzB,OAAO,KAAKQ,eAAL,CAAqBR,OAArB,EAA8BnI,OAA9B,EAAP;MACH,CAvBoB;MAyBnB6I,OAAO,EAAE,UAAUV,OAAV,EAAmB;QAC1B,OAAO,KAAKS,MAAL,CAAYT,OAAZ,EAAqB,CAArB,CAAP;MACH;IA3BoB,CAAzB;;IA8BA,SAASzX,KAAT,CAAe9K,KAAf,EAAsB;MAClB,IAAIkjB,MAAM,GAAGlC,MAAM,CAAClW,KAAP,CAAa9K,KAAb,CAAb;MAEA,OAAOmD,MAAM,CAAC4b,MAAP,CAAc4D,kBAAd,EAAkC;QACrChX,UAAU,EAAE;UACR5J,KAAK,EAAEmhB;QADC;MADyB,CAAlC,CAAP;IAKH;;IAEDjjB,OAAO,CAAC6K,KAAR,GAAgBA,KAAhB;EACH,CAtND;;EAwNA/H,MAAM,CACF9C,OADE,EAEF;IACIwL,KADJ;IAEIjI,WAFJ;IAGI8b,WAHJ;IAKIpa,IALJ;IAMIL,QANJ;IAOIO,QAPJ;IAQIQ,YARJ;IAUI9B,WAVJ;IAWIC,YAXJ;IAaIa,YAbJ;IAeIZ,eAfJ;IAgBIC,iBAhBJ;IAiBIC,iBAjBJ;IAkBIC,oBAlBJ;IAmBIC,wBAnBJ;IAoBIC,2BApBJ;IAsBIC,aAtBJ;IAuBIC,cAvBJ;IAwBIC,iBAxBJ;IAyBIC,YAzBJ;IA0BIC,YA1BJ;IA2BIC,mBA3BJ;IA6BIgB,YA7BJ;IA8BImB,iBA9BJ;IAgCIuK,YAhCJ;IAkCIL,QAlCJ;IAmCI6E,QAnCJ;IAoCIpQ,OApCJ;IAqCIC,OArCJ;IAuCIsV,iBAvCJ;IAwCI3F,gBAxCJ;IAyCI0F,gBAzCJ;IA2CIzV;EA3CJ,CAFE,CAAN,CAziJgB,CA0lJhB;;EACArF,OAAO,CAAC+iB,MAAR,GAAiB,UAAUtX,CAAV,EAAaqG,GAAb,EAAkBoR,MAAlB,EAA0B;IACvC,OAAOljB,OAAO,CAACmjB,kBAAR,CAA2B1X,CAA3B,EAA8BqG,GAA9B,EAAmC,IAAnC,EAAyCoR,MAAzC,CAAP;EACH,CAFD;;EAIAljB,OAAO,CAACojB,aAAR,GAAwB,UAAUC,QAAV,EAAoB;IACxC,IAAI9B,QAAQ,GAAG;MACX8B,QAAQ,EAAEA,QAAQ,IAAI,EADX;MAEX9D,kBAAkB,EAAE,UAAU5L,MAAV,EAAkB;QAClC,OAAO,KAAK0P,QAAL,CAAc1P,MAAd,CAAP;MACH;IAJU,CAAf;IAOA,OAAO,UAAUlI,CAAV,EAAaqG,GAAb,EAAkBoR,MAAlB,EAA0B;MAC7B,OAAOljB,OAAO,CAACmjB,kBAAR,CAA2B1X,CAA3B,EAA8BqG,GAA9B,EAAmCyP,QAAnC,EAA6C2B,MAA7C,CAAP;IACH,CAFD;EAGH,CAXD;;EAaAljB,OAAO,CAACmjB,kBAAR,GAA6B,UAAU1X,CAAV,EAAaqG,GAAb,EAAkByP,QAAlB,EAA4B2B,MAA5B,EAAoC;IAC7D,IAAIxX,UAAU,GAAG,IAAIqT,eAAJ,CAAoBtT,CAApB,EAAuB8V,QAAvB,EAAiC,IAAIhe,WAAJ,EAAjC,CAAjB;IACA,IAAIiP,IAAI,GAAG6M,WAAW,CAACI,QAAvB;IAEA,IAAI9c,MAAM,GAAG+I,UAAU,CAACI,QAAX,CAAoBgG,GAApB,EAAyBU,IAAzB,EAA+B,IAA/B,CAAb;;IAEA,IAAI7P,MAAM,CAACmd,UAAP,IAAqBT,WAAW,CAACK,WAArC,EAAkD;MAC9C/c,MAAM,GAAGA,MAAM,CAACkT,WAAhB;IACH,CAFD,MAGK,IAAIlT,MAAM,CAACmd,UAAP,IAAqBT,WAAW,CAACM,WAArC,EAAkD;MACnDhd,MAAM,GAAGA,MAAM,CAAC4O,WAAhB;IACH,CAFI,MAGA,IAAI5O,MAAM,CAACmd,UAAP,IAAqBT,WAAW,CAACO,YAArC,EAAmD;MACpDjd,MAAM,GAAGA,MAAM,CAACkK,YAAhB;IACH,CAFI,MAGA;MACDlK,MAAM,GAAGA,MAAM,CAACuL,KAAhB;;MACA,IAAIgV,MAAJ,EAAY;QACRvgB,MAAM,GAAGA,MAAM,CAAC,CAAD,CAAf;MACH;IACJ;;IAED,OAAOA,MAAP;EACH,CAvBD;;EAyBA3C,OAAO,CAACgjB,OAAR,GAAkB,UAAUvX,CAAV,EAAaqG,GAAb,EAAkB;IAChC,OAAO9R,OAAO,CAAC+iB,MAAR,CAAetX,CAAf,EAAkBqG,GAAlB,EAAuB,IAAvB,CAAP;EACH,CAFD,CAroJgB,CAyoJhB;;AACH,CA1oJD,EA0oJG/R,KA1oJH"},"metadata":{},"sourceType":"script"}