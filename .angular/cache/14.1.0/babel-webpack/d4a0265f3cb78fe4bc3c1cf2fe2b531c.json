{"ast":null,"code":"/* jshint laxcomma: true */\nvar utils = require('./utils');\n\nexports.ExclusiveCanonicalization = ExclusiveCanonicalization;\nexports.ExclusiveCanonicalizationWithComments = ExclusiveCanonicalizationWithComments;\n\nfunction ExclusiveCanonicalization() {\n  this.includeComments = false;\n}\n\n;\n\nExclusiveCanonicalization.prototype.attrCompare = function (a, b) {\n  if (!a.namespaceURI && b.namespaceURI) {\n    return -1;\n  }\n\n  if (!b.namespaceURI && a.namespaceURI) {\n    return 1;\n  }\n\n  var left = a.namespaceURI + a.localName;\n  var right = b.namespaceURI + b.localName;\n  if (left === right) return 0;else if (left < right) return -1;else return 1;\n};\n\nExclusiveCanonicalization.prototype.nsCompare = function (a, b) {\n  var attr1 = a.prefix;\n  var attr2 = b.prefix;\n\n  if (attr1 == attr2) {\n    return 0;\n  }\n\n  return attr1.localeCompare(attr2);\n};\n\nExclusiveCanonicalization.prototype.renderAttrs = function (node, defaultNS) {\n  var a,\n      i,\n      attr,\n      res = [],\n      attrListToRender = [];\n\n  if (node.nodeType === 8) {\n    return this.renderComment(node);\n  }\n\n  if (node.attributes) {\n    for (i = 0; i < node.attributes.length; ++i) {\n      attr = node.attributes[i]; //ignore namespace definition attributes\n\n      if (attr.name.indexOf(\"xmlns\") === 0) {\n        continue;\n      }\n\n      attrListToRender.push(attr);\n    }\n  }\n\n  attrListToRender.sort(this.attrCompare);\n\n  for (a in attrListToRender) {\n    if (!attrListToRender.hasOwnProperty(a)) {\n      continue;\n    }\n\n    attr = attrListToRender[a];\n    res.push(\" \", attr.name, '=\"', utils.encodeSpecialCharactersInAttribute(attr.value), '\"');\n  }\n\n  return res.join(\"\");\n};\n\nfunction isPrefixInScope(prefixesInScope, prefix, namespaceURI) {\n  var ret = false;\n  prefixesInScope.forEach(function (pf) {\n    if (pf.prefix === prefix && pf.namespaceURI === namespaceURI) {\n      ret = true;\n    }\n  });\n  return ret;\n}\n/**\n * Create the string of all namespace declarations that should appear on this element\n *\n * @param {Node} node. The node we now render\n * @param {Array} prefixesInScope. The prefixes defined on this node\n *                parents which are a part of the output set\n * @param {String} defaultNs. The current default namespace\n * @return {String}\n * @api private\n */\n\n\nExclusiveCanonicalization.prototype.renderNs = function (node, prefixesInScope, defaultNs, defaultNsForPrefix, inclusiveNamespacesPrefixList) {\n  var a,\n      i,\n      p,\n      attr,\n      res = [],\n      newDefaultNs = defaultNs,\n      nsListToRender = [],\n      currNs = node.namespaceURI || \"\"; //handle the namespaceof the node itself\n\n  if (node.prefix) {\n    if (!isPrefixInScope(prefixesInScope, node.prefix, node.namespaceURI || defaultNsForPrefix[node.prefix])) {\n      nsListToRender.push({\n        \"prefix\": node.prefix,\n        \"namespaceURI\": node.namespaceURI || defaultNsForPrefix[node.prefix]\n      });\n      prefixesInScope.push({\n        \"prefix\": node.prefix,\n        \"namespaceURI\": node.namespaceURI || defaultNsForPrefix[node.prefix]\n      });\n    }\n  } else if (defaultNs != currNs) {\n    //new default ns\n    newDefaultNs = node.namespaceURI;\n    res.push(' xmlns=\"', newDefaultNs, '\"');\n  } //handle the attributes namespace\n\n\n  if (node.attributes) {\n    for (i = 0; i < node.attributes.length; ++i) {\n      attr = node.attributes[i]; //handle all prefixed attributes that are included in the prefix list and where\n      //the prefix is not defined already\n\n      if (attr.prefix && !isPrefixInScope(prefixesInScope, attr.localName, attr.value) && inclusiveNamespacesPrefixList.indexOf(attr.localName) >= 0) {\n        nsListToRender.push({\n          \"prefix\": attr.localName,\n          \"namespaceURI\": attr.value\n        });\n        prefixesInScope.push({\n          \"prefix\": attr.localName,\n          \"namespaceURI\": attr.value\n        });\n      } //handle all prefixed attributes that are not xmlns definitions and where\n      //the prefix is not defined already\n\n\n      if (attr.prefix && !isPrefixInScope(prefixesInScope, attr.prefix, attr.namespaceURI) && attr.prefix != \"xmlns\" && attr.prefix != \"xml\") {\n        nsListToRender.push({\n          \"prefix\": attr.prefix,\n          \"namespaceURI\": attr.namespaceURI\n        });\n        prefixesInScope.push({\n          \"prefix\": attr.prefix,\n          \"namespaceURI\": attr.namespaceURI\n        });\n      }\n    }\n  }\n\n  nsListToRender.sort(this.nsCompare); //render namespaces\n\n  for (a in nsListToRender) {\n    if (!nsListToRender.hasOwnProperty(a)) {\n      continue;\n    }\n\n    p = nsListToRender[a];\n    res.push(\" xmlns:\", p.prefix, '=\"', p.namespaceURI, '\"');\n  }\n\n  return {\n    \"rendered\": res.join(\"\"),\n    \"newDefaultNs\": newDefaultNs\n  };\n};\n\nExclusiveCanonicalization.prototype.processInner = function (node, prefixesInScope, defaultNs, defaultNsForPrefix, inclusiveNamespacesPrefixList) {\n  if (node.nodeType === 8) {\n    return this.renderComment(node);\n  }\n\n  if (node.data) {\n    return utils.encodeSpecialCharactersInText(node.data);\n  }\n\n  var i,\n      pfxCopy,\n      ns = this.renderNs(node, prefixesInScope, defaultNs, defaultNsForPrefix, inclusiveNamespacesPrefixList),\n      res = [\"<\", node.tagName, ns.rendered, this.renderAttrs(node, ns.newDefaultNs), \">\"];\n\n  for (i = 0; i < node.childNodes.length; ++i) {\n    pfxCopy = prefixesInScope.slice(0);\n    res.push(this.processInner(node.childNodes[i], pfxCopy, ns.newDefaultNs, defaultNsForPrefix, inclusiveNamespacesPrefixList));\n  }\n\n  res.push(\"</\", node.tagName, \">\");\n  return res.join(\"\");\n}; // Thanks to deoxxa/xml-c14n for comment renderer\n\n\nExclusiveCanonicalization.prototype.renderComment = function (node) {\n  if (!this.includeComments) {\n    return \"\";\n  }\n\n  var isOutsideDocument = node.ownerDocument === node.parentNode,\n      isBeforeDocument = null,\n      isAfterDocument = null;\n\n  if (isOutsideDocument) {\n    var nextNode = node,\n        previousNode = node;\n\n    while (nextNode !== null) {\n      if (nextNode === node.ownerDocument.documentElement) {\n        isBeforeDocument = true;\n        break;\n      }\n\n      nextNode = nextNode.nextSibling;\n    }\n\n    while (previousNode !== null) {\n      if (previousNode === node.ownerDocument.documentElement) {\n        isAfterDocument = true;\n        break;\n      }\n\n      previousNode = previousNode.previousSibling;\n    }\n  }\n\n  return (isAfterDocument ? \"\\n\" : \"\") + \"<!--\" + utils.encodeSpecialCharactersInText(node.data) + \"-->\" + (isBeforeDocument ? \"\\n\" : \"\");\n};\n/**\n * Perform canonicalization of the given node\n *\n * @param {Node} node\n * @return {String}\n * @api public\n */\n\n\nExclusiveCanonicalization.prototype.process = function (node, options) {\n  options = options || {};\n  var inclusiveNamespacesPrefixList = options.inclusiveNamespacesPrefixList || [];\n  var defaultNs = options.defaultNs || \"\";\n  var defaultNsForPrefix = options.defaultNsForPrefix || {};\n\n  if (!(inclusiveNamespacesPrefixList instanceof Array)) {\n    inclusiveNamespacesPrefixList = inclusiveNamespacesPrefixList.split(' ');\n  }\n\n  var ancestorNamespaces = options.ancestorNamespaces || [];\n  /**\n   * If the inclusiveNamespacesPrefixList has not been explicitly provided then look it up in CanonicalizationMethod/InclusiveNamespaces\n   */\n\n  if (inclusiveNamespacesPrefixList.length == 0) {\n    var CanonicalizationMethod = utils.findChilds(node, \"CanonicalizationMethod\");\n\n    if (CanonicalizationMethod.length != 0) {\n      var inclusiveNamespaces = utils.findChilds(CanonicalizationMethod[0], \"InclusiveNamespaces\");\n\n      if (inclusiveNamespaces.length != 0) {\n        inclusiveNamespacesPrefixList = inclusiveNamespaces[0].getAttribute('PrefixList').split(\" \");\n      }\n    }\n  }\n  /**\n   * If you have a PrefixList then use it and the ancestors to add the necessary namespaces\n   */\n\n\n  if (inclusiveNamespacesPrefixList) {\n    var prefixList = inclusiveNamespacesPrefixList instanceof Array ? inclusiveNamespacesPrefixList : inclusiveNamespacesPrefixList.split(' ');\n    prefixList.forEach(function (prefix) {\n      if (ancestorNamespaces) {\n        ancestorNamespaces.forEach(function (ancestorNamespace) {\n          if (prefix == ancestorNamespace.prefix) {\n            node.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:' + prefix, ancestorNamespace.namespaceURI);\n          }\n        });\n      }\n    });\n  }\n\n  var res = this.processInner(node, [], defaultNs, defaultNsForPrefix, inclusiveNamespacesPrefixList);\n  return res;\n};\n\nExclusiveCanonicalization.prototype.getAlgorithmName = function () {\n  return \"http://www.w3.org/2001/10/xml-exc-c14n#\";\n}; // Add c14n#WithComments here (very simple subclass)\n\n\nexports.ExclusiveCanonicalizationWithComments = ExclusiveCanonicalizationWithComments;\n\nfunction ExclusiveCanonicalizationWithComments() {\n  ExclusiveCanonicalization.call(this);\n  this.includeComments = true;\n}\n\n;\nExclusiveCanonicalizationWithComments.prototype = Object.create(ExclusiveCanonicalization.prototype);\nExclusiveCanonicalizationWithComments.prototype.constructor = ExclusiveCanonicalizationWithComments;\n\nExclusiveCanonicalizationWithComments.prototype.getAlgorithmName = function () {\n  return \"http://www.w3.org/2001/10/xml-exc-c14n#WithComments\";\n};","map":{"version":3,"names":["utils","require","exports","ExclusiveCanonicalization","ExclusiveCanonicalizationWithComments","includeComments","prototype","attrCompare","a","b","namespaceURI","left","localName","right","nsCompare","attr1","prefix","attr2","localeCompare","renderAttrs","node","defaultNS","i","attr","res","attrListToRender","nodeType","renderComment","attributes","length","name","indexOf","push","sort","hasOwnProperty","encodeSpecialCharactersInAttribute","value","join","isPrefixInScope","prefixesInScope","ret","forEach","pf","renderNs","defaultNs","defaultNsForPrefix","inclusiveNamespacesPrefixList","p","newDefaultNs","nsListToRender","currNs","processInner","data","encodeSpecialCharactersInText","pfxCopy","ns","tagName","rendered","childNodes","slice","isOutsideDocument","ownerDocument","parentNode","isBeforeDocument","isAfterDocument","nextNode","previousNode","documentElement","nextSibling","previousSibling","process","options","Array","split","ancestorNamespaces","CanonicalizationMethod","findChilds","inclusiveNamespaces","getAttribute","prefixList","ancestorNamespace","setAttributeNS","getAlgorithmName","call","Object","create","constructor"],"sources":["C:/Users/ayber/node_modules/xml-crypto/lib/exclusive-canonicalization.js"],"sourcesContent":["/* jshint laxcomma: true */\nvar utils = require('./utils');\n\nexports.ExclusiveCanonicalization = ExclusiveCanonicalization;\nexports.ExclusiveCanonicalizationWithComments = ExclusiveCanonicalizationWithComments;\n\nfunction ExclusiveCanonicalization() {\n\tthis.includeComments = false;\n};\n\nExclusiveCanonicalization.prototype.attrCompare = function(a,b) {\n  if (!a.namespaceURI && b.namespaceURI) { return -1; }\n  if (!b.namespaceURI && a.namespaceURI) { return 1; }\n\n  var left = a.namespaceURI + a.localName\n  var right = b.namespaceURI + b.localName\n\n  if (left===right) return 0\n  else if (left<right) return -1\n  else return 1\n\n};\n\nExclusiveCanonicalization.prototype.nsCompare = function(a,b) {\n  var attr1 = a.prefix;\n  var attr2 = b.prefix;\n  if (attr1 == attr2) { return 0; }\n  return attr1.localeCompare(attr2);\n};\n\nExclusiveCanonicalization.prototype.renderAttrs = function(node, defaultNS) {\n  var a, i, attr\n    , res = []\n    , attrListToRender = [];\n\n  if (node.nodeType===8) { return this.renderComment(node); }\n\n  if (node.attributes) {\n    for (i = 0; i < node.attributes.length; ++i) {\n      attr = node.attributes[i];\n      //ignore namespace definition attributes\n      if (attr.name.indexOf(\"xmlns\") === 0) { continue; }\n      attrListToRender.push(attr);\n    }\n  }\n\n  attrListToRender.sort(this.attrCompare);\n\n  for (a in attrListToRender) {\n    if (!attrListToRender.hasOwnProperty(a)) { continue; }\n\n    attr = attrListToRender[a];\n    res.push(\" \", attr.name, '=\"', utils.encodeSpecialCharactersInAttribute(attr.value), '\"');\n  }\n\n  return res.join(\"\");\n};\n\nfunction isPrefixInScope(prefixesInScope, prefix, namespaceURI)\n{\n  var ret = false;\n  prefixesInScope.forEach(function (pf) {\n    if (pf.prefix === prefix && pf.namespaceURI === namespaceURI) {\n      ret = true;\n    }\n  })\n\n  return ret;\n}\n\n/**\n * Create the string of all namespace declarations that should appear on this element\n *\n * @param {Node} node. The node we now render\n * @param {Array} prefixesInScope. The prefixes defined on this node\n *                parents which are a part of the output set\n * @param {String} defaultNs. The current default namespace\n * @return {String}\n * @api private\n */\nExclusiveCanonicalization.prototype.renderNs = function(node, prefixesInScope, defaultNs, defaultNsForPrefix, inclusiveNamespacesPrefixList) {\n  var a, i, p, attr\n    , res = []\n    , newDefaultNs = defaultNs\n    , nsListToRender = []\n    , currNs = node.namespaceURI || \"\";\n\n  //handle the namespaceof the node itself\n  if (node.prefix) {\n    if (!isPrefixInScope(prefixesInScope, node.prefix, node.namespaceURI || defaultNsForPrefix[node.prefix])) {\n      nsListToRender.push({\"prefix\": node.prefix, \"namespaceURI\": node.namespaceURI || defaultNsForPrefix[node.prefix]});\n      prefixesInScope.push({\"prefix\": node.prefix, \"namespaceURI\": node.namespaceURI || defaultNsForPrefix[node.prefix]});\n    }\n  }\n  else if (defaultNs!=currNs) {\n      //new default ns\n      newDefaultNs = node.namespaceURI;\n      res.push(' xmlns=\"', newDefaultNs, '\"');\n  }\n\n  //handle the attributes namespace\n  if (node.attributes) {\n    for (i = 0; i < node.attributes.length; ++i) {\n      attr = node.attributes[i];\n\n      //handle all prefixed attributes that are included in the prefix list and where\n      //the prefix is not defined already\n      if (attr.prefix && !isPrefixInScope(prefixesInScope, attr.localName, attr.value) && inclusiveNamespacesPrefixList.indexOf(attr.localName) >= 0) {\n        nsListToRender.push({\"prefix\": attr.localName, \"namespaceURI\": attr.value});\n        prefixesInScope.push({\"prefix\": attr.localName, \"namespaceURI\": attr.value});\n      }\n\n      //handle all prefixed attributes that are not xmlns definitions and where\n      //the prefix is not defined already\n      if (attr.prefix && !isPrefixInScope(prefixesInScope, attr.prefix, attr.namespaceURI) && attr.prefix!=\"xmlns\" && attr.prefix!=\"xml\") {\n        nsListToRender.push({\"prefix\": attr.prefix, \"namespaceURI\": attr.namespaceURI});\n        prefixesInScope.push({\"prefix\": attr.prefix, \"namespaceURI\": attr.namespaceURI});\n      }\n    }\n  }\n\n  nsListToRender.sort(this.nsCompare);\n\n  //render namespaces\n  for (a in nsListToRender) {\n    if (!nsListToRender.hasOwnProperty(a)) { continue; }\n\n    p = nsListToRender[a];\n    res.push(\" xmlns:\", p.prefix, '=\"', p.namespaceURI, '\"');\n  }\n\n  return {\"rendered\": res.join(\"\"), \"newDefaultNs\": newDefaultNs};\n};\n\nExclusiveCanonicalization.prototype.processInner = function(node, prefixesInScope, defaultNs, defaultNsForPrefix, inclusiveNamespacesPrefixList) {\n\n  if (node.nodeType === 8) { return this.renderComment(node); }\n  if (node.data) { return utils.encodeSpecialCharactersInText(node.data); }\n\n  var i, pfxCopy\n    , ns = this.renderNs(node, prefixesInScope, defaultNs, defaultNsForPrefix, inclusiveNamespacesPrefixList)\n    , res = [\"<\", node.tagName, ns.rendered, this.renderAttrs(node, ns.newDefaultNs), \">\"];\n\n  for (i = 0; i < node.childNodes.length; ++i) {\n    pfxCopy = prefixesInScope.slice(0);\n    res.push(this.processInner(node.childNodes[i], pfxCopy, ns.newDefaultNs, defaultNsForPrefix, inclusiveNamespacesPrefixList));\n  }\n\n  res.push(\"</\", node.tagName, \">\");\n  return res.join(\"\");\n};\n\n// Thanks to deoxxa/xml-c14n for comment renderer\nExclusiveCanonicalization.prototype.renderComment = function (node) {\n\n  if (!this.includeComments) { return \"\"; }\n\n  var isOutsideDocument = (node.ownerDocument === node.parentNode),\n      isBeforeDocument = null,\n      isAfterDocument = null;\n\n  if (isOutsideDocument) {\n    var nextNode = node,\n        previousNode = node;\n\n    while (nextNode !== null) {\n      if (nextNode === node.ownerDocument.documentElement) {\n        isBeforeDocument = true;\n        break;\n      }\n\n      nextNode = nextNode.nextSibling;\n    }\n\n    while (previousNode !== null) {\n      if (previousNode === node.ownerDocument.documentElement) {\n        isAfterDocument = true;\n        break;\n      }\n\n      previousNode = previousNode.previousSibling;\n    }\n  }\n\n  return (isAfterDocument ? \"\\n\" : \"\") + \"<!--\" + utils.encodeSpecialCharactersInText(node.data) + \"-->\" + (isBeforeDocument ? \"\\n\" : \"\");\n};\n\n/**\n * Perform canonicalization of the given node\n *\n * @param {Node} node\n * @return {String}\n * @api public\n */\nExclusiveCanonicalization.prototype.process = function(node, options) {\n  options = options || {};\n  var inclusiveNamespacesPrefixList = options.inclusiveNamespacesPrefixList || [];\n  var defaultNs = options.defaultNs || \"\";\n  var defaultNsForPrefix = options.defaultNsForPrefix || {};\n  if (!(inclusiveNamespacesPrefixList instanceof Array)) { inclusiveNamespacesPrefixList = inclusiveNamespacesPrefixList.split(' '); }\n\n  var ancestorNamespaces = options.ancestorNamespaces || [];\n  \n  /**\n   * If the inclusiveNamespacesPrefixList has not been explicitly provided then look it up in CanonicalizationMethod/InclusiveNamespaces\n   */  \n  if (inclusiveNamespacesPrefixList.length == 0) {\n    var CanonicalizationMethod = utils.findChilds(node, \"CanonicalizationMethod\")\n    if (CanonicalizationMethod.length != 0) {\n      var inclusiveNamespaces = utils.findChilds(CanonicalizationMethod[0], \"InclusiveNamespaces\")\n      if (inclusiveNamespaces.length != 0) {\n          inclusiveNamespacesPrefixList = inclusiveNamespaces[0].getAttribute('PrefixList').split(\" \");\n      }\n    }\n  }\n  \n  /**\n   * If you have a PrefixList then use it and the ancestors to add the necessary namespaces\n   */\n  if (inclusiveNamespacesPrefixList) {\n    var prefixList = inclusiveNamespacesPrefixList instanceof Array ? inclusiveNamespacesPrefixList : inclusiveNamespacesPrefixList.split(' ');\n    prefixList.forEach(function (prefix) {\n      if (ancestorNamespaces)  {\n        ancestorNamespaces.forEach(function (ancestorNamespace) {\n          if (prefix == ancestorNamespace.prefix) {\n            node.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:' + prefix, ancestorNamespace.namespaceURI);\n          }\n        })\n      }\n    })\n  }\n\n  var res = this.processInner(node, [], defaultNs, defaultNsForPrefix, inclusiveNamespacesPrefixList);\n  return res;\n};\n\nExclusiveCanonicalization.prototype.getAlgorithmName = function() {\n  return \"http://www.w3.org/2001/10/xml-exc-c14n#\";\n};\n\n// Add c14n#WithComments here (very simple subclass)\nexports.ExclusiveCanonicalizationWithComments = ExclusiveCanonicalizationWithComments;\n\nfunction ExclusiveCanonicalizationWithComments() {\n\tExclusiveCanonicalization.call(this);\n\tthis.includeComments = true;\n};\n\nExclusiveCanonicalizationWithComments.prototype = Object.create(ExclusiveCanonicalization.prototype);\n\nExclusiveCanonicalizationWithComments.prototype.constructor = ExclusiveCanonicalizationWithComments;\n\nExclusiveCanonicalizationWithComments.prototype.getAlgorithmName = function() {\n  return \"http://www.w3.org/2001/10/xml-exc-c14n#WithComments\";\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}