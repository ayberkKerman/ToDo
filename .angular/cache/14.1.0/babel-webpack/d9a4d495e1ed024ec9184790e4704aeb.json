{"ast":null,"code":"'use strict'; // Original source at https://github.com/elasticio/node-ntlm-client/blob/master/lib/hash.js\n\nvar crypto = require('crypto');\n\nfunction createLMResponse(challenge, lmhash) {\n  var buf = new Buffer.alloc(24),\n      pwBuffer = new Buffer.alloc(21).fill(0);\n  lmhash.copy(pwBuffer);\n  calculateDES(pwBuffer.slice(0, 7), challenge).copy(buf);\n  calculateDES(pwBuffer.slice(7, 14), challenge).copy(buf, 8);\n  calculateDES(pwBuffer.slice(14), challenge).copy(buf, 16);\n  return buf;\n}\n\nfunction createLMHash(password) {\n  var buf = new Buffer.alloc(16),\n      pwBuffer = new Buffer.alloc(14),\n      magicKey = new Buffer.from('KGS!@#$%', 'ascii');\n\n  if (password.length > 14) {\n    buf.fill(0);\n    return buf;\n  }\n\n  pwBuffer.fill(0);\n  pwBuffer.write(password.toUpperCase(), 0, 'ascii');\n  return Buffer.concat([calculateDES(pwBuffer.slice(0, 7), magicKey), calculateDES(pwBuffer.slice(7), magicKey)]);\n}\n\nfunction calculateDES(key, message) {\n  var desKey = new Buffer.alloc(8);\n  desKey[0] = key[0] & 0xFE;\n  desKey[1] = key[0] << 7 & 0xFF | key[1] >> 1;\n  desKey[2] = key[1] << 6 & 0xFF | key[2] >> 2;\n  desKey[3] = key[2] << 5 & 0xFF | key[3] >> 3;\n  desKey[4] = key[3] << 4 & 0xFF | key[4] >> 4;\n  desKey[5] = key[4] << 3 & 0xFF | key[5] >> 5;\n  desKey[6] = key[5] << 2 & 0xFF | key[6] >> 6;\n  desKey[7] = key[6] << 1 & 0xFF;\n\n  for (var i = 0; i < 8; i++) {\n    var parity = 0;\n\n    for (var j = 1; j < 8; j++) {\n      parity += (desKey[i] >> j) % 2;\n    }\n\n    desKey[i] |= parity % 2 === 0 ? 1 : 0;\n  }\n\n  var des = crypto.createCipheriv('DES-ECB', desKey, '');\n  return des.update(message);\n}\n\nfunction createNTLMResponse(challenge, ntlmhash) {\n  var buf = new Buffer.alloc(24),\n      ntlmBuffer = new Buffer.alloc(21).fill(0);\n  ntlmhash.copy(ntlmBuffer);\n  calculateDES(ntlmBuffer.slice(0, 7), challenge).copy(buf);\n  calculateDES(ntlmBuffer.slice(7, 14), challenge).copy(buf, 8);\n  calculateDES(ntlmBuffer.slice(14), challenge).copy(buf, 16);\n  return buf;\n}\n\nfunction createNTLMHash(password) {\n  var md4sum = crypto.createHash('md4');\n  md4sum.update(new Buffer.from(password, 'ucs2'));\n  return md4sum.digest();\n}\n\nfunction createNTLMv2Hash(ntlmhash, username, authTargetName) {\n  var hmac = crypto.createHmac('md5', ntlmhash);\n  hmac.update(new Buffer.from(username.toUpperCase() + authTargetName, 'ucs2'));\n  return hmac.digest();\n}\n\nfunction createLMv2Response(type2message, username, ntlmhash, nonce, targetName) {\n  var buf = new Buffer.alloc(24),\n      ntlm2hash = createNTLMv2Hash(ntlmhash, username, targetName),\n      hmac = crypto.createHmac('md5', ntlm2hash); //server challenge\n\n  type2message.challenge.copy(buf, 8); //client nonce\n\n  buf.write(nonce || createPseudoRandomValue(16), 16, 'hex'); //create hash\n\n  hmac.update(buf.slice(8));\n  var hashedBuffer = hmac.digest();\n  hashedBuffer.copy(buf);\n  return buf;\n}\n\nfunction createNTLMv2Response(type2message, username, ntlmhash, nonce, targetName) {\n  var buf = new Buffer.alloc(48 + type2message.targetInfo.buffer.length),\n      ntlm2hash = createNTLMv2Hash(ntlmhash, username, targetName),\n      hmac = crypto.createHmac('md5', ntlm2hash); //the first 8 bytes are spare to store the hashed value before the blob\n  //server challenge\n\n  type2message.challenge.copy(buf, 8); //blob signature\n\n  buf.writeUInt32BE(0x01010000, 16); //reserved\n\n  buf.writeUInt32LE(0, 20); //timestamp\n  //TODO: we are loosing precision here since js is not able to handle those large integers\n  // maybe think about a different solution here\n  // 11644473600000 = diff between 1970 and 1601\n\n  var timestamp = ((Date.now() + 11644473600000) * 10000).toString(16);\n  var timestampLow = Number('0x' + timestamp.substring(Math.max(0, timestamp.length - 8)));\n  var timestampHigh = Number('0x' + timestamp.substring(0, Math.max(0, timestamp.length - 8)));\n  buf.writeUInt32LE(timestampLow, 24, false);\n  buf.writeUInt32LE(timestampHigh, 28, false); //random client nonce\n\n  buf.write(nonce || createPseudoRandomValue(16), 32, 'hex'); //zero\n\n  buf.writeUInt32LE(0, 40); //complete target information block from type 2 message\n\n  type2message.targetInfo.buffer.copy(buf, 44); //zero\n\n  buf.writeUInt32LE(0, 44 + type2message.targetInfo.buffer.length);\n  hmac.update(buf.slice(8));\n  var hashedBuffer = hmac.digest();\n  hashedBuffer.copy(buf);\n  return buf;\n}\n\nfunction createPseudoRandomValue(length) {\n  var str = '';\n\n  while (str.length < length) {\n    str += Math.floor(Math.random() * 16).toString(16);\n  }\n\n  return str;\n}\n\nmodule.exports = {\n  createLMHash: createLMHash,\n  createNTLMHash: createNTLMHash,\n  createLMResponse: createLMResponse,\n  createNTLMResponse: createNTLMResponse,\n  createLMv2Response: createLMv2Response,\n  createNTLMv2Response: createNTLMv2Response,\n  createPseudoRandomValue: createPseudoRandomValue\n};","map":{"version":3,"names":["crypto","require","createLMResponse","challenge","lmhash","buf","Buffer","alloc","pwBuffer","fill","copy","calculateDES","slice","createLMHash","password","magicKey","from","length","write","toUpperCase","concat","key","message","desKey","i","parity","j","des","createCipheriv","update","createNTLMResponse","ntlmhash","ntlmBuffer","createNTLMHash","md4sum","createHash","digest","createNTLMv2Hash","username","authTargetName","hmac","createHmac","createLMv2Response","type2message","nonce","targetName","ntlm2hash","createPseudoRandomValue","hashedBuffer","createNTLMv2Response","targetInfo","buffer","writeUInt32BE","writeUInt32LE","timestamp","Date","now","toString","timestampLow","Number","substring","Math","max","timestampHigh","str","floor","random","module","exports"],"sources":["C:/Users/ayber/node_modules/axios-ntlm/lib/hash.js"],"sourcesContent":["'use strict';\n// Original source at https://github.com/elasticio/node-ntlm-client/blob/master/lib/hash.js\nvar crypto = require('crypto');\nfunction createLMResponse(challenge, lmhash) {\n    var buf = new Buffer.alloc(24), pwBuffer = new Buffer.alloc(21).fill(0);\n    lmhash.copy(pwBuffer);\n    calculateDES(pwBuffer.slice(0, 7), challenge).copy(buf);\n    calculateDES(pwBuffer.slice(7, 14), challenge).copy(buf, 8);\n    calculateDES(pwBuffer.slice(14), challenge).copy(buf, 16);\n    return buf;\n}\nfunction createLMHash(password) {\n    var buf = new Buffer.alloc(16), pwBuffer = new Buffer.alloc(14), magicKey = new Buffer.from('KGS!@#$%', 'ascii');\n    if (password.length > 14) {\n        buf.fill(0);\n        return buf;\n    }\n    pwBuffer.fill(0);\n    pwBuffer.write(password.toUpperCase(), 0, 'ascii');\n    return Buffer.concat([\n        calculateDES(pwBuffer.slice(0, 7), magicKey),\n        calculateDES(pwBuffer.slice(7), magicKey)\n    ]);\n}\nfunction calculateDES(key, message) {\n    var desKey = new Buffer.alloc(8);\n    desKey[0] = key[0] & 0xFE;\n    desKey[1] = ((key[0] << 7) & 0xFF) | (key[1] >> 1);\n    desKey[2] = ((key[1] << 6) & 0xFF) | (key[2] >> 2);\n    desKey[3] = ((key[2] << 5) & 0xFF) | (key[3] >> 3);\n    desKey[4] = ((key[3] << 4) & 0xFF) | (key[4] >> 4);\n    desKey[5] = ((key[4] << 3) & 0xFF) | (key[5] >> 5);\n    desKey[6] = ((key[5] << 2) & 0xFF) | (key[6] >> 6);\n    desKey[7] = (key[6] << 1) & 0xFF;\n    for (var i = 0; i < 8; i++) {\n        var parity = 0;\n        for (var j = 1; j < 8; j++) {\n            parity += (desKey[i] >> j) % 2;\n        }\n        desKey[i] |= (parity % 2) === 0 ? 1 : 0;\n    }\n    var des = crypto.createCipheriv('DES-ECB', desKey, '');\n    return des.update(message);\n}\nfunction createNTLMResponse(challenge, ntlmhash) {\n    var buf = new Buffer.alloc(24), ntlmBuffer = new Buffer.alloc(21).fill(0);\n    ntlmhash.copy(ntlmBuffer);\n    calculateDES(ntlmBuffer.slice(0, 7), challenge).copy(buf);\n    calculateDES(ntlmBuffer.slice(7, 14), challenge).copy(buf, 8);\n    calculateDES(ntlmBuffer.slice(14), challenge).copy(buf, 16);\n    return buf;\n}\nfunction createNTLMHash(password) {\n    var md4sum = crypto.createHash('md4');\n    md4sum.update(new Buffer.from(password, 'ucs2'));\n    return md4sum.digest();\n}\nfunction createNTLMv2Hash(ntlmhash, username, authTargetName) {\n    var hmac = crypto.createHmac('md5', ntlmhash);\n    hmac.update(new Buffer.from(username.toUpperCase() + authTargetName, 'ucs2'));\n    return hmac.digest();\n}\nfunction createLMv2Response(type2message, username, ntlmhash, nonce, targetName) {\n    var buf = new Buffer.alloc(24), ntlm2hash = createNTLMv2Hash(ntlmhash, username, targetName), hmac = crypto.createHmac('md5', ntlm2hash);\n    //server challenge\n    type2message.challenge.copy(buf, 8);\n    //client nonce\n    buf.write(nonce || createPseudoRandomValue(16), 16, 'hex');\n    //create hash\n    hmac.update(buf.slice(8));\n    var hashedBuffer = hmac.digest();\n    hashedBuffer.copy(buf);\n    return buf;\n}\nfunction createNTLMv2Response(type2message, username, ntlmhash, nonce, targetName) {\n    var buf = new Buffer.alloc(48 + type2message.targetInfo.buffer.length), ntlm2hash = createNTLMv2Hash(ntlmhash, username, targetName), hmac = crypto.createHmac('md5', ntlm2hash);\n    //the first 8 bytes are spare to store the hashed value before the blob\n    //server challenge\n    type2message.challenge.copy(buf, 8);\n    //blob signature\n    buf.writeUInt32BE(0x01010000, 16);\n    //reserved\n    buf.writeUInt32LE(0, 20);\n    //timestamp\n    //TODO: we are loosing precision here since js is not able to handle those large integers\n    // maybe think about a different solution here\n    // 11644473600000 = diff between 1970 and 1601\n    var timestamp = ((Date.now() + 11644473600000) * 10000).toString(16);\n    var timestampLow = Number('0x' + timestamp.substring(Math.max(0, timestamp.length - 8)));\n    var timestampHigh = Number('0x' + timestamp.substring(0, Math.max(0, timestamp.length - 8)));\n    buf.writeUInt32LE(timestampLow, 24, false);\n    buf.writeUInt32LE(timestampHigh, 28, false);\n    //random client nonce\n    buf.write(nonce || createPseudoRandomValue(16), 32, 'hex');\n    //zero\n    buf.writeUInt32LE(0, 40);\n    //complete target information block from type 2 message\n    type2message.targetInfo.buffer.copy(buf, 44);\n    //zero\n    buf.writeUInt32LE(0, 44 + type2message.targetInfo.buffer.length);\n    hmac.update(buf.slice(8));\n    var hashedBuffer = hmac.digest();\n    hashedBuffer.copy(buf);\n    return buf;\n}\nfunction createPseudoRandomValue(length) {\n    var str = '';\n    while (str.length < length) {\n        str += Math.floor(Math.random() * 16).toString(16);\n    }\n    return str;\n}\nmodule.exports = {\n    createLMHash: createLMHash,\n    createNTLMHash: createNTLMHash,\n    createLMResponse: createLMResponse,\n    createNTLMResponse: createNTLMResponse,\n    createLMv2Response: createLMv2Response,\n    createNTLMv2Response: createNTLMv2Response,\n    createPseudoRandomValue: createPseudoRandomValue\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}